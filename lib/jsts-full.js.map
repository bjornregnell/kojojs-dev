{"version":3,"file":"jsts-full.js","sources":["Array.js","Number.js","Math.js","org/locationtech/jts/util/NumberUtil.js","java/lang/IllegalArgumentException.js","java/lang/Long.js","java/lang/Double.js","java/lang/Comparable.js","java/lang/Cloneable.js","java/util/Comparator.js","java/io/Serializable.js","java/lang/RuntimeException.js","org/locationtech/jts/util/AssertionFailedException.js","org/locationtech/jts/util/Assert.js","org/locationtech/jts/geom/Coordinate.js","hasInterface.js","java/util/Iterator.js","java/util/Collection.js","java/util/IndexOutOfBoundsException.js","java/util/List.js","java/util/NoSuchElementException.js","java/util/OperationNotSupported.js","java/util/ArrayList.js","org/locationtech/jts/geom/CoordinateList.js","org/locationtech/jts/geom/Envelope.js","java/lang/Exception.js","org/locationtech/jts/algorithm/NotRepresentableException.js","java/lang/StringBuffer.js","java/lang/Integer.js","java/lang/Character.js","org/locationtech/jts/math/DD.js","org/locationtech/jts/algorithm/CGAlgorithmsDD.js","org/locationtech/jts/algorithm/Orientation.js","java/lang/System.js","org/locationtech/jts/algorithm/HCoordinate.js","org/locationtech/jts/math/MathUtil.js","org/locationtech/jts/algorithm/Distance.js","org/locationtech/jts/geom/CoordinateSequence.js","org/locationtech/jts/geom/CoordinateSequenceFactory.js","org/locationtech/jts/geom/GeometryComponentFilter.js","org/locationtech/jts/geom/Geometry.js","org/locationtech/jts/geom/CoordinateFilter.js","org/locationtech/jts/algorithm/BoundaryNodeRule.js","org/locationtech/jts/geom/CoordinateArrays.js","java/util/Map.js","java/util/SortedMap.js","java/util/Set.js","java/util/HashSet.js","java/util/TreeMap.js","org/locationtech/jts/geom/Lineal.js","java/util/SortedSet.js","java/util/TreeSet.js","java/util/Arrays.js","org/locationtech/jts/geom/Dimension.js","org/locationtech/jts/geom/GeometryFilter.js","org/locationtech/jts/geom/CoordinateSequenceFilter.js","org/locationtech/jts/geom/GeometryCollection.js","org/locationtech/jts/geom/MultiLineString.js","org/locationtech/jts/operation/BoundaryOp.js","org/locationtech/jts/algorithm/Length.js","java/io/PrintStream.js","java/io/StringReader.js","java/text/DecimalFormat.js","java/io/ByteArrayOutputStream.js","java/io/IOException.js","java/io/LineNumberReader.js","org/locationtech/jts/util/StringUtil.js","java/lang/StringBuilder.js","org/locationtech/jts/geom/CoordinateSequences.js","org/locationtech/jts/geom/LineString.js","org/locationtech/jts/geom/Puntal.js","org/locationtech/jts/geom/Point.js","org/locationtech/jts/algorithm/Area.js","org/locationtech/jts/geom/Polygonal.js","org/locationtech/jts/geom/Polygon.js","org/locationtech/jts/geom/MultiPoint.js","org/locationtech/jts/geom/LinearRing.js","org/locationtech/jts/geom/MultiPolygon.js","org/locationtech/jts/geom/util/GeometryEditor.js","org/locationtech/jts/geom/impl/CoordinateArraySequence.js","org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","Map.js","java/util/HashMap.js","org/locationtech/jts/geom/PrecisionModel.js","org/locationtech/jts/geom/GeometryFactory.js","org/locationtech/jts/io/WKTParser.js","org/locationtech/jts/io/WKTWriter.js","org/locationtech/jts/algorithm/LineIntersector.js","org/locationtech/jts/algorithm/RobustLineIntersector.js","org/locationtech/jts/geom/LineSegment.js","org/locationtech/jts/geom/Location.js","org/locationtech/jts/geom/IntersectionMatrix.js","org/locationtech/jts/algorithm/Angle.js","org/locationtech/jts/geom/Triangle.js","org/locationtech/jts/geom/util/NoninvertibleTransformationException.js","org/locationtech/jts/geom/util/AffineTransformation.js","org/locationtech/jts/math/Vector2D.js","org/locationtech/jts/algorithm/distance/PointPairDistance.js","org/locationtech/jts/algorithm/distance/DistanceToPoint.js","org/locationtech/jts/algorithm/distance/DiscreteHausdorffDistance.js","org/locationtech/jts/index/ItemVisitor.js","org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","java/util/Collections.js","org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","org/locationtech/jts/geom/util/LinearComponentExtracter.js","org/locationtech/jts/index/ArrayListVisitor.js","org/locationtech/jts/algorithm/RayCrossingCounter.js","org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","org/locationtech/jts/algorithm/PointLocation.js","org/locationtech/jts/geom/GeometryCollectionIterator.js","org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","org/locationtech/jts/algorithm/match/SimilarityMeasure.js","org/locationtech/jts/algorithm/match/AreaSimilarityMeasure.js","org/locationtech/jts/algorithm/match/HausdorffSimilarityMeasure.js","org/locationtech/jts/algorithm/match/SimilarityMeasureCombiner.js","org/locationtech/jts/algorithm/Centroid.js","java/util/EmptyStackException.js","java/util/Stack.js","org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","org/locationtech/jts/algorithm/ConvexHull.js","org/locationtech/jts/algorithm/InteriorPointArea.js","org/locationtech/jts/algorithm/InteriorPointLine.js","org/locationtech/jts/algorithm/InteriorPointPoint.js","org/locationtech/jts/algorithm/MinimumBoundingCircle.js","org/locationtech/jts/algorithm/MinimumDiameter.js","org/locationtech/jts/geom/util/GeometryTransformer.js","org/locationtech/jts/densify/Densifier.js","org/locationtech/jts/geomgraph/Quadrant.js","org/locationtech/jts/edgegraph/HalfEdge.js","org/locationtech/jts/edgegraph/MarkHalfEdge.js","org/locationtech/jts/edgegraph/EdgeGraph.js","org/locationtech/jts/dissolve/DissolveHalfEdge.js","org/locationtech/jts/dissolve/DissolveEdgeGraph.js","org/locationtech/jts/dissolve/LineDissolver.js","org/locationtech/jts/algorithm/PointLocator.js","org/locationtech/jts/geomgraph/Position.js","org/locationtech/jts/geomgraph/index/MonotoneChain.js","org/locationtech/jts/geomgraph/index/SweepLineEvent.js","org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","org/locationtech/jts/geomgraph/index/SegmentIntersector.js","org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","org/locationtech/jts/geomgraph/TopologyLocation.js","org/locationtech/jts/geomgraph/Label.js","org/locationtech/jts/geomgraph/EdgeIntersection.js","org/locationtech/jts/geomgraph/EdgeIntersectionList.js","org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","org/locationtech/jts/geomgraph/Depth.js","org/locationtech/jts/geomgraph/GraphComponent.js","org/locationtech/jts/geomgraph/Edge.js","org/locationtech/jts/geomgraph/Node.js","org/locationtech/jts/geomgraph/NodeMap.js","org/locationtech/jts/geomgraph/EdgeEnd.js","org/locationtech/jts/geom/TopologyException.js","org/locationtech/jts/geomgraph/DirectedEdge.js","org/locationtech/jts/geomgraph/NodeFactory.js","org/locationtech/jts/geomgraph/PlanarGraph.js","org/locationtech/jts/geomgraph/GeometryGraph.js","org/locationtech/jts/index/kdtree/KdNodeVisitor.js","org/locationtech/jts/index/kdtree/KdNode.js","org/locationtech/jts/index/kdtree/KdTree.js","org/locationtech/jts/index/quadtree/NodeBase.js","org/locationtech/jts/index/quadtree/DoubleBits.js","org/locationtech/jts/index/quadtree/Key.js","org/locationtech/jts/index/quadtree/Node.js","org/locationtech/jts/index/quadtree/IntervalSize.js","org/locationtech/jts/index/quadtree/Root.js","org/locationtech/jts/index/SpatialIndex.js","org/locationtech/jts/index/quadtree/Quadtree.js","org/locationtech/jts/index/strtree/Boundable.js","org/locationtech/jts/index/strtree/ItemBoundable.js","org/locationtech/jts/util/PriorityQueue.js","org/locationtech/jts/index/strtree/AbstractNode.js","org/locationtech/jts/index/strtree/BoundablePair.js","org/locationtech/jts/index/strtree/AbstractSTRtree.js","org/locationtech/jts/index/strtree/ItemDistance.js","org/locationtech/jts/index/strtree/STRtree.js","org/locationtech/jts/io/GeoJSONParser.js","org/locationtech/jts/io/GeoJSONReader.js","org/locationtech/jts/io/GeoJSONWriter.js","org/locationtech/jts/io/WKTReader.js","org/locationtech/jts/io/OL3Parser.js","org/locationtech/jts/noding/SegmentPointComparator.js","org/locationtech/jts/noding/SegmentNode.js","org/locationtech/jts/noding/SegmentNodeList.js","org/locationtech/jts/noding/Octant.js","org/locationtech/jts/noding/SegmentString.js","org/locationtech/jts/noding/NodableSegmentString.js","org/locationtech/jts/noding/NodedSegmentString.js","org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","org/locationtech/jts/index/chain/MonotoneChain.js","org/locationtech/jts/index/chain/MonotoneChainBuilder.js","org/locationtech/jts/noding/Noder.js","org/locationtech/jts/noding/SinglePassNoder.js","org/locationtech/jts/noding/MCIndexNoder.js","org/locationtech/jts/noding/ScaledNoder.js","org/locationtech/jts/operation/IsSimpleOp.js","org/locationtech/jts/operation/buffer/BufferParameters.js","org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","java/util/LinkedList.js","org/locationtech/jts/operation/buffer/BufferSubgraph.js","org/locationtech/jts/geomgraph/EdgeRing.js","org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","org/locationtech/jts/operation/overlay/PolygonBuilder.js","org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","org/locationtech/jts/operation/buffer/OffsetSegmentString.js","org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","org/locationtech/jts/geomgraph/EdgeEndStar.js","org/locationtech/jts/geomgraph/DirectedEdgeStar.js","org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","org/locationtech/jts/noding/OrientedCoordinateArray.js","org/locationtech/jts/geomgraph/EdgeList.js","org/locationtech/jts/noding/SegmentIntersector.js","org/locationtech/jts/noding/IntersectionAdder.js","org/locationtech/jts/operation/buffer/BufferBuilder.js","org/locationtech/jts/noding/NodingValidator.js","org/locationtech/jts/noding/snapround/HotPixel.js","org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","org/locationtech/jts/operation/buffer/BufferOp.js","org/locationtech/jts/geom/util/PolygonExtracter.js","org/locationtech/jts/operation/distance/GeometryLocation.js","org/locationtech/jts/geom/util/PointExtracter.js","org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","org/locationtech/jts/operation/distance/DistanceOp.js","org/locationtech/jts/operation/linemerge/EdgeString.js","org/locationtech/jts/planargraph/GraphComponent.js","org/locationtech/jts/planargraph/DirectedEdge.js","org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","org/locationtech/jts/planargraph/Edge.js","org/locationtech/jts/planargraph/DirectedEdgeStar.js","org/locationtech/jts/planargraph/Node.js","org/locationtech/jts/operation/linemerge/LineMergeEdge.js","org/locationtech/jts/planargraph/NodeMap.js","org/locationtech/jts/planargraph/PlanarGraph.js","org/locationtech/jts/operation/linemerge/LineMergeGraph.js","org/locationtech/jts/operation/linemerge/LineMerger.js","org/locationtech/jts/noding/BasicSegmentString.js","org/locationtech/jts/noding/InteriorIntersectionFinder.js","org/locationtech/jts/noding/FastNodingValidator.js","org/locationtech/jts/geomgraph/EdgeNodingValidator.js","org/locationtech/jts/geom/util/GeometryCollectionMapper.js","org/locationtech/jts/geom/util/MapOp.js","org/locationtech/jts/operation/overlay/LineBuilder.js","org/locationtech/jts/operation/overlay/PointBuilder.js","org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","org/locationtech/jts/precision/CommonBits.js","org/locationtech/jts/precision/CommonBitsRemover.js","org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","org/locationtech/jts/operation/GeometryGraphOperation.js","org/locationtech/jts/operation/overlay/OverlayOp.js","org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","org/locationtech/jts/operation/polygonize/EdgeRing.js","org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","org/locationtech/jts/operation/polygonize/Polygonizer.js","org/locationtech/jts/operation/relate/EdgeEndBuilder.js","org/locationtech/jts/operation/relate/EdgeEndBundle.js","org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","org/locationtech/jts/operation/relate/RelateNode.js","org/locationtech/jts/operation/relate/RelateNodeFactory.js","org/locationtech/jts/operation/relate/RelateComputer.js","org/locationtech/jts/operation/predicate/RectangleContains.js","org/locationtech/jts/algorithm/RectangleLineIntersector.js","org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","org/locationtech/jts/operation/predicate/RectangleIntersects.js","org/locationtech/jts/operation/relate/RelateOp.js","org/locationtech/jts/geom/util/GeometryCombiner.js","org/locationtech/jts/operation/union/PointGeometryUnion.js","org/locationtech/jts/geom/util/GeometryExtracter.js","org/locationtech/jts/operation/union/CascadedPolygonUnion.js","org/locationtech/jts/operation/union/UnaryUnionOp.js","org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","org/locationtech/jts/operation/relate/RelateNodeGraph.js","org/locationtech/jts/operation/valid/ConsistentAreaTester.js","org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","org/locationtech/jts/operation/valid/TopologyValidationError.js","org/locationtech/jts/operation/valid/IsValidOp.js","org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","org/locationtech/jts/precision/GeometryPrecisionReducer.js","org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","org/locationtech/jts/simplify/TaggedLineSegment.js","org/locationtech/jts/simplify/TaggedLineString.js","org/locationtech/jts/simplify/LineSegmentIndex.js","org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","org/locationtech/jts/simplify/TaggedLinesSimplifier.js","org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","org/locationtech/jts/triangulate/SplitSegment.js","org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","org/locationtech/jts/triangulate/quadedge/Vertex.js","org/locationtech/jts/triangulate/ConstraintVertex.js","org/locationtech/jts/triangulate/quadedge/QuadEdge.js","org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","org/locationtech/jts/triangulate/Segment.js","org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","org/locationtech/jts/linearref/LinearLocation.js","org/locationtech/jts/linearref/LinearIterator.js","org/locationtech/jts/linearref/LocationIndexOfPoint.js","org/locationtech/jts/linearref/LocationIndexOfLine.js","org/locationtech/jts/linearref/LinearGeometryBuilder.js","org/locationtech/jts/linearref/ExtractLineByLocation.js","org/locationtech/jts/linearref/LocationIndexedLine.js","org/locationtech/jts/linearref/LengthIndexOfPoint.js","org/locationtech/jts/linearref/LengthLocationMap.js","org/locationtech/jts/linearref/LengthIndexedLine.js","org/locationtech/jts/operation/union/UnionOp.js","org/locationtech/jts/monkey.js","jsts.js"],"sourcesContent":["/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill(value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object');\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike;\n    },\n    writable: true\n  });\n}\n","Number.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n}\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n}\n\nNumber.parseFloat = Number.parseFloat || parseFloat\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n}\n","Math.trunc = Math.trunc || function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n}\n\nMath.log2 = Math.log2 || function(x) {\n  return Math.log(x) * Math.LOG2E\n}\n","export default class NumberUtil {\n\tconstructor() {\n\t\tNumberUtil.constructor_.apply(this, arguments);\n\t}\n\tstatic equalsWithTolerance(x1, x2, tolerance) {\n\t\treturn Math.abs(x1 - x2) <= tolerance;\n\t}\n\tgetClass() {\n\t\treturn NumberUtil;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNumberUtil.constructor_ = function () {};\n","export default function IllegalArgumentException (message) {\n  this.message = message\n}\n","export default function Long(high, low) {\n  this.low = low | 0\n  this.high = high | 0\n}\n\nLong.toBinaryString = function (i) {\n  var result = ''\n  for (var mask = 0x80000000; mask > 0; mask >>>= 1)\n    result += (i.high & mask) === mask ? '1' : '0'\n  for (var mask = 0x80000000; mask > 0; mask >>>= 1)\n    result += (i.low & mask) === mask ? '1' : '0'\n  return result\n}","import Long from './Long';\n\nexport default function Double () {}\n\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\n\nif (typeof Float64Array == 'function' &&\n\t  typeof Int32Array == 'function') {\n\t// Simple and fast conversion between double and long bits\n\t// using TypedArrays and ArrayViewBuffers.\n\t(function() {\n\t\tvar EXP_BIT_MASK = 0x7ff00000;\n\t\tvar SIGNIF_BIT_MASK = 0xFFFFF;\n\t\tvar f64buf = new Float64Array(1);\n\t\tvar i32buf = new Int32Array(f64buf.buffer);\n\t\tDouble.doubleToLongBits = function (value) {\n\t\t\tf64buf[0] = value;\n\t\t\tvar low = i32buf[0] | 0;\n\t\t\tvar high = i32buf[1] | 0;\n\t\t\t// Check for NaN based on values of bit fields, maximum\n\t\t\t// exponent and nonzero significand.\n\t\t\tif (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n\t\t\t\t((high & SIGNIF_BIT_MASK) !== 0) &&\n\t\t\t\t(low !== 0)) {\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = 0x7ff80000 | 0;\n\t\t\t}\n\t\t\treturn new Long(high, low);\n\t\t};\n\t\tDouble.longBitsToDouble = function (bits) {\n\t\t\ti32buf[0] = bits.low;\n\t\t\ti32buf[1] = bits.high;\n\t\t\treturn f64buf[0];\n\t\t};\n\t})();\n} else {\n\t// More complex and slower fallback implementation using \n\t// math and the divide-by-two and multiply-by-two algorithms.\n\t(function() {\n\t\tvar BIAS = 1023;\n\t\tvar log2 = Math.log2;\n\t\tvar floor = Math.floor;\n\t\tvar pow = Math.pow;\n\t\tvar MAX_REL_BITS_INTEGER = (function () {\n\t\t\tfor (var i = 53; i > 0; i--) {\n\t\t\t\tvar bits = pow(2, i) - 1;\n\t\t\t\tif (floor(log2(bits)) + 1 === i) {\n\t\t\t\t\treturn bits;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t})();\n\t\tDouble.doubleToLongBits = function (value) {\n\t\t\tvar x, y, f, bits, skip;\n\t\t\tvar sign, exp, high, low;\n\t\n\t\t\t// Get the sign bit and absolute value.\n\t\t\tif (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n\t\t\t\tsign = (1 << 31);\n\t\t\t\tvalue = (-value);\n\t\t\t} else {\n\t\t\t\tsign = 0;\n\t\t\t}\n\t\n\t\t\t// Handle some special values.\n\t\t\tif (value === 0) {\n\t\t\t\t// Handle zeros (+/-0).\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = sign; // exponent: 00..00, significand: 00..00\n\t\t\t\treturn new Long(high, low);\n\t\t\t}\n\t\n\t\t\tif (value === Infinity) {\n\t\t\t\t// Handle infinity (only positive values for value possible).\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = sign | 0x7ff00000; // exponent: 11..11, significand: 00..00\n\t\t\t\treturn new Long(high, low);\n\t\t\t}\n\t\n\t\t\tif (value !== value) {\n\t\t\t\t// Handle NaNs (boiled down to only one distinct NaN).\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = 0x7ff80000; // exponent: 11..11, significand: 10..00\n\t\t\t\treturn new Long(high, low);\n\t\t\t}\n\t\n\t\t\t// Preinitialize variables, that are not neccessarily set by\n\t\t\t// the algorithm.\n\t\t\tbits = 0;\n\t\t\tlow = 0 | 0;\n\t\n\t\t\t// Get the (always positive) integer part of value.\n\t\t\tx = floor(value);\n\t\n\t\t\t// Process the integer part if it's greater than 1. Zero requires\n\t\t\t// no bits at all, 1 represents the implicit (hidden) leading bit,\n\t\t\t// which must not be written as well.\n\t\t\tif (x > 1) {\n\t\t\t\t// If we can reliably determine the number of bits required for\n\t\t\t\t// the integer part,\n\t\t\t\tif (x <= MAX_REL_BITS_INTEGER) {\n\t\t\t\t\t// get the number of bits required to represent it minus 1\n\t\t\t\t\tbits = floor(log2(x)) /* + 1 - 1*/ ;\n\t\t\t\t\t// and simply copy/shift the integer bits into low and high.\n\t\t\t\t\t// That's much faster than the divide-by-two algorithm (saves\n\t\t\t\t\t// up to ~60%).\n\t\t\t\t\t// We always need to mask out the most significant bit, which\n\t\t\t\t\t// is the implicit (aka hidden) bit.\n\t\t\t\t\tif (bits <= 20) {\n\t\t\t\t\t\t// The simple case in which the integer fits into the\n\t\t\t\t\t\t// lower 20 bits of the high word is worth to be handled\n\t\t\t\t\t\t// separately (saves ~25%).\n\t\t\t\t\t\tlow = 0 | 0;\n\t\t\t\t\t\thigh = (x << (20 - bits)) & 0xfffff;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Here, the integer part is split into low and high.\n\t\t\t\t\t\t// Since its value may require more than 32 bits, we\n\t\t\t\t\t\t// cannot use bitwise operators (which implicitly cast\n\t\t\t\t\t\t// to Int32), but use arithmetic operators % and / to\n\t\t\t\t\t\t// get low and high parts. The uppper 20 bits go to high,\n\t\t\t\t\t\t// the remaining bits (in f) to low.\n\t\t\t\t\t\tf = bits - 20;\n\t\t\t\t\t\t// Like (1 << f) but safe with even more than 32 bits.\n\t\t\t\t\t\ty = pow(2, f);\n\t\t\t\t\t\tlow = (x % y) << (32 - f);\n\t\t\t\t\t\thigh = (x / y) & 0xfffff;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// For greater values, we must use the much slower divide-by-two\n\t\t\t\t\t// algorithm. Bits are generated from right to left, that is from\n\t\t\t\t\t// least to most significant bit. For each bit, we left-shift both\n\t\t\t\t\t// low and high by one and carry bit #0 from high to #31 in low.\n\t\t\t\t\t// The next bit is then copied into bit #19 in high, the leftmost\n\t\t\t\t\t// bit of the double's significand.\n\t\n\t\t\t\t\t// Preserve x for later user, so work with f.\n\t\t\t\t\tf = x;\n\t\t\t\t\tlow = 0 | 0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\ty = f / 2;\n\t\t\t\t\t\tf = floor(y);\n\t\t\t\t\t\tif (f === 0) {\n\t\t\t\t\t\t\t// We just found the most signigicant (1-)bit, which\n\t\t\t\t\t\t\t// is the implicit bit and so, not stored in the double\n\t\t\t\t\t\t\t// value. So, it's time to leave the loop.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Count this bit, shift low and carry bit #0 from high.\n\t\t\t\t\t\tbits++;\n\t\t\t\t\t\tlow >>>= 1;\n\t\t\t\t\t\tlow |= (high & 0x1) << 31;\n\t\t\t\t\t\t// Shift high.\n\t\t\t\t\t\thigh >>>= 1;\n\t\t\t\t\t\tif (y !== f) {\n\t\t\t\t\t\t\t// Copy the new bit into bit #19 in high (only required if 1).\n\t\t\t\t\t\t\thigh |= 0x80000;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Bias the exponent.\n\t\t\texp = bits + BIAS;\n\t\n\t\t\t// If the integer part is zero, we've not yet seen the implicit\n\t\t\t// leading bit. Variable skip is later used while processing the \n\t\t\t// fractional part (if any).\n\t\t\tskip = (x === 0);\n\t\n\t\t\t// Get fraction only into x.\n\t\t\tx = value - x;\n\t\n\t\t\t// If some significand bits are still left to be filled and\n\t\t\t// the fractional part is not zero, convert the fraction using\n\t\t\t// the multiply-by-2 algorithm.\n\t\t\tif (bits < 52 && x !== 0) {\n\t\n\t\t\t\t// Initialize 'buffer' f, into which newly created bits get\n\t\t\t\t// shifted from right to left.\n\t\t\t\tf = 0;\n\t\n\t\t\t\twhile (true) {\n\t\t\t\t\ty = x * 2;\n\t\t\t\t\tif (y >= 1) {\n\t\t\t\t\t\t// This is a new 1-bit. Add and count this bit, if not\n\t\t\t\t\t\t// prohibited by skip.\n\t\t\t\t\t\tx = y - 1;\n\t\t\t\t\t\tif (!skip) {\n\t\t\t\t\t\t\tf <<= 1;\n\t\t\t\t\t\t\tf |= 1;\n\t\t\t\t\t\t\tbits++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Otherwise, decrement the exponent and unset\n\t\t\t\t\t\t\t// skip, so that all following bits get written.\n\t\t\t\t\t\t\texp--;\n\t\t\t\t\t\t\tskip = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a new 0-bit. Add and count this bit, if not\n\t\t\t\t\t\t// prohibited by skip.\n\t\t\t\t\t\tx = y;\n\t\t\t\t\t\tif (!skip) {\n\t\t\t\t\t\t\tf <<= 1;\n\t\t\t\t\t\t\tbits++;\n\t\t\t\t\t\t} else if (--exp === 0) {\n\t\t\t\t\t\t\t// Otherwise we've just decremented the exponent. If the\n\t\t\t\t\t\t\t// biased exponent is zero now (-1023), we process a\n\t\t\t\t\t\t\t// subnormal number, which has no impled leading 1-bit.\n\t\t\t\t\t\t\t// So, count this 0-bit and unset skip to write out\n\t\t\t\t\t\t\t// all the following bits.\n\t\t\t\t\t\t\tbits++;\n\t\t\t\t\t\t\tskip = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bits === 20) {\n\t\t\t\t\t\t// When 20 bits have been created in total, we're done with\n\t\t\t\t\t\t// the high word. Copy the bits from 'buffer' f into high\n\t\t\t\t\t\t// and reset 'buffer' f. Following bits will end up in the\n\t\t\t\t\t\t// low word.\n\t\t\t\t\t\thigh |= f;\n\t\t\t\t\t\tf = 0;\n\t\t\t\t\t} else if (bits === 52) {\n\t\t\t\t\t\t// When 52 bits have been created in total, we're done with\n\t\t\t\t\t\t// low word as well. Copy the bits from 'buffer' f into low\n\t\t\t\t\t\t// and exit the loop.\n\t\t\t\t\t\tlow |= f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (y === 1) {\n\t\t\t\t\t\t// When y is exactly 1, there is no remainder and the process\n\t\t\t\t\t\t// is complete (the number is finite). Copy the bits from\n\t\t\t\t\t\t// 'buffer' f into either low or high and exit the loop.\n\t\t\t\t\t\tif (bits < 20) {\n\t\t\t\t\t\t\thigh |= (f << (20 - bits));\n\t\t\t\t\t\t} else if (bits < 52) {\n\t\t\t\t\t\t\tlow |= (f << (52 - bits));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Copy/shift the exponent and sign bits into the high word.\n\t\t\thigh |= (exp << 20);\n\t\t\thigh |= sign;\n\t\n\t\t\treturn new Long(high, low);\n\t\t};\n\t\tDouble.longBitsToDouble = function (bits) {\n\t\t\tvar x, sign, exp, fract;\n\t\t\tvar high = bits.high;\n\t\t\tvar low = bits.low;\n\t\n\t\t\t// Extract the sign.\n\t\t\tsign = (high & (1 << 31)) ? -1 : 1;\n\t\n\t\t\t// Extract the unbiased exponent.\n\t\t\texp = ((high & 0x7ff00000) >> 20) - BIAS;\n\t\n\t\t\t// Calculate the fraction from left to right. Start\n\t\t\t// off with the 20 lower bits from the high word.\n\t\t\tfract = 0;\n\t\t\tx = (1 << 19);\n\t\t\tfor (var i = 1; i <= 20; i++) {\n\t\t\t\tif (high & x) {\n\t\t\t\t\tfract += pow(2, -i);\n\t\t\t\t}\n\t\t\t\tx >>>= 1;\n\t\t\t}\n\t\t\t// Continue with all 32 bits from the low word.\n\t\t\tx = (1 << 31);\n\t\t\tfor (var i = 21; i <= 52; i++) {\n\t\t\t\tif (low & x) {\n\t\t\t\t\tfract += pow(2, -i);\n\t\t\t\t}\n\t\t\t\tx >>>= 1;\n\t\t\t}\n\t\n\t\t\t// Handle special values.\n\t\t\t// Check for zero and subnormal values.\n\t\t\tif (exp === -BIAS) {\n\t\t\t\tif (fract === 0) {\n\t\t\t\t\t// +/-1.0 * 0.0 => +/-0.0\n\t\t\t\t\treturn sign * 0;\n\t\t\t\t}\n\t\t\t\texp = -1022;\n\t\t\t}\n\t\t\t// Check for +/-Infinity or NaN.\n\t\t\telse if (exp === BIAS + 1) {\n\t\t\t\tif (fract === 0) {\n\t\t\t\t\t// +/-1.0 / 0.0 => +/-Infinity\n\t\t\t\t\treturn sign / 0;\n\t\t\t\t}\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// Nothing special? Seems to be a normal number.\n\t\t\telse {\n\t\t\t\t// Add the implicit leading bit (1*2^0).\n\t\t\t\tfract += 1;\n\t\t\t}\n\t\n\t\t\treturn sign * fract * pow(2, exp);\n\t\t};\n\t})();\n}","export default function Comparable () {}\n","export default function Clonable () {}\n","export default function Comparator () {}\n","export default function Serializable () {}\n","export default function RuntimeException (message) {\n  this.name = 'RuntimeException'\n  this.message = message\n  this.stack = (new Error()).stack\n  Error.call(this, message)\n}\n\nRuntimeException.prototype = Object.create(Error.prototype)\nRuntimeException.prototype.constructor = Error\n","import RuntimeException from '../../../../java/lang/RuntimeException';\nexport default class AssertionFailedException extends RuntimeException {\n\tconstructor() {\n\t\tsuper();\n\t\tAssertionFailedException.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn AssertionFailedException;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nAssertionFailedException.constructor_ = function () {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.constructor_.call(this);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tRuntimeException.constructor_.call(this, message);\n\t}\n};\n","import AssertionFailedException from './AssertionFailedException';\nexport default class Assert {\n\tconstructor() {\n\t\tAssert.constructor_.apply(this, arguments);\n\t}\n\tstatic shouldNeverReachHere() {\n\t\tif (arguments.length === 0) {\n\t\t\tAssert.shouldNeverReachHere(null);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet message = arguments[0];\n\t\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n\tstatic isTrue() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet assertion = arguments[0];\n\t\t\tAssert.isTrue(assertion, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet assertion = arguments[0], message = arguments[1];\n\t\t\tif (!assertion) {\n\t\t\t\tif (message === null) {\n\t\t\t\t\tthrow new AssertionFailedException();\n\t\t\t\t} else {\n\t\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic equals() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet expectedValue = arguments[0], actualValue = arguments[1];\n\t\t\tAssert.equals(expectedValue, actualValue, null);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2];\n\t\t\tif (!actualValue.equals(expectedValue)) {\n\t\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Assert;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nAssert.constructor_ = function () {};\n","import NumberUtil from '../util/NumberUtil';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../java/lang/Double';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Comparator from '../../../../java/util/Comparator';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nexport default class Coordinate {\n\tconstructor() {\n\t\tCoordinate.constructor_.apply(this, arguments);\n\t}\n\tstatic hashCode() {\n\t\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\tvar f = Double.doubleToLongBits(x);\n\t\t\treturn Math.trunc(f ^ f >>> 32);\n\t\t}\n\t}\n\tsetOrdinate(ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t}\n\tequals2D() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet c = arguments[0], tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\tgetOrdinate(ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t}\n\tequals3D(other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t}\n\tequals(other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t}\n\tequalInZ(c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t}\n\tcompareTo(o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t}\n\tclone() {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t}\n\tcopy() {\n\t\treturn new Coordinate(this);\n\t}\n\ttoString() {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t}\n\tdistance3D(c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n\tdistance(c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\thashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t}\n\tsetCoordinate(other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t}\n\tgetClass() {\n\t\treturn Coordinate;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable, Cloneable, Serializable];\n\t}\n}\nclass DimensionalComparator {\n\tconstructor() {\n\t\tDimensionalComparator.constructor_.apply(this, arguments);\n\t}\n\tstatic compare(a, b) {\n\t\tif (a < b) return -1;\n\t\tif (a > b) return 1;\n\t\tif (Double.isNaN(a)) {\n\t\t\tif (Double.isNaN(b)) return 0;\n\t\t\treturn -1;\n\t\t}\n\t\tif (Double.isNaN(b)) return 1;\n\t\treturn 0;\n\t}\n\tcompare(o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this._dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t}\n\tgetClass() {\n\t\treturn DimensionalComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n}\nDimensionalComparator.constructor_ = function () {\n\tthis._dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.constructor_.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tlet dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis._dimensionsToTest = dimensionsToTest;\n\t}\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.constructor_ = function () {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.constructor_.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet c = arguments[0];\n\t\tCoordinate.constructor_.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tlet x = arguments[0], y = arguments[1];\n\t\tCoordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tlet x = arguments[0], y = arguments[1], z = arguments[2];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n};\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n","export default function (o, i) {\n  return o.interfaces_ && o.interfaces_.indexOf(i) > -1\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default function Iterator() {};\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function() {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function() {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function() {};\n","import Iterator from './Iterator'\n\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nexport default function Collection() {};\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function() {};\n\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function() {};\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function() {};\n\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function() {};\n\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function() {};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function IndexOutOfBoundsException(message) {\n  this.message = message || '';\n};\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nexport default function List() { };\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function() { };\n\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function() { };\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function() { };\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function NoSuchElementException(message) {\n  this.message = message || '';\n};\nNoSuchElementException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function OperationNotSupported(message) {\n  this.message = message || '';\n};\nOperationNotSupported.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n","import Collection from './Collection'\nimport IndexOutOfBoundsException from './IndexOutOfBoundsException'\nimport Iterator from './Iterator'\nimport List from './List'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nexport default function ArrayList () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nArrayList.prototype = Object.create(List.prototype)\nArrayList.prototype.constructor = ArrayList;\n\nArrayList.prototype.ensureCapacity = function () {}\nArrayList.prototype.interfaces_ = [List, Collection]\n\n/**\n * @override\n */\nArrayList.prototype.add = function(e) {\n  if (arguments.length === 1) {\n    this.array_.push(e)\n  } else {\n    this.array_.splice(arguments[0], 0, arguments[1])\n  }\n  return true\n};\n\nArrayList.prototype.clear = function() {\n  this.array_ = []\n}\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.set = function(index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.remove = function(o) {\n  var found = false;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n};\n\n\nArrayList.prototype.removeAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.remove(i.next());\n  }\n  return true;\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = function(arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function(element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Coordinate from './Coordinate';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class CoordinateList extends ArrayList {\n\tconstructor() {\n\t\tsuper();\n\t\tCoordinateList.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinate(i) {\n\t\treturn this.get(i);\n\t}\n\taddAll() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"boolean\" && hasInterface(arguments[0], Collection))) {\n\t\t\tlet coll = arguments[0], allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext(); ) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return super.addAll.apply(this, arguments);\n\t}\n\tclone() {\n\t\tvar clone = super.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).clone());\n\t\t}\n\t\treturn clone;\n\t}\n\ttoCoordinateArray() {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t}\n\tadd() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet coord = arguments[0];\n\t\t\tsuper.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(coord, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsuper.add.call(this, coord);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet obj = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(obj, allowRepeated);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\")) {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n\t\t\t\tlet i = arguments[0], coord = arguments[1], allowRepeated = arguments[2];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < size) {\n\t\t\t\t\t\t\tvar next = this.get(i);\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsuper.add.call(this, i, coord);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\tcloseRing() {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t}\n\tgetClass() {\n\t\treturn CoordinateList;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCoordinateList.constructor_ = function () {\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, allowRepeated);\n\t}\n};\nCoordinateList.coordArrayType = new Array(0).fill(null);\n","import Coordinate from './Coordinate';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default class Envelope {\n\tconstructor() {\n\t\tEnvelope.constructor_.apply(this, arguments);\n\t}\n\tstatic intersects() {\n\t\tif (arguments.length === 3) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1], q = arguments[2];\n\t\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\t\tvar minq = Math.min(q1.x, q2.x);\n\t\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\t\tvar minp = Math.min(p1.x, p2.x);\n\t\t\tvar maxp = Math.max(p1.x, p2.x);\n\t\t\tif (minp > maxq) return false;\n\t\t\tif (maxp < minq) return false;\n\t\t\tminq = Math.min(q1.y, q2.y);\n\t\t\tmaxq = Math.max(q1.y, q2.y);\n\t\t\tminp = Math.min(p1.y, p2.y);\n\t\t\tmaxp = Math.max(p1.y, p2.y);\n\t\t\tif (minp > maxq) return false;\n\t\t\tif (maxp < minq) return false;\n\t\t\treturn true;\n\t\t}\n\t}\n\tgetArea() {\n\t\treturn this.getWidth() * this.getHeight();\n\t}\n\tequals(other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY();\n\t}\n\tintersection(env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this._minx > env._minx ? this._minx : env._minx;\n\t\tvar intMinY = this._miny > env._miny ? this._miny : env._miny;\n\t\tvar intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n\t\tvar intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t}\n\tisNull() {\n\t\treturn this._maxx < this._minx;\n\t}\n\tgetMaxX() {\n\t\treturn this._maxx;\n\t}\n\tcovers() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy;\n\t\t}\n\t}\n\tintersects() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\t\tlet a = arguments[0], b = arguments[1];\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar envminx = a.x < b.x ? a.x : b.x;\n\t\t\t\tif (envminx > this._maxx) return false;\n\t\t\t\tvar envmaxx = a.x > b.x ? a.x : b.x;\n\t\t\t\tif (envmaxx < this._minx) return false;\n\t\t\t\tvar envminy = a.y < b.y ? a.y : b.y;\n\t\t\t\tif (envminy > this._maxy) return false;\n\t\t\t\tvar envmaxy = a.y > b.y ? a.y : b.y;\n\t\t\t\tif (envmaxy < this._miny) return false;\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\t\tif (this.isNull()) return false;\n\t\t\t\treturn !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny);\n\t\t\t}\n\t\t}\n\t}\n\tgetMinY() {\n\t\treturn this._miny;\n\t}\n\tgetMinX() {\n\t\treturn this._minx;\n\t}\n\texpandToInclude() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis._minx = other.getMinX();\n\t\t\t\t\tthis._maxx = other.getMaxX();\n\t\t\t\t\tthis._miny = other.getMinY();\n\t\t\t\t\tthis._maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other._minx < this._minx) {\n\t\t\t\t\t\tthis._minx = other._minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxx > this._maxx) {\n\t\t\t\t\t\tthis._maxx = other._maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._miny < this._miny) {\n\t\t\t\t\t\tthis._miny = other._miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxy > this._maxy) {\n\t\t\t\t\t\tthis._maxy = other._maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis._minx = x;\n\t\t\t\tthis._maxx = x;\n\t\t\t\tthis._miny = y;\n\t\t\t\tthis._maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this._minx) {\n\t\t\t\t\tthis._minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this._maxx) {\n\t\t\t\t\tthis._maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this._miny) {\n\t\t\t\t\tthis._miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this._maxy) {\n\t\t\t\t\tthis._maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tminExtent() {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t}\n\tgetWidth() {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxx - this._minx;\n\t}\n\tcompareTo(o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this._minx < env._minx) return -1;\n\t\tif (this._minx > env._minx) return 1;\n\t\tif (this._miny < env._miny) return -1;\n\t\tif (this._miny > env._miny) return 1;\n\t\tif (this._maxx < env._maxx) return -1;\n\t\tif (this._maxx > env._maxx) return 1;\n\t\tif (this._maxy < env._maxy) return -1;\n\t\tif (this._maxy > env._maxy) return 1;\n\t\treturn 0;\n\t}\n\ttranslate(transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t}\n\ttoString() {\n\t\treturn \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n\t}\n\tsetToNull() {\n\t\tthis._minx = 0;\n\t\tthis._maxx = -1;\n\t\tthis._miny = 0;\n\t\tthis._maxy = -1;\n\t}\n\tgetHeight() {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxy - this._miny;\n\t}\n\tmaxExtent() {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t}\n\texpandBy() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deltaX = arguments[0], deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis._minx -= deltaX;\n\t\t\tthis._maxx += deltaX;\n\t\t\tthis._miny -= deltaY;\n\t\t\tthis._maxy += deltaY;\n\t\t\tif (this._minx > this._maxx || this._miny > this._maxy) this.setToNull();\n\t\t}\n\t}\n\tcontains() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t}\n\tcentre() {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t}\n\tinit() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet env = arguments[0];\n\t\t\t\tthis._minx = env._minx;\n\t\t\t\tthis._maxx = env._maxx;\n\t\t\t\tthis._miny = env._miny;\n\t\t\t\tthis._maxy = env._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis._minx = x1;\n\t\t\t\tthis._maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis._minx = x2;\n\t\t\t\tthis._maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis._miny = y1;\n\t\t\t\tthis._maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis._miny = y2;\n\t\t\t\tthis._maxy = y1;\n\t\t\t}\n\t\t}\n\t}\n\tgetMaxY() {\n\t\treturn this._maxy;\n\t}\n\tdistance(env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx;\n\t\tvar dy = 0.0;\n\t\tif (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\thashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this._minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxy);\n\t\treturn result;\n\t}\n\tgetClass() {\n\t\treturn Envelope;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable, Serializable];\n\t}\n}\nEnvelope.constructor_ = function () {\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tlet env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n","export default function Exception () {}\n","import Exception from '../../../../java/lang/Exception';\nexport default class NotRepresentableException extends Exception {\n\tconstructor() {\n\t\tsuper();\n\t\tNotRepresentableException.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn NotRepresentableException;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNotRepresentableException.constructor_ = function () {\n\tException.constructor_.call(this, \"Projective point not representable on the Cartesian plane.\");\n};\n","export default function StringBuffer (str) {\n  this.str = str\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str\n}\n","export default function Integer (value) {\n  this.value = value\n}\n\nInteger.prototype.intValue = function () {\n  return this.value\n}\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1\n  if (this.value > o) return 1\n  return 0\n}\n\nInteger.isNaN = n => Number.isNaN(n)\n","export default function Character () {}\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c == 127)\nCharacter.toUpperCase = c => c.toUpperCase()\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Double from '../../../../java/lang/Double';\nimport Integer from '../../../../java/lang/Integer';\nimport Character from '../../../../java/lang/Character';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default class DD {\n\tconstructor() {\n\t\tDD.constructor_.apply(this, arguments);\n\t}\n\tstatic sqr(x) {\n\t\treturn DD.valueOf(x).selfMultiply(x);\n\t}\n\tstatic valueOf() {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet str = arguments[0];\n\t\t\treturn DD.parse(str);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\treturn new DD(x);\n\t\t}\n\t}\n\tstatic sqrt(x) {\n\t\treturn DD.valueOf(x).sqrt();\n\t}\n\tstatic parse(str) {\n\t\tvar i = 0;\n\t\tvar strlen = str.length;\n\t\twhile (Character.isWhitespace(str.charAt(i))) i++;\n\t\tvar isNegative = false;\n\t\tif (i < strlen) {\n\t\t\tvar signCh = str.charAt(i);\n\t\t\tif (signCh === '-' || signCh === '+') {\n\t\t\t\ti++;\n\t\t\t\tif (signCh === '-') isNegative = true;\n\t\t\t}\n\t\t}\n\t\tvar val = new DD();\n\t\tvar numDigits = 0;\n\t\tvar numBeforeDec = 0;\n\t\tvar exp = 0;\n\t\twhile (true) {\n\t\t\tif (i >= strlen) break;\n\t\t\tvar ch = str.charAt(i);\n\t\t\ti++;\n\t\t\tif (Character.isDigit(ch)) {\n\t\t\t\tvar d = ch - '0';\n\t\t\t\tval.selfMultiply(DD.TEN);\n\t\t\t\tval.selfAdd(d);\n\t\t\t\tnumDigits++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch === '.') {\n\t\t\t\tnumBeforeDec = numDigits;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch === 'e' || ch === 'E') {\n\t\t\t\tvar expStr = str.substring(i);\n\t\t\t\ttry {\n\t\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t\t}\n\t\tvar val2 = val;\n\t\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\t\tif (numDecPlaces === 0) {\n\t\t\tval2 = val;\n\t\t} else if (numDecPlaces > 0) {\n\t\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\t\tval2 = val.divide(scale);\n\t\t} else if (numDecPlaces < 0) {\n\t\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\t\tval2 = val.multiply(scale);\n\t\t}\n\t\tif (isNegative) {\n\t\t\treturn val2.negate();\n\t\t}\n\t\treturn val2;\n\t}\n\tstatic createNaN() {\n\t\treturn new DD(Double.NaN, Double.NaN);\n\t}\n\tstatic copy(dd) {\n\t\treturn new DD(dd);\n\t}\n\tstatic magnitude(x) {\n\t\tvar xAbs = Math.abs(x);\n\t\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\t\tvar xMag = Math.trunc(Math.floor(xLog10));\n\t\tvar xApprox = Math.pow(10, xMag);\n\t\tif (xApprox * 10 <= xAbs) xMag += 1;\n\t\treturn xMag;\n\t}\n\tstatic stringOfChar(ch, len) {\n\t\tvar buf = new StringBuffer();\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tbuf.append(ch);\n\t\t}\n\t\treturn buf.toString();\n\t}\n\tle(y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo;\n\t}\n\textractSignificantDigits(insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y._hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y._hi);\n\t\t\tif (digit < 0 || digit > 9) {}\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y._hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t}\n\tsqr() {\n\t\treturn this.multiply(this);\n\t}\n\tdoubleValue() {\n\t\treturn this._hi + this._lo;\n\t}\n\tsubtract() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(-y);\n\t\t}\n\t}\n\tequals() {\n\t\tif (arguments.length === 1 && arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this._hi === y._hi && this._lo === y._lo;\n\t\t}\n\t}\n\tisZero() {\n\t\treturn this._hi === 0.0 && this._lo === 0.0;\n\t}\n\tselfSubtract() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y._hi, -y._lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y, 0.0);\n\t\t}\n\t}\n\tgetSpecialNumberString() {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t}\n\tmin(x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\tselfDivide() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis._hi = u;\n\t\t\tthis._lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t}\n\tdump() {\n\t\treturn \"DD<\" + this._hi + \", \" + this._lo + \">\";\n\t}\n\tdivide() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / y._hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y._hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y._hi;\n\t\t\tU = C * y._hi;\n\t\t\thy = u - hy;\n\t\t\tty = y._hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\n\t\t}\n\t}\n\tge(y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo;\n\t}\n\tpow(exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t}\n\tceil() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.ceil(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t}\n\tcompareTo(o) {\n\t\tvar other = o;\n\t\tif (this._hi < other._hi) return -1;\n\t\tif (this._hi > other._hi) return 1;\n\t\tif (this._lo < other._lo) return -1;\n\t\tif (this._lo > other._lo) return 1;\n\t\treturn 0;\n\t}\n\trint() {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t}\n\tsetValue() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t}\n\t}\n\tmax(x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\tsqrt() {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this._hi);\n\t\tvar ax = this._hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq._hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t}\n\tselfAdd() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfAdd(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\tvar H = null, h = null, S = null, s = null, e = null, f = null;\n\t\t\t\tS = this._hi + y;\n\t\t\t\te = S - this._hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = y - e + (this._hi - s);\n\t\t\t\tf = s + this._lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis._hi = H + h;\n\t\t\t\tthis._lo = h + (H - this._hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null;\n\t\t\tS = this._hi + yhi;\n\t\t\tT = this._lo + ylo;\n\t\t\te = S - this._hi;\n\t\t\tf = T - this._lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this._hi - s);\n\t\t\tt = ylo - f + (this._lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t}\n\tselfMultiply() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hx = null, tx = null, hy = null, ty = null, C = null, c = null;\n\t\t\tC = DD.SPLIT * this._hi;\n\t\t\thx = C - this._hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this._hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this._hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t}\n\tselfSqr() {\n\t\treturn this.selfMultiply(this);\n\t}\n\tfloor() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.floor(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t}\n\tnegate() {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this._hi, -this._lo);\n\t}\n\tclone() {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t}\n\tmultiply() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\n\t\t}\n\t}\n\tisNaN() {\n\t\treturn Double.isNaN(this._hi);\n\t}\n\tintValue() {\n\t\treturn Math.trunc(this._hi);\n\t}\n\ttoString() {\n\t\tvar mag = DD.magnitude(this._hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t}\n\ttoStandardNotation() {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t}\n\treciprocal() {\n\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\tC = 1.0 / this._hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this._hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this._hi;\n\t\tU = C * this._hi;\n\t\thy = u - hy;\n\t\tty = this._hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this._lo) / this._hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t}\n\ttoSciNotation() {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t}\n\tabs() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t}\n\tisPositive() {\n\t\treturn this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0;\n\t}\n\tlt(y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo < y._lo;\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t}\n\t}\n\tinit() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\tthis._hi = x;\n\t\t\t\tthis._lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tlet dd = arguments[0];\n\t\t\t\tthis._hi = dd._hi;\n\t\t\t\tthis._lo = dd._lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet hi = arguments[0], lo = arguments[1];\n\t\t\tthis._hi = hi;\n\t\t\tthis._lo = lo;\n\t\t}\n\t}\n\tgt(y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo > y._lo;\n\t}\n\tisNegative() {\n\t\treturn this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0;\n\t}\n\ttrunc() {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor(); else return this.ceil();\n\t}\n\tsignum() {\n\t\tif (this._hi > 0) return 1;\n\t\tif (this._hi < 0) return -1;\n\t\tif (this._lo > 0) return 1;\n\t\tif (this._lo < 0) return -1;\n\t\treturn 0;\n\t}\n\tgetClass() {\n\t\treturn DD;\n\t}\n\tget interfaces_() {\n\t\treturn [Serializable, Comparable, Cloneable];\n\t}\n}\nDD.constructor_ = function () {\n\tthis._hi = 0.0;\n\tthis._lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tlet dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tlet str = arguments[0];\n\t\t\tDD.constructor_.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet hi = arguments[0], lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n","import Coordinate from '../geom/Coordinate';\nimport DD from '../math/DD';\nexport default class CGAlgorithmsDD {\n\tconstructor() {\n\t\tCGAlgorithmsDD.constructor_.apply(this, arguments);\n\t}\n\tstatic orientationIndex(p1, p2, q) {\n\t\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\t\tif (index <= 1) return index;\n\t\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\t\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\t\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\t\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\t\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n\t}\n\tstatic signOfDet2x2() {\n\t\tif (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n\t\t\tlet x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3];\n\t\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\t\treturn det.signum();\n\t\t} else if (typeof arguments[3] === \"number\" && (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\"))) {\n\t\t\tlet dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3];\n\t\t\tvar x1 = DD.valueOf(dx1);\n\t\t\tvar y1 = DD.valueOf(dy1);\n\t\t\tvar x2 = DD.valueOf(dx2);\n\t\t\tvar y2 = DD.valueOf(dy2);\n\t\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\t\treturn det.signum();\n\t\t}\n\t}\n\tstatic intersection(p1, p2, q1, q2) {\n\t\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\t\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\t\tvar denom = denom1.subtract(denom2);\n\t\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\t\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\t\tvar numx = numx1.subtract(numx2);\n\t\tvar fracP = numx.selfDivide(denom).doubleValue();\n\t\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\t\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\t\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\t\tvar numy = numy1.subtract(numy2);\n\t\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\t\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\t\treturn new Coordinate(x, y);\n\t}\n\tstatic orientationIndexFilter(pa, pb, pc) {\n\t\tvar detsum = null;\n\t\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\t\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\t\tvar det = detleft - detright;\n\t\tif (detleft > 0.0) {\n\t\t\tif (detright <= 0.0) {\n\t\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t\t} else {\n\t\t\t\tdetsum = detleft + detright;\n\t\t\t}\n\t\t} else if (detleft < 0.0) {\n\t\t\tif (detright >= 0.0) {\n\t\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t\t} else {\n\t\t\t\tdetsum = -detleft - detright;\n\t\t\t}\n\t\t} else {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t}\n\t\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\t\tif (det >= errbound || -det >= errbound) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t}\n\t\treturn 2;\n\t}\n\tstatic signum(x) {\n\t\tif (x > 0) return 1;\n\t\tif (x < 0) return -1;\n\t\treturn 0;\n\t}\n\tgetClass() {\n\t\treturn CGAlgorithmsDD;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCGAlgorithmsDD.constructor_ = function () {};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nexport default class Orientation {\n\tconstructor() {\n\t\tOrientation.constructor_.apply(this, arguments);\n\t}\n\tstatic index(p1, p2, q) {\n\t\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n\t}\n\tstatic isCCW(ring) {\n\t\tvar nPts = ring.length - 1;\n\t\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\t\tvar hiPt = ring[0];\n\t\tvar hiIndex = 0;\n\t\tfor (var i = 1; i <= nPts; i++) {\n\t\t\tvar p = ring[i];\n\t\t\tif (p.y > hiPt.y) {\n\t\t\t\thiPt = p;\n\t\t\t\thiIndex = i;\n\t\t\t}\n\t\t}\n\t\tvar iPrev = hiIndex;\n\t\tdo {\n\t\t\tiPrev = iPrev - 1;\n\t\t\tif (iPrev < 0) iPrev = nPts;\n\t\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\t\tvar iNext = hiIndex;\n\t\tdo {\n\t\t\tiNext = (iNext + 1) % nPts;\n\t\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\t\tvar prev = ring[iPrev];\n\t\tvar next = ring[iNext];\n\t\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\t\tvar disc = Orientation.index(prev, hiPt, next);\n\t\tvar isCCW = null;\n\t\tif (disc === 0) {\n\t\t\tisCCW = prev.x > next.x;\n\t\t} else {\n\t\t\tisCCW = disc > 0;\n\t\t}\n\t\treturn isCCW;\n\t}\n\tgetClass() {\n\t\treturn Orientation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOrientation.constructor_ = function () {};\nOrientation.CLOCKWISE = -1;\nOrientation.RIGHT = Orientation.CLOCKWISE;\nOrientation.COUNTERCLOCKWISE = 1;\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE;\nOrientation.COLLINEAR = 0;\nOrientation.STRAIGHT = Orientation.COLLINEAR;\n","export default function System () { }\n\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\n  let c = 0\n  for (let i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i]\n    c++\n  }\n}\n\nSystem.getProperty = (name) => {\n  return {\n    'line.separator': '\\n'\n  }[name]\n}\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nexport default class HCoordinate {\n\tconstructor() {\n\t\tHCoordinate.constructor_.apply(this, arguments);\n\t}\n\tstatic intersection(p1, p2, q1, q2) {\n\t\tvar px = p1.y - p2.y;\n\t\tvar py = p2.x - p1.x;\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tvar x = py * qw - qy * pw;\n\t\tvar y = qx * pw - px * qw;\n\t\tvar w = px * qy - qx * py;\n\t\tvar xInt = x / w;\n\t\tvar yInt = y / w;\n\t\tif (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn new Coordinate(xInt, yInt);\n\t}\n\tgetY() {\n\t\tvar a = this.y / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t}\n\tgetX() {\n\t\tvar a = this.x / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t}\n\tgetCoordinate() {\n\t\tvar p = new Coordinate();\n\t\tp.x = this.getX();\n\t\tp.y = this.getY();\n\t\treturn p;\n\t}\n\tgetClass() {\n\t\treturn HCoordinate;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nHCoordinate.constructor_ = function () {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.w = null;\n\tif (arguments.length === 0) {\n\t\tthis.x = 0.0;\n\t\tthis.y = 0.0;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\tthis.x = p.x;\n\t\tthis.y = p.y;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet _x = arguments[0], _y = arguments[1];\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.w = 1.0;\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y - p2.y;\n\t\t\tthis.y = p2.x - p1.x;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _w = arguments[2];\n\t\tthis.x = _x;\n\t\tthis.y = _y;\n\t\tthis.w = _w;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar px = p1.y - p2.y;\n\t\tvar py = p2.x - p1.x;\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tthis.x = py * qw - qy * pw;\n\t\tthis.y = qx * pw - px * qw;\n\t\tthis.w = px * qy - qx * py;\n\t}\n};\n","import Double from '../../../../java/lang/Double';\nexport default class MathUtil {\n\tconstructor() {\n\t\tMathUtil.constructor_.apply(this, arguments);\n\t}\n\tstatic log10(x) {\n\t\tvar ln = Math.log(x);\n\t\tif (Double.isInfinite(ln)) return ln;\n\t\tif (Double.isNaN(ln)) return ln;\n\t\treturn ln / MathUtil.LOG_10;\n\t}\n\tstatic min(v1, v2, v3, v4) {\n\t\tvar min = v1;\n\t\tif (v2 < min) min = v2;\n\t\tif (v3 < min) min = v3;\n\t\tif (v4 < min) min = v4;\n\t\treturn min;\n\t}\n\tstatic clamp() {\n\t\tif (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\")) {\n\t\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\t\tif (x < min) return min;\n\t\t\tif (x > max) return max;\n\t\t\treturn x;\n\t\t} else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n\t\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\t\tif (x < min) return min;\n\t\t\tif (x > max) return max;\n\t\t\treturn x;\n\t\t}\n\t}\n\tstatic wrap(index, max) {\n\t\tif (index < 0) {\n\t\t\treturn max - -index % max;\n\t\t}\n\t\treturn index % max;\n\t}\n\tstatic max() {\n\t\tif (arguments.length === 3) {\n\t\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2];\n\t\t\tvar max = v1;\n\t\t\tif (v2 > max) max = v2;\n\t\t\tif (v3 > max) max = v3;\n\t\t\treturn max;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3];\n\t\t\tvar max = v1;\n\t\t\tif (v2 > max) max = v2;\n\t\t\tif (v3 > max) max = v3;\n\t\t\tif (v4 > max) max = v4;\n\t\t\treturn max;\n\t\t}\n\t}\n\tstatic average(x1, x2) {\n\t\treturn (x1 + x2) / 2.0;\n\t}\n\tgetClass() {\n\t\treturn MathUtil;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMathUtil.constructor_ = function () {};\nMathUtil.LOG_10 = Math.log(10);\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport MathUtil from '../math/MathUtil';\nimport Envelope from '../geom/Envelope';\nexport default class Distance {\n\tconstructor() {\n\t\tDistance.constructor_.apply(this, arguments);\n\t}\n\tstatic segmentToSegment(A, B, C, D) {\n\t\tif (A.equals(B)) return Distance.pointToSegment(A, C, D);\n\t\tif (C.equals(D)) return Distance.pointToSegment(D, A, B);\n\t\tvar noIntersection = false;\n\t\tif (!Envelope.intersects(A, B, C, D)) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\t\tif (denom === 0) {\n\t\t\t\tnoIntersection = true;\n\t\t\t} else {\n\t\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\t\tvar s = s_num / denom;\n\t\t\t\tvar r = r_num / denom;\n\t\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\t\tnoIntersection = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (noIntersection) {\n\t\t\treturn MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B));\n\t\t}\n\t\treturn 0.0;\n\t}\n\tstatic pointToSegment(p, A, B) {\n\t\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\t\tif (r <= 0.0) return p.distance(A);\n\t\tif (r >= 1.0) return p.distance(B);\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n\tstatic pointToLinePerpendicular(p, A, B) {\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n\tstatic pointToSegmentString(p, line) {\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\t\tvar minDistance = p.distance(line[0]);\n\t\tfor (var i = 0; i < line.length - 1; i++) {\n\t\t\tvar dist = Distance.pointToSegment(p, line[i], line[i + 1]);\n\t\t\tif (dist < minDistance) {\n\t\t\t\tminDistance = dist;\n\t\t\t}\n\t\t}\n\t\treturn minDistance;\n\t}\n\tgetClass() {\n\t\treturn Distance;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDistance.constructor_ = function () {};\n","import Cloneable from '../../../../java/lang/Cloneable';\nexport default class CoordinateSequence {\n\tconstructor() {\n\t\tCoordinateSequence.constructor_.apply(this, arguments);\n\t}\n\tsetOrdinate(index, ordinateIndex, value) {}\n\tsize() {}\n\tgetOrdinate(index, ordinateIndex) {}\n\tgetCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t}\n\t}\n\tgetCoordinateCopy(i) {}\n\tgetDimension() {}\n\tgetX(index) {}\n\texpandEnvelope(env) {}\n\tcopy() {}\n\tgetY(index) {}\n\ttoCoordinateArray() {}\n\tgetClass() {\n\t\treturn CoordinateSequence;\n\t}\n\tget interfaces_() {\n\t\treturn [Cloneable];\n\t}\n}\nCoordinateSequence.constructor_ = function () {};\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n","import hasInterface from '../../../../hasInterface';\nimport CoordinateSequence from './CoordinateSequence';\nexport default class CoordinateSequenceFactory {\n\tconstructor() {\n\t\tCoordinateSequenceFactory.constructor_.apply(this, arguments);\n\t}\n\tcreate() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn CoordinateSequenceFactory;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCoordinateSequenceFactory.constructor_ = function () {};\n","export default class GeometryComponentFilter {\n\tconstructor() {\n\t\tGeometryComponentFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(geom) {}\n\tgetClass() {\n\t\treturn GeometryComponentFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryComponentFilter.constructor_ = function () {};\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nimport Envelope from './Envelope';\nexport default class Geometry {\n\tconstructor() {\n\t\tGeometry.constructor_.apply(this, arguments);\n\t}\n\tisGeometryCollection() {\n\t\treturn this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t}\n\tgetFactory() {\n\t\treturn this._factory;\n\t}\n\tgetGeometryN(n) {\n\t\treturn this;\n\t}\n\tgetArea() {\n\t\treturn 0.0;\n\t}\n\tisRectangle() {\n\t\treturn false;\n\t}\n\tequals() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g === null) return false;\n\t\t\treturn this.equalsTopo(g);\n\t\t} else if (arguments[0] instanceof Object) {\n\t\t\tlet o = arguments[0];\n\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\tvar g = o;\n\t\t\treturn this.equalsExact(g);\n\t\t}\n\t}\n\tequalsExact(other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t}\n\tgeometryChanged() {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t}\n\tgeometryChangedAction() {\n\t\tthis._envelope = null;\n\t}\n\tequalsNorm(g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t}\n\tgetLength() {\n\t\treturn 0.0;\n\t}\n\tgetNumGeometries() {\n\t\treturn 1;\n\t}\n\tcompareTo() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o, comp);\n\t\t}\n\t}\n\tgetUserData() {\n\t\treturn this._userData;\n\t}\n\tgetSRID() {\n\t\treturn this._SRID;\n\t}\n\tgetEnvelope() {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t}\n\tcheckNotGeometryCollection(g) {\n\t\tif (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t}\n\tequal(a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t}\n\tnorm() {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t}\n\tgetPrecisionModel() {\n\t\treturn this._factory.getPrecisionModel();\n\t}\n\tgetEnvelopeInternal() {\n\t\tif (this._envelope === null) {\n\t\t\tthis._envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this._envelope);\n\t}\n\tsetSRID(SRID) {\n\t\tthis._SRID = SRID;\n\t}\n\tsetUserData(userData) {\n\t\tthis._userData = userData;\n\t}\n\tcompare(a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t}\n\thashCode() {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t}\n\tisGeometryCollectionOrDerived() {\n\t\tif (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tget interfaces_() {\n\t\treturn [Cloneable, Comparable, Serializable];\n\t}\n\tgetClass() {\n\t\treturn Geometry;\n\t}\n\tstatic hasNonEmptyElements(geometries) {\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tif (!geometries[i].isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tstatic hasNullElements(array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tif (array[i] === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\nGeometry.constructor_ = function (factory) {\n\tif (!factory)\n\t\treturn;\n\tthis._envelope = null;\n\tthis._userData = null;\n\tthis._factory = factory;\n\tthis._SRID = factory.getSRID();\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.TYPECODE_POINT = 0;\nGeometry.TYPECODE_MULTIPOINT = 1;\nGeometry.TYPECODE_LINESTRING = 2;\nGeometry.TYPECODE_LINEARRING = 3;\nGeometry.TYPECODE_MULTILINESTRING = 4;\nGeometry.TYPECODE_POLYGON = 5;\nGeometry.TYPECODE_MULTIPOLYGON = 6;\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7;\nGeometry.TYPENAME_POINT = \"Point\";\nGeometry.TYPENAME_MULTIPOINT = \"MultiPoint\";\nGeometry.TYPENAME_LINESTRING = \"LineString\";\nGeometry.TYPENAME_LINEARRING = \"LinearRing\";\nGeometry.TYPENAME_MULTILINESTRING = \"MultiLineString\";\nGeometry.TYPENAME_POLYGON = \"Polygon\";\nGeometry.TYPENAME_MULTIPOLYGON = \"MultiPolygon\";\nGeometry.TYPENAME_GEOMETRYCOLLECTION = \"GeometryCollection\";\nGeometry.geometryChangedFilter = {\n\tget interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter(geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n","export default class CoordinateFilter {\n\tconstructor() {\n\t\tCoordinateFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(coord) {}\n\tgetClass() {\n\t\treturn CoordinateFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCoordinateFilter.constructor_ = function () {};\n","export default class BoundaryNodeRule {\n\tconstructor() {\n\t\tBoundaryNodeRule.constructor_.apply(this, arguments);\n\t}\n\tisInBoundary(boundaryCount) {}\n\tgetClass() {\n\t\treturn BoundaryNodeRule;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass Mod2BoundaryNodeRule {\n\tconstructor() {\n\t\tMod2BoundaryNodeRule.constructor_.apply(this, arguments);\n\t}\n\tisInBoundary(boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t}\n\tgetClass() {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n\tget interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t}\n}\nMod2BoundaryNodeRule.constructor_ = function () {};\nclass EndPointBoundaryNodeRule {\n\tconstructor() {\n\t\tEndPointBoundaryNodeRule.constructor_.apply(this, arguments);\n\t}\n\tisInBoundary(boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t}\n\tgetClass() {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n\tget interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t}\n}\nEndPointBoundaryNodeRule.constructor_ = function () {};\nclass MultiValentEndPointBoundaryNodeRule {\n\tconstructor() {\n\t\tMultiValentEndPointBoundaryNodeRule.constructor_.apply(this, arguments);\n\t}\n\tisInBoundary(boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t}\n\tgetClass() {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n\tget interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t}\n}\nMultiValentEndPointBoundaryNodeRule.constructor_ = function () {};\nclass MonoValentEndPointBoundaryNodeRule {\n\tconstructor() {\n\t\tMonoValentEndPointBoundaryNodeRule.constructor_.apply(this, arguments);\n\t}\n\tisInBoundary(boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t}\n\tgetClass() {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n\tget interfaces_() {\n\t\treturn [BoundaryNodeRule];\n\t}\n}\nMonoValentEndPointBoundaryNodeRule.constructor_ = function () {};\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.constructor_ = function () {};\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n","import CoordinateList from './CoordinateList';\nimport Coordinate from './Coordinate';\nimport MathUtil from '../math/MathUtil';\nimport System from '../../../../java/lang/System';\nimport Comparator from '../../../../java/util/Comparator';\nimport Envelope from './Envelope';\nexport default class CoordinateArrays {\n\tconstructor() {\n\t\tCoordinateArrays.constructor_.apply(this, arguments);\n\t}\n\tstatic isRing(pts) {\n\t\tif (pts.length < 4) return false;\n\t\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\t\treturn true;\n\t}\n\tstatic ptNotInList(testPts, pts) {\n\t\tfor (var i = 0; i < testPts.length; i++) {\n\t\t\tvar testPt = testPts[i];\n\t\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t\t}\n\t\treturn null;\n\t}\n\tstatic scroll(coordinates, firstCoordinate) {\n\t\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\t\tif (i < 0) return null;\n\t\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\t\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\t\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\t\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n\t}\n\tstatic equals() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet coord1 = arguments[0], coord2 = arguments[1];\n\t\t\tif (coord1 === coord2) return true;\n\t\t\tif (coord1 === null || coord2 === null) return false;\n\t\t\tif (coord1.length !== coord2.length) return false;\n\t\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2];\n\t\t\tif (coord1 === coord2) return true;\n\t\t\tif (coord1 === null || coord2 === null) return false;\n\t\t\tif (coord1.length !== coord2.length) return false;\n\t\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\tstatic intersection(coordinates, env) {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t}\n\tstatic hasRepeatedPoints(coord) {\n\t\tfor (var i = 1; i < coord.length; i++) {\n\t\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tstatic removeRepeatedPoints(coord) {\n\t\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\t\tvar coordList = new CoordinateList(coord, false);\n\t\treturn coordList.toCoordinateArray();\n\t}\n\tstatic reverse(coord) {\n\t\tvar last = coord.length - 1;\n\t\tvar mid = Math.trunc(last / 2);\n\t\tfor (var i = 0; i <= mid; i++) {\n\t\t\tvar tmp = coord[i];\n\t\t\tcoord[i] = coord[last - i];\n\t\t\tcoord[last - i] = tmp;\n\t\t}\n\t}\n\tstatic removeNull(coord) {\n\t\tvar nonNull = 0;\n\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\tif (coord[i] !== null) nonNull++;\n\t\t}\n\t\tvar newCoord = new Array(nonNull).fill(null);\n\t\tif (nonNull === 0) return newCoord;\n\t\tvar j = 0;\n\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t\t}\n\t\treturn newCoord;\n\t}\n\tstatic copyDeep() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet coordinates = arguments[0];\n\t\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t\t}\n\t\t\treturn copy;\n\t\t} else if (arguments.length === 5) {\n\t\t\tlet src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t\t}\n\t\t}\n\t}\n\tstatic isEqualReversed(pts1, pts2) {\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar p1 = pts1[i];\n\t\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\t\tif (p1.compareTo(p2) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tstatic envelope(coordinates) {\n\t\tvar env = new Envelope();\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tenv.expandToInclude(coordinates[i]);\n\t\t}\n\t\treturn env;\n\t}\n\tstatic toCoordinateArray(coordList) {\n\t\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n\t}\n\tstatic atLeastNCoordinatesOrNothing(n, c) {\n\t\treturn c.length >= n ? c : [];\n\t}\n\tstatic indexOf(coordinate, coordinates) {\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tstatic increasingDirection(pts) {\n\t\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\t\tvar j = pts.length - 1 - i;\n\t\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\t\tif (comp !== 0) return comp;\n\t\t}\n\t\treturn 1;\n\t}\n\tstatic compare(pts1, pts2) {\n\t\tvar i = 0;\n\t\twhile (i < pts1.length && i < pts2.length) {\n\t\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\t\tif (compare !== 0) return compare;\n\t\t\ti++;\n\t\t}\n\t\tif (i < pts2.length) return -1;\n\t\tif (i < pts1.length) return 1;\n\t\treturn 0;\n\t}\n\tstatic minCoordinate(coordinates) {\n\t\tvar minCoord = null;\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\t\tminCoord = coordinates[i];\n\t\t\t}\n\t\t}\n\t\treturn minCoord;\n\t}\n\tstatic extract(pts, start, end) {\n\t\tstart = MathUtil.clamp(start, 0, pts.length);\n\t\tend = MathUtil.clamp(end, -1, pts.length);\n\t\tvar npts = end - start + 1;\n\t\tif (end < 0) npts = 0;\n\t\tif (start >= pts.length) npts = 0;\n\t\tif (end < start) npts = 0;\n\t\tvar extractPts = new Array(npts).fill(null);\n\t\tif (npts === 0) return extractPts;\n\t\tvar iPts = 0;\n\t\tfor (var i = start; i <= end; i++) {\n\t\t\textractPts[iPts++] = pts[i];\n\t\t}\n\t\treturn extractPts;\n\t}\n\tgetClass() {\n\t\treturn CoordinateArrays;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass ForwardComparator {\n\tconstructor() {\n\t\tForwardComparator.constructor_.apply(this, arguments);\n\t}\n\tcompare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t}\n\tgetClass() {\n\t\treturn ForwardComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n}\nForwardComparator.constructor_ = function () {};\nclass BidirectionalComparator {\n\tconstructor() {\n\t\tBidirectionalComparator.constructor_.apply(this, arguments);\n\t}\n\tcompare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t}\n\tOLDcompare(o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t}\n\tgetClass() {\n\t\treturn BidirectionalComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n}\nBidirectionalComparator.constructor_ = function () {};\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.constructor_ = function () {};\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nexport default function Map() {};\n\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap.prototype.get = function() {};\n\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap.prototype.put = function() {};\n\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap.prototype.size = function() {};\n\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap.prototype.values = function() {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap.prototype.entrySet = function() {};\n","import Map from './Map'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nexport default function SortedMap() {};\nSortedMap.prototype = new Map();\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default function Set() {};\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport Set from './Set'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nexport default function HashSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nHashSet.prototype = new Set();\n\n\n/**\n * @override\n */\nHashSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.remove = function(o) {\n  throw new javascript.util.OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\nimport SortedMap from './SortedMap'\nimport HashSet from './HashSet'\n\nconst BLACK = 0\nconst RED = 1\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\nfunction parentOf (p) { return (p == null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) p.color = c }\nfunction leftOf (p) { return (p == null ? null : p.left) }\nfunction rightOf (p) { return (p == null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nexport default function TreeMap() {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n};\nTreeMap.prototype = new SortedMap();\n\n\n/**\n * @override\n */\nTreeMap.prototype.get = function(key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.put = function(key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue() { return this.value },\n      getKey() { return this.key }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_, parent, cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue() { return this.value },\n    getKey() { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\n\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function(x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.values = function() {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function() {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function(p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null)\n      r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = r;\n    else if (p.parent.left == p)\n      p.parent.left = r;\n    else\n      p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function(p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = l;\n    else if (p.parent.right == p)\n      p.parent.right = l;\n    else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function() {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\n\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function(t) {\n  if (t === null)\n    return null;\n  else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.size = function() {\n  return this.size_;\n};\n\n\nTreeMap.prototype.containsKey = function(key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return true;\n    }\n  }\n  return false;\n};\n","export default class Lineal {\n\tconstructor() {\n\t\tLineal.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn Lineal;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineal.constructor_ = function () {};\n","import Set from './Set'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nexport default function SortedSet() {};\nSortedSet.prototype = new Set();\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport SortedSet from './SortedSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nexport default function TreeSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nTreeSet.prototype = new SortedSet();\n\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function(e) {\n  throw new OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nexport default function Arrays() {};\n\n/**\n */\nArrays.sort = function() {\n  var a = arguments[0], i, t, comparator, compare;\n  if (arguments.length === 1) {\n    compare = function(a, b) {\n      return a.compareTo(b);\n    }\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\n\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function(array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Character from '../../../../java/lang/Character';\nexport default class Dimension {\n\tconstructor() {\n\t\tDimension.constructor_.apply(this, arguments);\n\t}\n\tstatic toDimensionSymbol(dimensionValue) {\n\t\tswitch (dimensionValue) {\n\t\t\tcase Dimension.FALSE:\n\t\t\t\treturn Dimension.SYM_FALSE;\n\t\t\tcase Dimension.TRUE:\n\t\t\t\treturn Dimension.SYM_TRUE;\n\t\t\tcase Dimension.DONTCARE:\n\t\t\t\treturn Dimension.SYM_DONTCARE;\n\t\t\tcase Dimension.P:\n\t\t\t\treturn Dimension.SYM_P;\n\t\t\tcase Dimension.L:\n\t\t\t\treturn Dimension.SYM_L;\n\t\t\tcase Dimension.A:\n\t\t\t\treturn Dimension.SYM_A;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n\t}\n\tstatic toDimensionValue(dimensionSymbol) {\n\t\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\t\tcase Dimension.SYM_FALSE:\n\t\t\t\treturn Dimension.FALSE;\n\t\t\tcase Dimension.SYM_TRUE:\n\t\t\t\treturn Dimension.TRUE;\n\t\t\tcase Dimension.SYM_DONTCARE:\n\t\t\t\treturn Dimension.DONTCARE;\n\t\t\tcase Dimension.SYM_P:\n\t\t\t\treturn Dimension.P;\n\t\t\tcase Dimension.SYM_L:\n\t\t\t\treturn Dimension.L;\n\t\t\tcase Dimension.SYM_A:\n\t\t\t\treturn Dimension.A;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n\t}\n\tgetClass() {\n\t\treturn Dimension;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDimension.constructor_ = function () {};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n","export default class GeometryFilter {\n\tconstructor() {\n\t\tGeometryFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(geom) {}\n\tgetClass() {\n\t\treturn GeometryFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryFilter.constructor_ = function () {};\n","export default class CoordinateSequenceFilter {\n\tconstructor() {\n\t\tCoordinateSequenceFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(seq, i) {}\n\tisDone() {}\n\tisGeometryChanged() {}\n\tgetClass() {\n\t\treturn CoordinateSequenceFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCoordinateSequenceFilter.constructor_ = function () {};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nexport default class GeometryCollection extends Geometry {\n\tconstructor() {\n\t\tsuper();\n\t\tGeometryCollection.constructor_.apply(this, arguments);\n\t}\n\tcomputeEnvelopeInternal() {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this._geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t}\n\tgetGeometryN(n) {\n\t\treturn this._geometries[n];\n\t}\n\tgetCoordinates() {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar childCoordinates = this._geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t}\n\tgetArea() {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tarea += this._geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this._geometries.length !== otherCollection._geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tif (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tnormalize() {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tthis._geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this._geometries);\n\t}\n\tgetCoordinate() {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._geometries[0].getCoordinate();\n\t}\n\tgetBoundaryDimension() {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t}\n\tgetDimension() {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t}\n\tgetLength() {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tsum += this._geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t}\n\tgetNumPoints() {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tnumPoints += this._geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t}\n\tgetNumGeometries() {\n\t\treturn this._geometries.length;\n\t}\n\treverse() {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t}\n\tcompareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this._geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o._geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar gc = o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tapply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t\tif (filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t}\n\t}\n\tgetBoundary() {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_GEOMETRYCOLLECTION;\n\t}\n\tcopy() {\n\t\tvar geometries = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this._factory);\n\t}\n\tisEmpty() {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn GeometryCollection;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryCollection.constructor_ = function () {\n\tthis._geometries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet geometries = arguments[0], factory = arguments[1];\n\t\tGeometry.constructor_.call(this, factory);\n\t\tif (geometries === null) {\n\t\t\tgeometries = [];\n\t\t}\n\t\tif (Geometry.hasNullElements(geometries)) {\n\t\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t\t}\n\t\tthis._geometries = geometries;\n\t}\n};\nGeometryCollection.serialVersionUID = -5694727726395021467;\n","import Geometry from './Geometry';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport Lineal from './Lineal';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nexport default class MultiLineString extends GeometryCollection {\n\tconstructor() {\n\t\tsuper();\n\t\tMultiLineString.constructor_.apply(this, arguments);\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn super.equalsExact.call(this, other, tolerance);\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tgetBoundaryDimension() {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t}\n\tisClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_MULTILINESTRING;\n\t}\n\tgetDimension() {\n\t\treturn 1;\n\t}\n\treverse() {\n\t\tvar nLines = this._geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t}\n\tgetBoundary() {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_MULTILINESTRING;\n\t}\n\tcopy() {\n\t\tvar lineStrings = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this._factory);\n\t}\n\tgetClass() {\n\t\treturn MultiLineString;\n\t}\n\tget interfaces_() {\n\t\treturn [Lineal];\n\t}\n}\nMultiLineString.constructor_ = function () {\n\tlet lineStrings = arguments[0], factory = arguments[1];\n\tGeometryCollection.constructor_.call(this, lineStrings, factory);\n};\nMultiLineString.serialVersionUID = 8166665132445433741;\n","import LineString from '../geom/LineString';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default class BoundaryOp {\n\tconstructor() {\n\t\tBoundaryOp.constructor_.apply(this, arguments);\n\t}\n\tstatic getBoundary() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet g = arguments[0];\n\t\t\tvar bop = new BoundaryOp(g);\n\t\t\treturn bop.getBoundary();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g = arguments[0], bnRule = arguments[1];\n\t\t\tvar bop = new BoundaryOp(g, bnRule);\n\t\t\treturn bop.getBoundary();\n\t\t}\n\t}\n\tboundaryMultiLineString(mLine) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this._geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this._geomFact.createMultiPointFromCoords(bdyPts);\n\t}\n\tgetBoundary() {\n\t\tif (this._geom instanceof LineString) return this.boundaryLineString(this._geom);\n\t\tif (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom);\n\t\treturn this._geom.getBoundary();\n\t}\n\tboundaryLineString(line) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this._geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t}\n\tgetEmptyMultiPoint() {\n\t\treturn this._geomFact.createMultiPoint();\n\t}\n\tcomputeBoundaryCoordinates(mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis._endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this._endpointMap.entrySet().iterator(); it.hasNext(); ) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this._bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t}\n\taddEndpoint(pt) {\n\t\tvar counter = this._endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis._endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t}\n\tgetClass() {\n\t\treturn BoundaryOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nBoundaryOp.constructor_ = function () {\n\tthis._geom = null;\n\tthis._geomFact = null;\n\tthis._bnRule = null;\n\tthis._endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tBoundaryOp.constructor_.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], bnRule = arguments[1];\n\t\tthis._geom = geom;\n\t\tthis._geomFact = geom.getFactory();\n\t\tthis._bnRule = bnRule;\n\t}\n};\nclass Counter {\n\tconstructor() {\n\t\tCounter.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn Counter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCounter.constructor_ = function () {\n\tthis.count = null;\n};\n","import Coordinate from '../geom/Coordinate';\nexport default class Length {\n\tconstructor() {\n\t\tLength.constructor_.apply(this, arguments);\n\t}\n\tstatic ofLine(pts) {\n\t\tvar n = pts.size();\n\t\tif (n <= 1) return 0.0;\n\t\tvar len = 0.0;\n\t\tvar p = new Coordinate();\n\t\tpts.getCoordinate(0, p);\n\t\tvar x0 = p.x;\n\t\tvar y0 = p.y;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tpts.getCoordinate(i, p);\n\t\t\tvar x1 = p.x;\n\t\t\tvar y1 = p.y;\n\t\t\tvar dx = x1 - x0;\n\t\t\tvar dy = y1 - y0;\n\t\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\t\tx0 = x1;\n\t\t\ty0 = y1;\n\t\t}\n\t\treturn len;\n\t}\n\tgetClass() {\n\t\treturn Length;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLength.constructor_ = function () {};\n","export default function PrintStream () {}\n","export default function StringReader () {}\n","export default function DecimalFormat () {}\n","export default function ByteArrayOutputStream () {}\n","export default function IOException () {}\n","export default function LineNumberReader () {}\n","import PrintStream from '../../../../java/io/PrintStream';\nimport StringReader from '../../../../java/io/StringReader';\nimport DecimalFormat from '../../../../java/text/DecimalFormat';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream';\nimport Assert from './Assert';\nimport IOException from '../../../../java/io/IOException';\nimport LineNumberReader from '../../../../java/io/LineNumberReader';\nexport default class StringUtil {\n\tconstructor() {\n\t\tStringUtil.constructor_.apply(this, arguments);\n\t}\n\tstatic chars(c, n) {\n\t\tvar ch = new Array(n).fill(null);\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\tch[i] = c;\n\t\t}\n\t\treturn new String(ch);\n\t}\n\tstatic getStackTrace() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet t = arguments[0];\n\t\t\tvar os = new ByteArrayOutputStream();\n\t\t\tvar ps = new PrintStream(os);\n\t\t\tt.printStackTrace(ps);\n\t\t\treturn os.toString();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet t = arguments[0], depth = arguments[1];\n\t\t\tvar stackTrace = \"\";\n\t\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\n\t\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\t\tfor (var i = 0; i < depth; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t\t} else throw e;\n\t\t\t\t} finally {}\n\t\t\t}\n\t\t\treturn stackTrace;\n\t\t}\n\t}\n\tstatic split(s, separator) {\n\t\tvar separatorlen = separator.length;\n\t\tvar tokenList = new ArrayList();\n\t\tvar tmpString = \"\" + s;\n\t\tvar pos = tmpString.indexOf(separator);\n\t\twhile (pos >= 0) {\n\t\t\tvar token = tmpString.substring(0, pos);\n\t\t\ttokenList.add(token);\n\t\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\t\tpos = tmpString.indexOf(separator);\n\t\t}\n\t\tif (tmpString.length > 0) tokenList.add(tmpString);\n\t\tvar res = new Array(tokenList.size()).fill(null);\n\t\tfor (var i = 0; i < res.length; i++) {\n\t\t\tres[i] = tokenList.get(i);\n\t\t}\n\t\treturn res;\n\t}\n\tstatic toString() {\n\t\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\t\tlet d = arguments[0];\n\t\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t\t}\n\t}\n\tstatic spaces(n) {\n\t\treturn StringUtil.chars(' ', n);\n\t}\n\tgetClass() {\n\t\treturn StringUtil;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nStringUtil.constructor_ = function () {};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n","export default function StringBuilder (str) {\n    this.str = str\n  }\n  \n  StringBuilder.prototype.append = function (e) {\n    this.str += e\n  }\n  \n  StringBuilder.prototype.setCharAt = function (i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  \n  StringBuilder.prototype.toString = function (e) {\n    return this.str\n  }\n  ","import hasInterface from '../../../../hasInterface';\nimport StringUtil from '../util/StringUtil';\nimport Double from '../../../../java/lang/Double';\nimport CoordinateSequence from './CoordinateSequence';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default class CoordinateSequences {\n\tconstructor() {\n\t\tCoordinateSequences.constructor_.apply(this, arguments);\n\t}\n\tstatic copyCoord(src, srcPos, dest, destPos) {\n\t\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\t\tfor (var dim = 0; dim < minDim; dim++) {\n\t\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t\t}\n\t}\n\tstatic isRing(seq) {\n\t\tvar n = seq.size();\n\t\tif (n === 0) return true;\n\t\tif (n <= 3) return false;\n\t\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\t}\n\tstatic isEqual(cs1, cs2) {\n\t\tvar cs1Size = cs1.size();\n\t\tvar cs2Size = cs2.size();\n\t\tif (cs1Size !== cs2Size) return false;\n\t\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\t\tfor (var i = 0; i < cs1Size; i++) {\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tstatic extend(fact, seq, size) {\n\t\tvar newseq = fact.create(size, seq.getDimension());\n\t\tvar n = seq.size();\n\t\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\t\tif (n > 0) {\n\t\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t\t}\n\t\treturn newseq;\n\t}\n\tstatic reverse(seq) {\n\t\tvar last = seq.size() - 1;\n\t\tvar mid = Math.trunc(last / 2);\n\t\tfor (var i = 0; i <= mid; i++) {\n\t\t\tCoordinateSequences.swap(seq, i, last - i);\n\t\t}\n\t}\n\tstatic swap(seq, i, j) {\n\t\tif (i === j) return null;\n\t\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\t\tseq.setOrdinate(j, dim, tmp);\n\t\t}\n\t}\n\tstatic copy(src, srcPos, dest, destPos, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t\t}\n\t}\n\tstatic toString() {\n\t\tif (arguments.length === 1 && hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet cs = arguments[0];\n\t\t\tvar size = cs.size();\n\t\t\tif (size === 0) return \"()\";\n\t\t\tvar dim = cs.getDimension();\n\t\t\tvar builder = new StringBuilder();\n\t\t\tbuilder.append('(');\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tif (i > 0) builder.append(\" \");\n\t\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\t\tif (d > 0) builder.append(\",\");\n\t\t\t\t\tbuilder.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuilder.append(')');\n\t\t\treturn builder.toString();\n\t\t}\n\t}\n\tstatic ensureValidRing(fact, seq) {\n\t\tvar n = seq.size();\n\t\tif (n === 0) return seq;\n\t\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\t\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\t\tif (isClosed) return seq;\n\t\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n\t}\n\tstatic createClosedRing(fact, seq, size) {\n\t\tvar newseq = fact.create(size, seq.getDimension());\n\t\tvar n = seq.size();\n\t\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\n\t\treturn newseq;\n\t}\n\tgetClass() {\n\t\treturn CoordinateSequences;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCoordinateSequences.constructor_ = function () {};\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport Length from '../algorithm/Length';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Lineal from './Lineal';\nimport CoordinateSequences from './CoordinateSequences';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nexport default class LineString extends Geometry {\n\tconstructor() {\n\t\tsuper();\n\t\tLineString.constructor_.apply(this, arguments);\n\t}\n\tcomputeEnvelopeInternal() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this._points.expandEnvelope(new Envelope());\n\t}\n\tisRing() {\n\t\treturn this.isClosed() && this.isSimple();\n\t}\n\tgetCoordinates() {\n\t\treturn this._points.toCoordinateArray();\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this._points.size() !== otherLineString._points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tif (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tnormalize() {\n\t\tfor (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n\t\t\tvar j = this._points.size() - 1 - i;\n\t\t\tif (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n\t\t\t\tif (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n\t\t\t\t\tvar copy = this._points.copy();\n\t\t\t\t\tCoordinateSequences.reverse(copy);\n\t\t\t\t\tthis._points = copy;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinate() {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._points.getCoordinate(0);\n\t}\n\tgetBoundaryDimension() {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t}\n\tisClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t}\n\tgetEndPoint() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_LINESTRING;\n\t}\n\tgetDimension() {\n\t\treturn 1;\n\t}\n\tgetLength() {\n\t\treturn Length.ofLine(this._points);\n\t}\n\tgetNumPoints() {\n\t\treturn this._points.size();\n\t}\n\treverse() {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t}\n\tcompareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this._points.size() && j < line._points.size()) {\n\t\t\t\tvar comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this._points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line._points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar line = o;\n\t\t\treturn comp.compare(this._points, line._points);\n\t\t}\n\t}\n\tapply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points, i);\n\t\t\t\tif (filter.isDone()) break;\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t}\n\tgetBoundary() {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t}\n\tisEquivalentClass(other) {\n\t\treturn other instanceof LineString;\n\t}\n\tgetCoordinateN(n) {\n\t\treturn this._points.getCoordinate(n);\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_LINESTRING;\n\t}\n\tcopy() {\n\t\treturn new LineString(this._points.copy(), this._factory);\n\t}\n\tgetCoordinateSequence() {\n\t\treturn this._points;\n\t}\n\tisEmpty() {\n\t\treturn this._points.size() === 0;\n\t}\n\tinit(points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis._points = points;\n\t}\n\tisCoordinate(pt) {\n\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\tif (this._points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetStartPoint() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t}\n\tgetPointN(n) {\n\t\treturn this.getFactory().createPoint(this._points.getCoordinate(n));\n\t}\n\tgetClass() {\n\t\treturn LineString;\n\t}\n\tget interfaces_() {\n\t\treturn [Lineal];\n\t}\n}\nLineString.constructor_ = function () {\n\tthis._points = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tGeometry.constructor_.call(this, factory);\n\t\tthis.init(points);\n\t}\n};\nLineString.serialVersionUID = 3110669828065365560;\n","export default class Puntal {\n\tconstructor() {\n\t\tPuntal.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn Puntal;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPuntal.constructor_ = function () {};\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Puntal from './Puntal';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nexport default class Point extends Geometry {\n\tconstructor() {\n\t\tsuper();\n\t\tPoint.constructor_.apply(this, arguments);\n\t}\n\tcomputeEnvelopeInternal() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n\t\treturn env;\n\t}\n\tgetCoordinates() {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tnormalize() {}\n\tgetCoordinate() {\n\t\treturn this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null;\n\t}\n\tgetBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_POINT;\n\t}\n\tgetDimension() {\n\t\treturn 0;\n\t}\n\tgetNumPoints() {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t}\n\treverse() {\n\t\treturn this.copy();\n\t}\n\tgetX() {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t}\n\tcompareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet other = arguments[0], comp = arguments[1];\n\t\t\tvar point = other;\n\t\t\treturn comp.compare(this._coordinates, point._coordinates);\n\t\t}\n\t}\n\tapply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\tfilter.filter(this._coordinates, 0);\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t}\n\tgetBoundary() {\n\t\treturn this.getFactory().createGeometryCollection();\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_POINT;\n\t}\n\tcopy() {\n\t\treturn new Point(this._coordinates.copy(), this._factory);\n\t}\n\tgetCoordinateSequence() {\n\t\treturn this._coordinates;\n\t}\n\tgetY() {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t}\n\tisEmpty() {\n\t\treturn this._coordinates.size() === 0;\n\t}\n\tinit(coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis._coordinates = coordinates;\n\t}\n\tisSimple() {\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn Point;\n\t}\n\tget interfaces_() {\n\t\treturn [Puntal];\n\t}\n}\nPoint.constructor_ = function () {\n\tthis._coordinates = null;\n\tlet coordinates = arguments[0], factory = arguments[1];\n\tGeometry.constructor_.call(this, factory);\n\tthis.init(coordinates);\n};\nPoint.serialVersionUID = 4902022702746614570;\n","import hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default class Area {\n\tconstructor() {\n\t\tArea.constructor_.apply(this, arguments);\n\t}\n\tstatic ofRing() {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet ring = arguments[0];\n\t\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet ring = arguments[0];\n\t\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t\t}\n\t}\n\tstatic ofRingSigned() {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet ring = arguments[0];\n\t\t\tif (ring.length < 3) return 0.0;\n\t\t\tvar sum = 0.0;\n\t\t\tvar x0 = ring[0].x;\n\t\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\t\tvar x = ring[i].x - x0;\n\t\t\t\tvar y1 = ring[i + 1].y;\n\t\t\t\tvar y2 = ring[i - 1].y;\n\t\t\t\tsum += x * (y2 - y1);\n\t\t\t}\n\t\t\treturn sum / 2.0;\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet ring = arguments[0];\n\t\t\tvar n = ring.size();\n\t\t\tif (n < 3) return 0.0;\n\t\t\tvar p0 = new Coordinate();\n\t\t\tvar p1 = new Coordinate();\n\t\t\tvar p2 = new Coordinate();\n\t\t\tring.getCoordinate(0, p1);\n\t\t\tring.getCoordinate(1, p2);\n\t\t\tvar x0 = p1.x;\n\t\t\tp2.x -= x0;\n\t\t\tvar sum = 0.0;\n\t\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\t\tp0.y = p1.y;\n\t\t\t\tp1.x = p2.x;\n\t\t\t\tp1.y = p2.y;\n\t\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\t\tp2.x -= x0;\n\t\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t\t}\n\t\t\treturn sum / 2.0;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Area;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nArea.constructor_ = function () {};\n","export default class Polygonal {\n\tconstructor() {\n\t\tPolygonal.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn Polygonal;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPolygonal.constructor_ = function () {};\n","import Area from '../algorithm/Area';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Orientation from '../algorithm/Orientation';\nimport System from '../../../../java/lang/System';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport CoordinateArrays from './CoordinateArrays';\nimport Polygonal from './Polygonal';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nexport default class Polygon extends Geometry {\n\tconstructor() {\n\t\tsuper();\n\t\tPolygon.constructor_.apply(this, arguments);\n\t}\n\tcomputeEnvelopeInternal() {\n\t\treturn this._shell.getEnvelopeInternal();\n\t}\n\tgetCoordinates() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this._shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tvar childCoordinates = this._holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t}\n\tgetArea() {\n\t\tvar area = 0.0;\n\t\tarea += Area.ofRing(this._shell.getCoordinateSequence());\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tarea -= Area.ofRing(this._holes[i].getCoordinateSequence());\n\t\t}\n\t\treturn area;\n\t}\n\tisRectangle() {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this._shell === null) return false;\n\t\tif (this._shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this._shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherPolygonShell = otherPolygon._shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._holes.length !== otherPolygon._holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tif (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tnormalize() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this._shell, true);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis.normalize(this._holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this._holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ring = arguments[0], clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (Orientation.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinate() {\n\t\treturn this._shell.getCoordinate();\n\t}\n\tgetNumInteriorRing() {\n\t\treturn this._holes.length;\n\t}\n\tgetBoundaryDimension() {\n\t\treturn 1;\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_POLYGON;\n\t}\n\tgetDimension() {\n\t\treturn 2;\n\t}\n\tgetLength() {\n\t\tvar len = 0.0;\n\t\tlen += this._shell.getLength();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tlen += this._holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t}\n\tgetNumPoints() {\n\t\tvar numPoints = this._shell.getNumPoints();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tnumPoints += this._holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t}\n\treverse() {\n\t\tvar poly = this.copy();\n\t\tpoly._shell = this._shell.copy().reverse();\n\t\tpoly._holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tpoly._holes[i] = this._holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t}\n\tconvexHull() {\n\t\treturn this.getExteriorRing().convexHull();\n\t}\n\tcompareToSameClass() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = o._shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar poly = o;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = poly._shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tapply() {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tif (!filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t\t\tif (filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t}\n\t}\n\tgetBoundary() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this._holes.length + 1).fill(null);\n\t\trings[0] = this._shell;\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\trings[i + 1] = this._holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_POLYGON;\n\t}\n\tcopy() {\n\t\tvar shellCopy = this._shell.copy();\n\t\tvar holeCopies = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tholeCopies[i] = this._holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shellCopy, holeCopies, this._factory);\n\t}\n\tgetExteriorRing() {\n\t\treturn this._shell;\n\t}\n\tisEmpty() {\n\t\treturn this._shell.isEmpty();\n\t}\n\tgetInteriorRingN(n) {\n\t\treturn this._holes[n];\n\t}\n\tgetClass() {\n\t\treturn Polygon;\n\t}\n\tget interfaces_() {\n\t\treturn [Polygonal];\n\t}\n}\nPolygon.constructor_ = function () {\n\tthis._shell = null;\n\tthis._holes = null;\n\tlet shell = arguments[0], holes = arguments[1], factory = arguments[2];\n\tGeometry.constructor_.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis._shell = shell;\n\tthis._holes = holes;\n};\nPolygon.serialVersionUID = -3494792200821764533;\n","import Geometry from './Geometry';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport Puntal from './Puntal';\nexport default class MultiPoint extends GeometryCollection {\n\tconstructor() {\n\t\tsuper();\n\t\tMultiPoint.constructor_.apply(this, arguments);\n\t}\n\tisValid() {\n\t\treturn true;\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn super.equalsExact.call(this, other, tolerance);\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tgetCoordinate() {\n\t\tif (arguments.length === 1 && Number.isInteger(arguments[0])) {\n\t\t\tlet n = arguments[0];\n\t\t\treturn this._geometries[n].getCoordinate();\n\t\t} else return super.getCoordinate.apply(this, arguments);\n\t}\n\tgetBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_MULTIPOINT;\n\t}\n\tgetDimension() {\n\t\treturn 0;\n\t}\n\tgetBoundary() {\n\t\treturn this.getFactory().createGeometryCollection();\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_MULTIPOINT;\n\t}\n\tcopy() {\n\t\tvar points = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this._factory);\n\t}\n\tgetClass() {\n\t\treturn MultiPoint;\n\t}\n\tget interfaces_() {\n\t\treturn [Puntal];\n\t}\n}\nMultiPoint.constructor_ = function () {\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometryCollection.constructor_.call(this, points, factory);\n};\nMultiPoint.serialVersionUID = -8048474874175355449;\n","import LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from './GeometryFactory';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport Dimension from './Dimension';\nexport default class LinearRing extends LineString {\n\tconstructor() {\n\t\tsuper();\n\t\tLinearRing.constructor_.apply(this, arguments);\n\t}\n\tgetBoundaryDimension() {\n\t\treturn Dimension.FALSE;\n\t}\n\tisClosed() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.isClosed.call(this);\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_LINEARRING;\n\t}\n\treverse() {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t}\n\tvalidateConstruction() {\n\t\tif (!this.isEmpty() && !super.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_LINEARRING;\n\t}\n\tcopy() {\n\t\treturn new LinearRing(this._points.copy(), this._factory);\n\t}\n\tgetClass() {\n\t\treturn LinearRing;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLinearRing.constructor_ = function () {\n\tif (arguments[0] instanceof Array && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLinearRing.constructor_.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLineString.constructor_.call(this, points, factory);\n\t\tthis.validateConstruction();\n\t}\n};\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n","import Geometry from './Geometry';\nimport GeometryCollection from './GeometryCollection';\nimport Polygonal from './Polygonal';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class MultiPolygon extends GeometryCollection {\n\tconstructor() {\n\t\tsuper();\n\t\tMultiPolygon.constructor_.apply(this, arguments);\n\t}\n\tequalsExact() {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn super.equalsExact.call(this, other, tolerance);\n\t\t} else return super.equalsExact.apply(this, arguments);\n\t}\n\tgetBoundaryDimension() {\n\t\treturn 1;\n\t}\n\tgetTypeCode() {\n\t\treturn Geometry.TYPECODE_MULTIPOLYGON;\n\t}\n\tgetDimension() {\n\t\treturn 2;\n\t}\n\treverse() {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t}\n\tgetBoundary() {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar polygon = this._geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t}\n\tgetGeometryType() {\n\t\treturn Geometry.TYPENAME_MULTIPOLYGON;\n\t}\n\tcopy() {\n\t\tvar polygons = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this._factory);\n\t}\n\tgetClass() {\n\t\treturn MultiPolygon;\n\t}\n\tget interfaces_() {\n\t\treturn [Polygonal];\n\t}\n}\nMultiPolygon.constructor_ = function () {\n\tlet polygons = arguments[0], factory = arguments[1];\n\tGeometryCollection.constructor_.call(this, polygons, factory);\n};\nMultiPolygon.serialVersionUID = -551033529766975875;\n","import LineString from '../LineString';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport MultiLineString from '../MultiLineString';\nexport default class GeometryEditor {\n\tconstructor() {\n\t\tGeometryEditor.constructor_.apply(this, arguments);\n\t}\n\tsetCopyUserData(isUserDataCopied) {\n\t\tthis._isUserDataCopied = isUserDataCopied;\n\t}\n\tedit(geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this._isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t}\n\teditInternal(geometry, operation) {\n\t\tif (this._factory === null) this._factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t}\n\teditGeometryCollection(collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this._factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this._factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this._factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this._factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this._factory.createGeometryCollection(geometries.toArray([]));\n\t}\n\teditPolygon(polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this._factory);\n\t\tif (newPolygon === null) newPolygon = this._factory.createPolygon();\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this._factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this._factory.createPolygon(shell, holes.toArray([]));\n\t}\n\tgetClass() {\n\t\treturn GeometryEditor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nclass NoOpGeometryOperation {\n\tconstructor() {\n\t\tNoOpGeometryOperation.constructor_.apply(this, arguments);\n\t}\n\tedit(geometry, factory) {\n\t\treturn geometry;\n\t}\n\tgetClass() {\n\t\treturn NoOpGeometryOperation;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t}\n}\nNoOpGeometryOperation.constructor_ = function () {};\nclass CoordinateOperation {\n\tconstructor() {\n\t\tCoordinateOperation.constructor_.apply(this, arguments);\n\t}\n\tedit(geometry, factory) {\n\t\tvar coordinates = this.edit(geometry.getCoordinates(), geometry);\n\t\tif (geometry instanceof LinearRing) {\n\t\t\tif (coordinates === null) return factory.createLinearRing(); else return factory.createLinearRing(coordinates);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\tif (coordinates === null) return factory.createLineString(); else return factory.createLineString(coordinates);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coordinates === null || coordinates.length === 0) return factory.createPoint(); else return factory.createPoint(coordinates[0]);\n\t\t}\n\t\treturn geometry;\n\t}\n\tgetClass() {\n\t\treturn CoordinateOperation;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t}\n}\nCoordinateOperation.constructor_ = function () {};\nclass CoordinateSequenceOperation {\n\tconstructor() {\n\t\tCoordinateSequenceOperation.constructor_.apply(this, arguments);\n\t}\n\tedit(geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t}\n\tgetClass() {\n\t\treturn CoordinateSequenceOperation;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryEditorOperation];\n\t}\n}\nCoordinateSequenceOperation.constructor_ = function () {};\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\nGeometryEditor.constructor_ = function () {\n\tthis._factory = null;\n\tthis._isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet factory = arguments[0];\n\t\tthis._factory = factory;\n\t}\n};\n","import hasInterface from '../../../../../hasInterface';\nimport Coordinate from '../Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../../java/lang/Double';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nimport StringBuilder from '../../../../../java/lang/StringBuilder';\nexport default class CoordinateArraySequence {\n\tconstructor() {\n\t\tCoordinateArraySequence.constructor_.apply(this, arguments);\n\t}\n\tsetOrdinate(index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis._coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis._coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis._coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t}\n\tsize() {\n\t\treturn this._coordinates.length;\n\t}\n\tgetOrdinate(index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this._coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this._coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this._coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t}\n\tgetCoordinate() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t\tcoord.x = this._coordinates[index].x;\n\t\t\tcoord.y = this._coordinates[index].y;\n\t\t\tcoord.z = this._coordinates[index].z;\n\t\t}\n\t}\n\tgetCoordinateCopy(i) {\n\t\treturn new Coordinate(this._coordinates[i]);\n\t}\n\tgetDimension() {\n\t\treturn this._dimension;\n\t}\n\tgetX(index) {\n\t\treturn this._coordinates[index].x;\n\t}\n\texpandEnvelope(env) {\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this._coordinates[i]);\n\t\t}\n\t\treturn env;\n\t}\n\tcopy() {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this._coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this._dimension);\n\t}\n\ttoString() {\n\t\tif (this._coordinates.length > 0) {\n\t\t\tvar strBuilder = new StringBuilder(17 * this._coordinates.length);\n\t\t\tstrBuilder.append('(');\n\t\t\tstrBuilder.append(this._coordinates[0]);\n\t\t\tfor (var i = 1; i < this._coordinates.length; i++) {\n\t\t\t\tstrBuilder.append(\", \");\n\t\t\t\tstrBuilder.append(this._coordinates[i]);\n\t\t\t}\n\t\t\tstrBuilder.append(')');\n\t\t\treturn strBuilder.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t}\n\tgetY(index) {\n\t\treturn this._coordinates[index].y;\n\t}\n\ttoCoordinateArray() {\n\t\treturn this._coordinates;\n\t}\n\tgetClass() {\n\t\treturn CoordinateArraySequence;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateSequence, Serializable];\n\t}\n}\nCoordinateArraySequence.constructor_ = function () {\n\tthis._dimension = 3;\n\tthis._coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.constructor_.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet size = arguments[0];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis._coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._dimension = coordSeq.getDimension();\n\t\t\tthis._coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\t\tthis._coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tlet coordinates = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = coordinates;\n\t\t\tthis._dimension = dimension;\n\t\t\tif (coordinates === null) this._coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tthis._dimension = dimension;\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n};\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory';\nimport hasInterface from '../../../../../hasInterface';\nimport CoordinateArraySequence from './CoordinateArraySequence';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default class CoordinateArraySequenceFactory {\n\tconstructor() {\n\t\tCoordinateArraySequenceFactory.constructor_.apply(this, arguments);\n\t}\n\tstatic instance() {\n\t\treturn CoordinateArraySequenceFactory.instanceObject;\n\t}\n\treadResolve() {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t}\n\tcreate() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t}\n}\nCoordinateArraySequenceFactory.constructor_ = function () {};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n","// shared pointer\nvar i\n// shortcuts\nvar defineProperty = Object.defineProperty\nfunction is (a, b) { return (a === b) || (a !== a && b !== b) } // eslint-disable-line\n\nexport default createCollection({\n  // WeakMap#delete(key:void*):boolean\n  'delete': sharedDelete,\n  // :was Map#get(key:void*[, d3fault:void*]):void*\n  // Map#has(key:void*):boolean\n  has: mapHas,\n  // Map#get(key:void*):boolean\n  get: sharedGet,\n  // Map#set(key:void*, value:void*):void\n  set: sharedSet,\n  // Map#keys(void):Iterator\n  keys: sharedKeys,\n  // Map#values(void):Iterator\n  values: sharedValues,\n  // Map#entries(void):Iterator\n  entries: mapEntries,\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n  forEach: sharedForEach,\n  // Map#clear():\n  clear: sharedClear\n})\n\nfunction createCollection (proto, objectOnly) {\n  function Collection (a) {\n    if (!this || this.constructor !== Collection) return new Collection(a)\n    this._keys = []\n    this._values = []\n    this._itp = [] // iteration pointers\n    this.objectOnly = objectOnly\n\n    // parse initial iterable argument passed\n    if (a) init.call(this, a)\n  }\n\n  // define size for non object-only collections\n  if (!objectOnly) {\n    defineProperty(proto, 'size', {\n      get: sharedSize\n    })\n  }\n\n  // set prototype\n  proto.constructor = Collection\n  Collection.prototype = proto\n\n  return Collection\n}\n\nfunction init (a) {\n  // init Set argument, like `[1,2,3,{}]`\n  if (this.add) a.forEach(this.add, this)\n  // init Map argument like `[[1,2], [{}, 4]]`\n  else a.forEach(function (a) { this.set(a[0], a[1]) }, this)\n}\n\nfunction sharedDelete (key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1)\n    this._values.splice(i, 1)\n    // update iteration pointers\n    this._itp.forEach(function (p) { if (i < p[0]) p[0]-- })\n  }\n  // Aurora here does it while Canary doesn't\n  return i > -1\n}\n\nfunction sharedGet (key) {\n  return this.has(key) ? this._values[i] : undefined\n}\n\nfunction has (list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key')\n  // NaN or 0 passed\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n  else i = list.indexOf(key)\n  return i > -1\n}\n\nfunction mapHas (value) {\n  return has.call(this, this._keys, value)\n}\n\nfunction sharedSet (key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value\n  return this\n}\n\nfunction sharedClear () {\n  (this._keys || 0).length =\n    this._values.length = 0\n}\n\nfunction sharedKeys () {\n  return sharedIterator(this._itp, this._keys)\n}\n\nfunction sharedValues () {\n  return sharedIterator(this._itp, this._values)\n}\n\nfunction mapEntries () {\n  return sharedIterator(this._itp, this._keys, this._values)\n}\n\nfunction sharedIterator (itp, array, array2) {\n  var p = [0]\n  var done = false\n  itp.push(p)\n  return {\n    next: function () {\n      var v\n      var k = p[0]\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k]\n        p[0]++\n      } else {\n        done = true\n        itp.splice(itp.indexOf(p), 1)\n      }\n      return { done: done, value: v }\n    }\n  }\n}\n\nfunction sharedSize () {\n  return this._values.length\n}\n\nfunction sharedForEach (callback, context) {\n  var it = this.entries()\n  for (;;) {\n    var r = it.next()\n    if (r.done) break\n    callback.call(context, r.value[1], r.value[0], this)\n  }\n}\n","import ArrayList from './ArrayList'\nimport MapInterface from './Map'\nimport HashSet from './HashSet'\nimport MapPolyfill from '../../Map'\n\nlet MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nexport default function HashMap () {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new MapImpl()\n}\nHashMap.prototype = new MapInterface()\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null\n}\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value)\n  return value\n}\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  const arrayList = new ArrayList()\n  const it = this.map_.values()\n  let o = it.next()\n  while (!o.done) {\n    arrayList.add(o.value)\n    o = it.next()\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  const hashSet = new HashSet()\n  this.map_.entries().forEach(entry => hashSet.add(entry))\n  return hashSet\n}\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size()\n}\n","import HashMap from '../../../../java/util/HashMap';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport Integer from '../../../../java/lang/Integer';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default class PrecisionModel {\n\tconstructor() {\n\t\tPrecisionModel.constructor_.apply(this, arguments);\n\t}\n\tstatic mostPrecise(pm1, pm2) {\n\t\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\t\treturn pm2;\n\t}\n\tequals(other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale;\n\t}\n\tcompareTo(o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t}\n\tgetScale() {\n\t\treturn this._scale;\n\t}\n\tisFloating() {\n\t\treturn this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE;\n\t}\n\tgetType() {\n\t\treturn this._modelType;\n\t}\n\ttoString() {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t}\n\tmakePrecise() {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this._modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this._scale) / this._scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tif (this._modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t}\n\tgetMaximumSignificantDigits() {\n\t\tvar maxSigDigits = 16;\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t}\n\tsetScale(scale) {\n\t\tthis._scale = Math.abs(scale);\n\t}\n\tgetClass() {\n\t\treturn PrecisionModel;\n\t}\n\tget interfaces_() {\n\t\treturn [Serializable, Comparable];\n\t}\n}\nclass Type {\n\tconstructor() {\n\t\tType.constructor_.apply(this, arguments);\n\t}\n\treadResolve() {\n\t\treturn Type.nameToTypeMap.get(this._name);\n\t}\n\ttoString() {\n\t\treturn this._name;\n\t}\n\tgetClass() {\n\t\treturn Type;\n\t}\n\tget interfaces_() {\n\t\treturn [Serializable];\n\t}\n}\nType.constructor_ = function () {\n\tthis._name = null;\n\tlet name = arguments[0];\n\tthis._name = name;\n\tType.nameToTypeMap.put(name, this);\n};\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.constructor_ = function () {\n\tthis._modelType = null;\n\tthis._scale = null;\n\tif (arguments.length === 0) {\n\t\tthis._modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tlet modelType = arguments[0];\n\t\t\tthis._modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet scale = arguments[0];\n\t\t\tthis._modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet pm = arguments[0];\n\t\t\tthis._modelType = pm._modelType;\n\t\t\tthis._scale = pm._scale;\n\t\t}\n\t}\n};\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory';\nimport LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from './Coordinate';\nimport Point from './Point';\nimport Polygon from './Polygon';\nimport MultiPoint from './MultiPoint';\nimport GeometryEditor from './util/GeometryEditor';\nimport LinearRing from './LinearRing';\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory';\nimport MultiPolygon from './MultiPolygon';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport GeometryCollection from './GeometryCollection';\nimport PrecisionModel from './PrecisionModel';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nimport MultiLineString from './MultiLineString';\nexport default class GeometryFactory {\n\tconstructor() {\n\t\tGeometryFactory.constructor_.apply(this, arguments);\n\t}\n\tstatic toMultiPolygonArray(multiPolygons) {\n\t\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\t\treturn multiPolygons.toArray(multiPolygonArray);\n\t}\n\tstatic toGeometryArray(geometries) {\n\t\tif (geometries === null) return null;\n\t\tvar geometryArray = new Array(geometries.size()).fill(null);\n\t\treturn geometries.toArray(geometryArray);\n\t}\n\tstatic getDefaultCoordinateSequenceFactory() {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t}\n\tstatic toMultiLineStringArray(multiLineStrings) {\n\t\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\t\treturn multiLineStrings.toArray(multiLineStringArray);\n\t}\n\tstatic toLineStringArray(lineStrings) {\n\t\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\t\treturn lineStrings.toArray(lineStringArray);\n\t}\n\tstatic toMultiPointArray(multiPoints) {\n\t\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\t\treturn multiPoints.toArray(multiPointArray);\n\t}\n\tstatic toLinearRingArray(linearRings) {\n\t\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\t\treturn linearRings.toArray(linearRingArray);\n\t}\n\tstatic toPointArray(points) {\n\t\tvar pointArray = new Array(points.size()).fill(null);\n\t\treturn points.toArray(pointArray);\n\t}\n\tstatic toPolygonArray(polygons) {\n\t\tvar polygonArray = new Array(polygons.size()).fill(null);\n\t\treturn polygons.toArray(polygonArray);\n\t}\n\tstatic createPointFromInternalCoord(coord, exemplar) {\n\t\texemplar.getPrecisionModel().makePrecise(coord);\n\t\treturn exemplar.getFactory().createPoint(coord);\n\t}\n\ttoGeometry(envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint();\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t}\n\tcreateLineString() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LineString(coordinates, this);\n\t\t\t}\n\t\t}\n\t}\n\tcreateMultiLineString() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t}\n\tbuildGeometry(geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom instanceof GeometryCollection) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t}\n\tcreateMultiPointFromCoords(coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t}\n\tcreatePoint() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinateSequenceFactory() {\n\t\treturn this._coordinateSequenceFactory;\n\t}\n\tcreatePolygon() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPolygon(null, null);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet shell = arguments[0], holes = arguments[1];\n\t\t\treturn new Polygon(shell, holes, this);\n\t\t}\n\t}\n\tgetSRID() {\n\t\treturn this._SRID;\n\t}\n\tcreateGeometryCollection() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t}\n\tcreateGeometry(g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, new (class {\n\t\t\tedit() {\n\t\t\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && hasInterface(arguments[0], CoordinateSequence))) {\n\t\t\t\t\tlet coordSeq = arguments[0], geometry = arguments[1];\n\t\t\t\t\treturn this._coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t})());\n\t}\n\tgetPrecisionModel() {\n\t\treturn this._precisionModel;\n\t}\n\tcreateLinearRing() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LinearRing(coordinates, this);\n\t\t\t}\n\t\t}\n\t}\n\tcreateMultiPolygon() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t}\n\tcreateMultiPoint() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\tif (coordinates === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn GeometryFactory;\n\t}\n\tget interfaces_() {\n\t\treturn [Serializable];\n\t}\n}\nGeometryFactory.constructor_ = function () {\n\tthis._precisionModel = null;\n\tthis._coordinateSequenceFactory = null;\n\tthis._SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.constructor_.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tlet coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet precisionModel = arguments[0];\n\t\t\tGeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1];\n\t\tGeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2];\n\t\tthis._precisionModel = precisionModel;\n\t\tthis._coordinateSequenceFactory = coordinateSequenceFactory;\n\t\tthis._SRID = SRID;\n\t}\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\n\nconst regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\nexport default class WKTParser {\n  /** Create a new parser for WKT\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @return An instance of WKTParser.\n   * @private\n   */\n  constructor(geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.precisionModel = this.geometryFactory.getPrecisionModel()\n  }\n\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read (wkt) {\n    var geometry, type, str\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\n    var matches = regExes.typeStr.exec(wkt)\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt)\n      matches[2] = undefined\n    }\n    if (matches) {\n      type = matches[1].toLowerCase()\n      str = matches[2]\n      if (parse[type]) {\n        geometry = parse[type].call(this, str)\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\n\n    return geometry\n  }\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write (geometry) {\n    return this.extractGeometry(geometry)\n  }\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry (geometry) {\n    var type = geometry.getGeometryType().toLowerCase()\n    if (!extract[type]) {\n      return null\n    }\n    var wktType = type.toUpperCase()\n    var data\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY'\n    } else {\n      data = wktType + '(' + extract[type].call(this, geometry) + ')'\n    }\n    return data\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nconst extract = {\n  coordinate (coordinate) {\n    return coordinate.x + ' ' + coordinate.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point (point) {\n    return extract.coordinate.call(this, point._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint (multipoint) {\n    var array = []\n    for (let i = 0, len = multipoint._geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.call(this, multipoint._geometries[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring (linestring) {\n    var array = []\n    for (let i = 0, len = linestring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.call(this, linestring._points._coordinates[i]))\n    }\n    return array.join(',')\n  },\n\n  linearring (linearring) {\n    var array = []\n    for (let i = 0, len = linearring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.call(this, linearring._points._coordinates[i]))\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring (multilinestring) {\n    var array = []\n    for (let i = 0, len = multilinestring._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract.linestring.call(this, multilinestring._geometries[i]) +\n        ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon (polygon) {\n    var array = []\n    array.push('(' + extract.linestring.call(this, polygon._shell) + ')')\n    for (let i = 0, len = polygon._holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.call(this, polygon._holes[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon (multipolygon) {\n    var array = []\n    for (let i = 0, len = multipolygon._geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.call(this, multipolygon._geometries[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection (collection) {\n    var array = []\n    for (let i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection._geometries[i]))\n    }\n    return array.join(',')\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nconst parse = {\n  \n  coord (str) {\n    var coords = str.trim().split(regExes.spaces)\n    var coord = new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1]))\n    this.precisionModel.makePrecise(coord)\n    return coord\n  },\n\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point (str) {\n    if (str === undefined)\n      return this.geometryFactory.createPoint()\n    return this.geometryFactory.createPoint(parse.coord.call(this, str))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint (str) {\n    if (str === undefined)\n      return this.geometryFactory.createMultiPoint()\n    var point\n    var points = str.trim().split(',')\n    var components = []\n    for (let i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1')\n      components.push(parse.point.call(this, point))\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      components.push(parse.coord.call(this, points[i]))\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      components.push(parse.coord.call(this, points[i]))\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line\n    var lines = str.trim().split(regExes.parenComma)\n    var components = []\n    for (let i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1')\n      components.push(parse.linestring.call(this, line))\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring\n    var rings = str.trim().split(regExes.parenComma)\n    var shell\n    var holes = []\n    for (let i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1')\n      linestring = parse.linestring.call(this, ring)\n      linearring = this.geometryFactory.createLinearRing(linestring._points)\n      if (i === 0) {\n        shell = linearring\n      } else {\n        holes.push(linearring)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon\n    var polygons = str.trim().split(regExes.doubleParenComma)\n    var components = []\n    for (let i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\n      components.push(parse.polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\n    var wktArray = str.trim().split('|')\n    var components = []\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]))\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\nexport default class WKTWriter {\n  /**\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory)\n  }\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  static toLineString (p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented')\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n}\n","import WKTWriter from '../io/WKTWriter';\nimport Coordinate from '../geom/Coordinate';\nimport Assert from '../util/Assert';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default class LineIntersector {\n\tconstructor() {\n\t\tLineIntersector.constructor_.apply(this, arguments);\n\t}\n\tstatic computeEdgeDistance(p, p0, p1) {\n\t\tvar dx = Math.abs(p1.x - p0.x);\n\t\tvar dy = Math.abs(p1.y - p0.y);\n\t\tvar dist = -1.0;\n\t\tif (p.equals(p0)) {\n\t\t\tdist = 0.0;\n\t\t} else if (p.equals(p1)) {\n\t\t\tif (dx > dy) dist = dx; else dist = dy;\n\t\t} else {\n\t\t\tvar pdx = Math.abs(p.x - p0.x);\n\t\t\tvar pdy = Math.abs(p.y - p0.y);\n\t\t\tif (dx > dy) dist = pdx; else dist = pdy;\n\t\t\tif (dist === 0.0 && !p.equals(p0)) {\n\t\t\t\tdist = Math.max(pdx, pdy);\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n\t\treturn dist;\n\t}\n\tstatic nonRobustComputeEdgeDistance(p, p1, p2) {\n\t\tvar dx = p.x - p1.x;\n\t\tvar dy = p.y - p1.y;\n\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n\t\treturn dist;\n\t}\n\tgetIndexAlongSegment(segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intLineIndex[segmentIndex][intIndex];\n\t}\n\tgetTopologySummary() {\n\t\tvar catBuilder = new StringBuilder();\n\t\tif (this.isEndPoint()) catBuilder.append(\" endpoint\");\n\t\tif (this._isProper) catBuilder.append(\" proper\");\n\t\tif (this.isCollinear()) catBuilder.append(\" collinear\");\n\t\treturn catBuilder.toString();\n\t}\n\tcomputeIntersection(p1, p2, p3, p4) {\n\t\tthis._inputLines[0][0] = p1;\n\t\tthis._inputLines[0][1] = p2;\n\t\tthis._inputLines[1][0] = p3;\n\t\tthis._inputLines[1][1] = p4;\n\t\tthis._result = this.computeIntersect(p1, p2, p3, p4);\n\t}\n\tgetIntersectionNum() {\n\t\treturn this._result;\n\t}\n\tcomputeIntLineIndex() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._intLineIndex === null) {\n\t\t\t\tthis._intLineIndex = Array(2).fill().map(() => Array(2));\n\t\t\t\tthis.computeIntLineIndex(0);\n\t\t\t\tthis.computeIntLineIndex(1);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet segmentIndex = arguments[0];\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\n\t\t\tif (dist0 > dist1) {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 0;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 1;\n\t\t\t} else {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 1;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tisProper() {\n\t\treturn this.hasIntersection() && this._isProper;\n\t}\n\tsetPrecisionModel(precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t}\n\tisInteriorIntersection() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isInteriorIntersection(0)) return true;\n\t\t\tif (this.isInteriorIntersection(1)) return true;\n\t\t\treturn false;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet inputLineIndex = arguments[0];\n\t\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\t\tif (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tgetIntersection(intIndex) {\n\t\treturn this._intPt[intIndex];\n\t}\n\tisEndPoint() {\n\t\treturn this.hasIntersection() && !this._isProper;\n\t}\n\thasIntersection() {\n\t\treturn this._result !== LineIntersector.NO_INTERSECTION;\n\t}\n\tgetEdgeDistance(segmentIndex, intIndex) {\n\t\tvar dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n\t\treturn dist;\n\t}\n\tisCollinear() {\n\t\treturn this._result === LineIntersector.COLLINEAR_INTERSECTION;\n\t}\n\ttoString() {\n\t\treturn WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary();\n\t}\n\tgetEndpoint(segmentIndex, ptIndex) {\n\t\treturn this._inputLines[segmentIndex][ptIndex];\n\t}\n\tisIntersection(pt) {\n\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\tif (this._intPt[i].equals2D(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetIntersectionAlongSegment(segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intPt[this._intLineIndex[segmentIndex][intIndex]];\n\t}\n\tgetClass() {\n\t\treturn LineIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineIntersector.constructor_ = function () {\n\tthis._result = null;\n\tthis._inputLines = Array(2).fill().map(() => Array(2));\n\tthis._intPt = new Array(2).fill(null);\n\tthis._intLineIndex = null;\n\tthis._isProper = null;\n\tthis._pa = null;\n\tthis._pb = null;\n\tthis._precisionModel = null;\n\tthis._intPt[0] = new Coordinate();\n\tthis._intPt[1] = new Coordinate();\n\tthis._pa = this._intPt[0];\n\tthis._pb = this._intPt[1];\n\tthis._result = 0;\n};\nLineIntersector.DONT_INTERSECT = 0;\nLineIntersector.DO_INTERSECT = 1;\nLineIntersector.COLLINEAR = 2;\nLineIntersector.NO_INTERSECTION = 0;\nLineIntersector.POINT_INTERSECTION = 1;\nLineIntersector.COLLINEAR_INTERSECTION = 2;\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport Orientation from './Orientation';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport System from '../../../../java/lang/System';\nimport HCoordinate from './HCoordinate';\nimport Envelope from '../geom/Envelope';\nimport Distance from './Distance';\nimport LineIntersector from './LineIntersector';\nexport default class RobustLineIntersector extends LineIntersector {\n\tconstructor() {\n\t\tsuper();\n\t\tRobustLineIntersector.constructor_.apply(this, arguments);\n\t}\n\tstatic nearestEndpoint(p1, p2, q1, q2) {\n\t\tvar nearestPt = p1;\n\t\tvar minDist = Distance.pointToSegment(p1, q1, q2);\n\t\tvar dist = Distance.pointToSegment(p2, q1, q2);\n\t\tif (dist < minDist) {\n\t\t\tminDist = dist;\n\t\t\tnearestPt = p2;\n\t\t}\n\t\tdist = Distance.pointToSegment(q1, p1, p2);\n\t\tif (dist < minDist) {\n\t\t\tminDist = dist;\n\t\t\tnearestPt = q1;\n\t\t}\n\t\tdist = Distance.pointToSegment(q2, p1, p2);\n\t\tif (dist < minDist) {\n\t\t\tminDist = dist;\n\t\t\tnearestPt = q2;\n\t\t}\n\t\treturn nearestPt;\n\t}\n\tisInSegmentEnvelopes(intPt) {\n\t\tvar env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n\t\tvar env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\n\t}\n\tcomputeIntersection() {\n\t\tif (arguments.length === 3) {\n\t\t\tlet p = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\t\t\tthis._isProper = false;\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\n\t\t\t\tif (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n\t\t\t\t\tthis._isProper = true;\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\n\t\t\t\t\t\tthis._isProper = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._result = LineIntersector.POINT_INTERSECTION;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._result = LineIntersector.NO_INTERSECTION;\n\t\t} else return super.computeIntersection.apply(this, arguments);\n\t}\n\tnormalizeToMinimum(n1, n2, n3, n4, normPt) {\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n\t\tn1.x -= normPt.x;\n\t\tn1.y -= normPt.y;\n\t\tn2.x -= normPt.x;\n\t\tn2.y -= normPt.y;\n\t\tn3.x -= normPt.x;\n\t\tn3.y -= normPt.y;\n\t\tn4.x -= normPt.x;\n\t\tn4.y -= normPt.y;\n\t}\n\tsafeHCoordinateIntersection(p1, p2, q1, q2) {\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotRepresentableException) {\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n\t\t\t} else throw e;\n\t\t} finally {}\n\t\treturn intPt;\n\t}\n\tintersection(p1, p2, q1, q2) {\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n\t\t}\n\t\tif (this._precisionModel !== null) {\n\t\t\tthis._precisionModel.makePrecise(intPt);\n\t\t}\n\t\treturn intPt;\n\t}\n\tsmallestInAbsValue(x1, x2, x3, x4) {\n\t\tvar x = x1;\n\t\tvar xabs = Math.abs(x);\n\t\tif (Math.abs(x2) < xabs) {\n\t\t\tx = x2;\n\t\t\txabs = Math.abs(x2);\n\t\t}\n\t\tif (Math.abs(x3) < xabs) {\n\t\t\tx = x3;\n\t\t\txabs = Math.abs(x3);\n\t\t}\n\t\tif (Math.abs(x4) < xabs) {\n\t\t\tx = x4;\n\t\t}\n\t\treturn x;\n\t}\n\tcheckDD(p1, p2, q1, q2, intPt) {\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\n\t\t}\n\t}\n\tintersectionWithNormalization(p1, p2, q1, q2) {\n\t\tvar n1 = new Coordinate(p1);\n\t\tvar n2 = new Coordinate(p2);\n\t\tvar n3 = new Coordinate(q1);\n\t\tvar n4 = new Coordinate(q2);\n\t\tvar normPt = new Coordinate();\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n\t\tintPt.x += normPt.x;\n\t\tintPt.y += normPt.y;\n\t\treturn intPt;\n\t}\n\tcomputeCollinearIntersection(p1, p2, q1, q2) {\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\n\t\tif (p1q1p2 && p1q2p2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = q2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (q1p1q2 && q1p2q2) {\n\t\t\tthis._intPt[0] = p1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\treturn LineIntersector.NO_INTERSECTION;\n\t}\n\tnormalizeToEnvCentre(n00, n01, n10, n11, normPt) {\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\n\t\tnormPt.x = intMidX;\n\t\tnormPt.y = intMidY;\n\t\tn00.x -= normPt.x;\n\t\tn00.y -= normPt.y;\n\t\tn01.x -= normPt.x;\n\t\tn01.y -= normPt.y;\n\t\tn10.x -= normPt.x;\n\t\tn10.y -= normPt.y;\n\t\tn11.x -= normPt.x;\n\t\tn11.y -= normPt.y;\n\t}\n\tcomputeIntersect(p1, p2, q1, q2) {\n\t\tthis._isProper = false;\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n\t\tvar Pq1 = Orientation.index(p1, p2, q1);\n\t\tvar Pq2 = Orientation.index(p1, p2, q2);\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar Qp1 = Orientation.index(q1, q2, p1);\n\t\tvar Qp2 = Orientation.index(q1, q2, p2);\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\t\tif (collinear) {\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\n\t\t}\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n\t\t\tthis._isProper = false;\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p1;\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p2;\n\t\t\t} else if (Pq1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q1);\n\t\t\t} else if (Pq2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q2);\n\t\t\t} else if (Qp1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p1);\n\t\t\t} else if (Qp2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p2);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._isProper = true;\n\t\t\tthis._intPt[0] = this.intersection(p1, p2, q1, q2);\n\t\t}\n\t\treturn LineIntersector.POINT_INTERSECTION;\n\t}\n\tgetClass() {\n\t\treturn RobustLineIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRobustLineIntersector.constructor_ = function () {};\n","import NotRepresentableException from '../algorithm/NotRepresentableException';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport HCoordinate from '../algorithm/HCoordinate';\nimport Serializable from '../../../../java/io/Serializable';\nimport Distance from '../algorithm/Distance';\nexport default class LineSegment {\n\tconstructor() {\n\t\tLineSegment.constructor_.apply(this, arguments);\n\t}\n\tstatic midPoint(p0, p1) {\n\t\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n\t}\n\tminX() {\n\t\treturn Math.min(this.p0.x, this.p1.x);\n\t}\n\torientationIndex() {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar orient0 = Orientation.index(this.p0, this.p1, seg.p0);\n\t\t\tvar orient1 = Orientation.index(this.p0, this.p1, seg.p1);\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n\t\t\treturn 0;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Orientation.index(this.p0, this.p1, p);\n\t\t}\n\t}\n\ttoGeometry(geomFactory) {\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\n\t}\n\tisVertical() {\n\t\treturn this.p0.x === this.p1.x;\n\t}\n\tequals(o) {\n\t\tif (!(o instanceof LineSegment)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar other = o;\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\n\t}\n\tintersection(line) {\n\t\tvar li = new RobustLineIntersector();\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\n\t\treturn null;\n\t}\n\tproject() {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n\t\t\tvar r = this.projectionFactor(p);\n\t\t\tvar coord = new Coordinate();\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n\t\t\treturn coord;\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\n\t\t\tvar newp0 = this.project(seg.p0);\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\n\t\t\tvar newp1 = this.project(seg.p1);\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\n\t\t\treturn new LineSegment(newp0, newp1);\n\t\t}\n\t}\n\tnormalize() {\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\n\t}\n\tangle() {\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n\t}\n\tgetCoordinate(i) {\n\t\tif (i === 0) return this.p0;\n\t\treturn this.p1;\n\t}\n\tdistancePerpendicular(p) {\n\t\treturn Distance.pointToLinePerpendicular(p, this.p0, this.p1);\n\t}\n\tminY() {\n\t\treturn Math.min(this.p0.y, this.p1.y);\n\t}\n\tmidPoint() {\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\n\t}\n\tprojectionFactor(p) {\n\t\tif (p.equals(this.p0)) return 0.0;\n\t\tif (p.equals(this.p1)) return 1.0;\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = dx * dx + dy * dy;\n\t\tif (len <= 0.0) return Double.NaN;\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n\t\treturn r;\n\t}\n\tclosestPoints(line) {\n\t\tvar intPt = this.intersection(line);\n\t\tif (intPt !== null) {\n\t\t\treturn [intPt, intPt];\n\t\t}\n\t\tvar closestPt = new Array(2).fill(null);\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar dist = null;\n\t\tvar close00 = this.closestPoint(line.p0);\n\t\tminDistance = close00.distance(line.p0);\n\t\tclosestPt[0] = close00;\n\t\tclosestPt[1] = line.p0;\n\t\tvar close01 = this.closestPoint(line.p1);\n\t\tdist = close01.distance(line.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = close01;\n\t\t\tclosestPt[1] = line.p1;\n\t\t}\n\t\tvar close10 = line.closestPoint(this.p0);\n\t\tdist = close10.distance(this.p0);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p0;\n\t\t\tclosestPt[1] = close10;\n\t\t}\n\t\tvar close11 = line.closestPoint(this.p1);\n\t\tdist = close11.distance(this.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p1;\n\t\t\tclosestPt[1] = close11;\n\t\t}\n\t\treturn closestPt;\n\t}\n\tclosestPoint(p) {\n\t\tvar factor = this.projectionFactor(p);\n\t\tif (factor > 0 && factor < 1) {\n\t\t\treturn this.project(p);\n\t\t}\n\t\tvar dist0 = this.p0.distance(p);\n\t\tvar dist1 = this.p1.distance(p);\n\t\tif (dist0 < dist1) return this.p0;\n\t\treturn this.p1;\n\t}\n\tmaxX() {\n\t\treturn Math.max(this.p0.x, this.p1.x);\n\t}\n\tgetLength() {\n\t\treturn this.p0.distance(this.p1);\n\t}\n\tcompareTo(o) {\n\t\tvar other = o;\n\t\tvar comp0 = this.p0.compareTo(other.p0);\n\t\tif (comp0 !== 0) return comp0;\n\t\treturn this.p1.compareTo(other.p1);\n\t}\n\treverse() {\n\t\tvar temp = this.p0;\n\t\tthis.p0 = this.p1;\n\t\tthis.p1 = temp;\n\t}\n\tequalsTopo(other) {\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n\t}\n\tlineIntersection(line) {\n\t\ttry {\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n\t\t\treturn intPt;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t}\n\tmaxY() {\n\t\treturn Math.max(this.p0.y, this.p1.y);\n\t}\n\tpointAlongOffset(segmentLengthFraction, offsetDistance) {\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = 0.0;\n\t\tvar uy = 0.0;\n\t\tif (offsetDistance !== 0.0) {\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n\t\t\tux = offsetDistance * dx / len;\n\t\t\tuy = offsetDistance * dy / len;\n\t\t}\n\t\tvar offsetx = segx - uy;\n\t\tvar offsety = segy + ux;\n\t\tvar coord = new Coordinate(offsetx, offsety);\n\t\treturn coord;\n\t}\n\tsetCoordinates() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tthis.p0.x = p0.x;\n\t\t\tthis.p0.y = p0.y;\n\t\t\tthis.p1.x = p1.x;\n\t\t\tthis.p1.y = p1.y;\n\t\t}\n\t}\n\tsegmentFraction(inputPt) {\n\t\tvar segFrac = this.projectionFactor(inputPt);\n\t\tif (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n\t\treturn segFrac;\n\t}\n\ttoString() {\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n\t}\n\tisHorizontal() {\n\t\treturn this.p0.y === this.p1.y;\n\t}\n\tdistance() {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet ls = arguments[0];\n\t\t\treturn Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Distance.pointToSegment(p, this.p0, this.p1);\n\t\t}\n\t}\n\tpointAlong(segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\treturn coord;\n\t}\n\thashCode() {\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n\t\treturn hash0 ^ hash1;\n\t}\n\tgetClass() {\n\t\treturn LineSegment;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable, Serializable];\n\t}\n}\nLineSegment.constructor_ = function () {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tif (arguments.length === 0) {\n\t\tLineSegment.constructor_.call(this, new Coordinate(), new Coordinate());\n\t} else if (arguments.length === 1) {\n\t\tlet ls = arguments[0];\n\t\tLineSegment.constructor_.call(this, ls.p0, ls.p1);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t} else if (arguments.length === 4) {\n\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\tLineSegment.constructor_.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n\t}\n};\nLineSegment.serialVersionUID = 3252005833466256227;\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nexport default class Location {\n\tconstructor() {\n\t\tLocation.constructor_.apply(this, arguments);\n\t}\n\tstatic toLocationSymbol(locationValue) {\n\t\tswitch (locationValue) {\n\t\t\tcase Location.EXTERIOR:\n\t\t\t\treturn 'e';\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\treturn 'b';\n\t\t\tcase Location.INTERIOR:\n\t\t\t\treturn 'i';\n\t\t\tcase Location.NONE:\n\t\t\t\treturn '-';\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n\t}\n\tgetClass() {\n\t\treturn Location;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLocation.constructor_ = function () {};\nLocation.INTERIOR = 0;\nLocation.BOUNDARY = 1;\nLocation.EXTERIOR = 2;\nLocation.NONE = -1;\n","import Location from './Location';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Dimension from './Dimension';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default class IntersectionMatrix {\n\tconstructor() {\n\t\tIntersectionMatrix.constructor_.apply(this, arguments);\n\t}\n\tstatic matches() {\n\t\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n\t\t\tlet actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1];\n\t\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n\t\t\tlet actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1];\n\t\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\n\t\t\treturn m.matches(requiredDimensionSymbols);\n\t\t}\n\t}\n\tstatic isTrue(actualDimensionValue) {\n\t\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tisIntersects() {\n\t\treturn !this.isDisjoint();\n\t}\n\tisCovers() {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t}\n\tisCoveredBy() {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t}\n\tset() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet dimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], dimensionValue = arguments[2];\n\t\t\tthis._matrix[row][column] = dimensionValue;\n\t\t}\n\t}\n\tisContains() {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t}\n\tsetAtLeast() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet minimumDimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2];\n\t\t\tif (this._matrix[row][column] < minimumDimensionValue) {\n\t\t\t\tthis._matrix[row][column] = minimumDimensionValue;\n\t\t\t}\n\t\t}\n\t}\n\tsetAtLeastIfValid(row, column, minimumDimensionValue) {\n\t\tif (row >= 0 && column >= 0) {\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\n\t\t}\n\t}\n\tisWithin() {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t}\n\tisTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]));\n\t\t}\n\t\treturn false;\n\t}\n\tisOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\treturn false;\n\t}\n\tisEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t}\n\ttoString() {\n\t\tvar builder = new StringBuilder(\"123456789\");\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tbuilder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t}\n\tsetAll(dimensionValue) {\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tthis._matrix[ai][bi] = dimensionValue;\n\t\t\t}\n\t\t}\n\t}\n\tget(row, column) {\n\t\treturn this._matrix[row][column];\n\t}\n\ttranspose() {\n\t\tvar temp = this._matrix[1][0];\n\t\tthis._matrix[1][0] = this._matrix[0][1];\n\t\tthis._matrix[0][1] = temp;\n\t\ttemp = this._matrix[2][0];\n\t\tthis._matrix[2][0] = this._matrix[0][2];\n\t\tthis._matrix[0][2] = temp;\n\t\ttemp = this._matrix[2][1];\n\t\tthis._matrix[2][1] = this._matrix[1][2];\n\t\tthis._matrix[1][2] = temp;\n\t\treturn this;\n\t}\n\tmatches(requiredDimensionSymbols) {\n\t\tif (requiredDimensionSymbols.length !== 9) {\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n\t\t}\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tif (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tadd(im) {\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\n\t\t\t}\n\t\t}\n\t}\n\tisDisjoint() {\n\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n\t}\n\tisCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n\t\t}\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn IntersectionMatrix;\n\t}\n\tget interfaces_() {\n\t\treturn [Cloneable];\n\t}\n}\nIntersectionMatrix.constructor_ = function () {\n\tthis._matrix = null;\n\tif (arguments.length === 0) {\n\t\tthis._matrix = Array(3).fill().map(() => Array(3));\n\t\tthis.setAll(Dimension.FALSE);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet elements = arguments[0];\n\t\t\tIntersectionMatrix.constructor_.call(this);\n\t\t\tthis.set(elements);\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\n\t\t\tlet other = arguments[0];\n\t\t\tIntersectionMatrix.constructor_.call(this);\n\t\t\tthis._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR];\n\t\t}\n\t}\n};\n","import Orientation from './Orientation';\nexport default class Angle {\n\tconstructor() {\n\t\tAngle.constructor_.apply(this, arguments);\n\t}\n\tstatic toDegrees(radians) {\n\t\treturn radians * 180 / Math.PI;\n\t}\n\tstatic normalize(angle) {\n\t\twhile (angle > Math.PI) angle -= Angle.PI_TIMES_2;\n\t\twhile (angle <= -Math.PI) angle += Angle.PI_TIMES_2;\n\t\treturn angle;\n\t}\n\tstatic angle() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Math.atan2(p.y, p.x);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tvar dx = p1.x - p0.x;\n\t\t\tvar dy = p1.y - p0.y;\n\t\t\treturn Math.atan2(dy, dx);\n\t\t}\n\t}\n\tstatic isAcute(p0, p1, p2) {\n\t\tvar dx0 = p0.x - p1.x;\n\t\tvar dy0 = p0.y - p1.y;\n\t\tvar dx1 = p2.x - p1.x;\n\t\tvar dy1 = p2.y - p1.y;\n\t\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\t\treturn dotprod > 0;\n\t}\n\tstatic isObtuse(p0, p1, p2) {\n\t\tvar dx0 = p0.x - p1.x;\n\t\tvar dy0 = p0.y - p1.y;\n\t\tvar dx1 = p2.x - p1.x;\n\t\tvar dy1 = p2.y - p1.y;\n\t\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\t\treturn dotprod < 0;\n\t}\n\tstatic interiorAngle(p0, p1, p2) {\n\t\tvar anglePrev = Angle.angle(p1, p0);\n\t\tvar angleNext = Angle.angle(p1, p2);\n\t\treturn Math.abs(angleNext - anglePrev);\n\t}\n\tstatic normalizePositive(angle) {\n\t\tif (angle < 0.0) {\n\t\t\twhile (angle < 0.0) angle += Angle.PI_TIMES_2;\n\t\t\tif (angle >= Angle.PI_TIMES_2) angle = 0.0;\n\t\t} else {\n\t\t\twhile (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2;\n\t\t\tif (angle < 0.0) angle = 0.0;\n\t\t}\n\t\treturn angle;\n\t}\n\tstatic angleBetween(tip1, tail, tip2) {\n\t\tvar a1 = Angle.angle(tail, tip1);\n\t\tvar a2 = Angle.angle(tail, tip2);\n\t\treturn Angle.diff(a1, a2);\n\t}\n\tstatic diff(ang1, ang2) {\n\t\tvar delAngle = null;\n\t\tif (ang1 < ang2) {\n\t\t\tdelAngle = ang2 - ang1;\n\t\t} else {\n\t\t\tdelAngle = ang1 - ang2;\n\t\t}\n\t\tif (delAngle > Math.PI) {\n\t\t\tdelAngle = 2 * Math.PI - delAngle;\n\t\t}\n\t\treturn delAngle;\n\t}\n\tstatic toRadians(angleDegrees) {\n\t\treturn angleDegrees * Math.PI / 180.0;\n\t}\n\tstatic getTurn(ang1, ang2) {\n\t\tvar crossproduct = Math.sin(ang2 - ang1);\n\t\tif (crossproduct > 0) {\n\t\t\treturn Angle.COUNTERCLOCKWISE;\n\t\t}\n\t\tif (crossproduct < 0) {\n\t\t\treturn Angle.CLOCKWISE;\n\t\t}\n\t\treturn Angle.NONE;\n\t}\n\tstatic angleBetweenOriented(tip1, tail, tip2) {\n\t\tvar a1 = Angle.angle(tail, tip1);\n\t\tvar a2 = Angle.angle(tail, tip2);\n\t\tvar angDel = a2 - a1;\n\t\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\t\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\t\treturn angDel;\n\t}\n\tgetClass() {\n\t\treturn Angle;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nAngle.constructor_ = function () {};\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\nAngle.PI_OVER_2 = Math.PI / 2.0;\nAngle.PI_OVER_4 = Math.PI / 4.0;\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE;\nAngle.CLOCKWISE = Orientation.CLOCKWISE;\nAngle.NONE = Orientation.COLLINEAR;\n","import Coordinate from './Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Angle from '../algorithm/Angle';\nimport HCoordinate from '../algorithm/HCoordinate';\nexport default class Triangle {\n\tconstructor() {\n\t\tTriangle.constructor_.apply(this, arguments);\n\t}\n\tstatic area(a, b, c) {\n\t\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n\t}\n\tstatic signedArea(a, b, c) {\n\t\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n\t}\n\tstatic det(m00, m01, m10, m11) {\n\t\treturn m00 * m11 - m01 * m10;\n\t}\n\tstatic interpolateZ(p, v0, v1, v2) {\n\t\tvar x0 = v0.x;\n\t\tvar y0 = v0.y;\n\t\tvar a = v1.x - x0;\n\t\tvar b = v2.x - x0;\n\t\tvar c = v1.y - y0;\n\t\tvar d = v2.y - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = p.x - x0;\n\t\tvar dy = p.y - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\treturn z;\n\t}\n\tstatic longestSideLength(a, b, c) {\n\t\tvar lenAB = a.distance(b);\n\t\tvar lenBC = b.distance(c);\n\t\tvar lenCA = c.distance(a);\n\t\tvar maxLen = lenAB;\n\t\tif (lenBC > maxLen) maxLen = lenBC;\n\t\tif (lenCA > maxLen) maxLen = lenCA;\n\t\treturn maxLen;\n\t}\n\tstatic isAcute(a, b, c) {\n\t\tif (!Angle.isAcute(a, b, c)) return false;\n\t\tif (!Angle.isAcute(b, c, a)) return false;\n\t\tif (!Angle.isAcute(c, a, b)) return false;\n\t\treturn true;\n\t}\n\tstatic circumcentre(a, b, c) {\n\t\tvar cx = c.x;\n\t\tvar cy = c.y;\n\t\tvar ax = a.x - cx;\n\t\tvar ay = a.y - cy;\n\t\tvar bx = b.x - cx;\n\t\tvar by = b.y - cy;\n\t\tvar denom = 2 * Triangle.det(ax, ay, bx, by);\n\t\tvar numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n\t\tvar numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n\t\tvar ccx = cx - numx / denom;\n\t\tvar ccy = cy + numy / denom;\n\t\treturn new Coordinate(ccx, ccy);\n\t}\n\tstatic perpendicularBisector(a, b) {\n\t\tvar dx = b.x - a.x;\n\t\tvar dy = b.y - a.y;\n\t\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t}\n\tstatic angleBisector(a, b, c) {\n\t\tvar len0 = b.distance(a);\n\t\tvar len2 = b.distance(c);\n\t\tvar frac = len0 / (len0 + len2);\n\t\tvar dx = c.x - a.x;\n\t\tvar dy = c.y - a.y;\n\t\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n\t\treturn splitPt;\n\t}\n\tstatic area3D(a, b, c) {\n\t\tvar ux = b.x - a.x;\n\t\tvar uy = b.y - a.y;\n\t\tvar uz = b.z - a.z;\n\t\tvar vx = c.x - a.x;\n\t\tvar vy = c.y - a.y;\n\t\tvar vz = c.z - a.z;\n\t\tvar crossx = uy * vz - uz * vy;\n\t\tvar crossy = uz * vx - ux * vz;\n\t\tvar crossz = ux * vy - uy * vx;\n\t\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n\t\tvar area3D = Math.sqrt(absSq) / 2;\n\t\treturn area3D;\n\t}\n\tstatic centroid(a, b, c) {\n\t\tvar x = (a.x + b.x + c.x) / 3;\n\t\tvar y = (a.y + b.y + c.y) / 3;\n\t\treturn new Coordinate(x, y);\n\t}\n\tstatic inCentre(a, b, c) {\n\t\tvar len0 = b.distance(c);\n\t\tvar len1 = a.distance(c);\n\t\tvar len2 = a.distance(b);\n\t\tvar circum = len0 + len1 + len2;\n\t\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n\t\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n\t\treturn new Coordinate(inCentreX, inCentreY);\n\t}\n\tarea() {\n\t\treturn Triangle.area(this.p0, this.p1, this.p2);\n\t}\n\tsignedArea() {\n\t\treturn Triangle.signedArea(this.p0, this.p1, this.p2);\n\t}\n\tinterpolateZ(p) {\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n\t\treturn Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\n\t}\n\tlongestSideLength() {\n\t\treturn Triangle.longestSideLength(this.p0, this.p1, this.p2);\n\t}\n\tisAcute() {\n\t\treturn Triangle.isAcute(this.p0, this.p1, this.p2);\n\t}\n\tcircumcentre() {\n\t\treturn Triangle.circumcentre(this.p0, this.p1, this.p2);\n\t}\n\tarea3D() {\n\t\treturn Triangle.area3D(this.p0, this.p1, this.p2);\n\t}\n\tcentroid() {\n\t\treturn Triangle.centroid(this.p0, this.p1, this.p2);\n\t}\n\tinCentre() {\n\t\treturn Triangle.inCentre(this.p0, this.p1, this.p2);\n\t}\n\tgetClass() {\n\t\treturn Triangle;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTriangle.constructor_ = function () {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.p2 = null;\n\tlet p0 = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\tthis.p0 = p0;\n\tthis.p1 = p1;\n\tthis.p2 = p2;\n};\n","import Exception from '../../../../../java/lang/Exception';\nexport default class NoninvertibleTransformationException extends Exception {\n\tconstructor() {\n\t\tsuper();\n\t\tNoninvertibleTransformationException.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn NoninvertibleTransformationException;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNoninvertibleTransformationException.constructor_ = function () {\n\tif (arguments.length === 0) {\n\t\tException.constructor_.call(this);\n\t} else if (arguments.length === 1) {\n\t\tlet msg = arguments[0];\n\t\tException.constructor_.call(this, msg);\n\t}\n};\n","import NoninvertibleTransformationException from './NoninvertibleTransformationException';\nimport hasInterface from '../../../../../hasInterface';\nimport Coordinate from '../Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Exception from '../../../../../java/lang/Exception';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Cloneable from '../../../../../java/lang/Cloneable';\nimport CoordinateSequenceFilter from '../CoordinateSequenceFilter';\nimport Assert from '../../util/Assert';\nexport default class AffineTransformation {\n\tconstructor() {\n\t\tAffineTransformation.constructor_.apply(this, arguments);\n\t}\n\tstatic translationInstance(x, y) {\n\t\tvar trans = new AffineTransformation();\n\t\ttrans.setToTranslation(x, y);\n\t\treturn trans;\n\t}\n\tstatic shearInstance(xShear, yShear) {\n\t\tvar trans = new AffineTransformation();\n\t\ttrans.setToShear(xShear, yShear);\n\t\treturn trans;\n\t}\n\tstatic reflectionInstance() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tvar trans = new AffineTransformation();\n\t\t\ttrans.setToReflection(x, y);\n\t\t\treturn trans;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\t\tvar trans = new AffineTransformation();\n\t\t\ttrans.setToReflection(x0, y0, x1, y1);\n\t\t\treturn trans;\n\t\t}\n\t}\n\tstatic rotationInstance() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet theta = arguments[0];\n\t\t\treturn AffineTransformation.rotationInstance(Math.sin(theta), Math.cos(theta));\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet sinTheta = arguments[0], cosTheta = arguments[1];\n\t\t\tvar trans = new AffineTransformation();\n\t\t\ttrans.setToRotation(sinTheta, cosTheta);\n\t\t\treturn trans;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet theta = arguments[0], x = arguments[1], y = arguments[2];\n\t\t\treturn AffineTransformation.rotationInstance(Math.sin(theta), Math.cos(theta), x, y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet sinTheta = arguments[0], cosTheta = arguments[1], x = arguments[2], y = arguments[3];\n\t\t\tvar trans = new AffineTransformation();\n\t\t\ttrans.setToRotation(sinTheta, cosTheta, x, y);\n\t\t\treturn trans;\n\t\t}\n\t}\n\tstatic scaleInstance() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet xScale = arguments[0], yScale = arguments[1];\n\t\t\tvar trans = new AffineTransformation();\n\t\t\ttrans.setToScale(xScale, yScale);\n\t\t\treturn trans;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet xScale = arguments[0], yScale = arguments[1], x = arguments[2], y = arguments[3];\n\t\t\tvar trans = new AffineTransformation();\n\t\t\ttrans.translate(-x, -y);\n\t\t\ttrans.scale(xScale, yScale);\n\t\t\ttrans.translate(x, y);\n\t\t\treturn trans;\n\t\t}\n\t}\n\tsetToReflectionBasic(x0, y0, x1, y1) {\n\t\tif (x0 === x1 && y0 === y1) {\n\t\t\tthrow new IllegalArgumentException(\"Reflection line points must be distinct\");\n\t\t}\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tvar d = Math.sqrt(dx * dx + dy * dy);\n\t\tvar sin = dy / d;\n\t\tvar cos = dx / d;\n\t\tvar cs2 = 2 * sin * cos;\n\t\tvar c2s2 = cos * cos - sin * sin;\n\t\tthis._m00 = c2s2;\n\t\tthis._m01 = cs2;\n\t\tthis._m02 = 0.0;\n\t\tthis._m10 = cs2;\n\t\tthis._m11 = -c2s2;\n\t\tthis._m12 = 0.0;\n\t\treturn this;\n\t}\n\tgetInverse() {\n\t\tvar det = this.getDeterminant();\n\t\tif (det === 0) throw new NoninvertibleTransformationException(\"Transformation is non-invertible\");\n\t\tvar im00 = this._m11 / det;\n\t\tvar im10 = -this._m10 / det;\n\t\tvar im01 = -this._m01 / det;\n\t\tvar im11 = this._m00 / det;\n\t\tvar im02 = (this._m01 * this._m12 - this._m02 * this._m11) / det;\n\t\tvar im12 = (-this._m00 * this._m12 + this._m10 * this._m02) / det;\n\t\treturn new AffineTransformation(im00, im01, im02, im10, im11, im12);\n\t}\n\tcompose(trans) {\n\t\tvar mp00 = trans._m00 * this._m00 + trans._m01 * this._m10;\n\t\tvar mp01 = trans._m00 * this._m01 + trans._m01 * this._m11;\n\t\tvar mp02 = trans._m00 * this._m02 + trans._m01 * this._m12 + trans._m02;\n\t\tvar mp10 = trans._m10 * this._m00 + trans._m11 * this._m10;\n\t\tvar mp11 = trans._m10 * this._m01 + trans._m11 * this._m11;\n\t\tvar mp12 = trans._m10 * this._m02 + trans._m11 * this._m12 + trans._m12;\n\t\tthis._m00 = mp00;\n\t\tthis._m01 = mp01;\n\t\tthis._m02 = mp02;\n\t\tthis._m10 = mp10;\n\t\tthis._m11 = mp11;\n\t\tthis._m12 = mp12;\n\t\treturn this;\n\t}\n\tequals(obj) {\n\t\tif (obj === null) return false;\n\t\tif (!(obj instanceof AffineTransformation)) return false;\n\t\tvar trans = obj;\n\t\treturn this._m00 === trans._m00 && this._m01 === trans._m01 && this._m02 === trans._m02 && this._m10 === trans._m10 && this._m11 === trans._m11 && this._m12 === trans._m12;\n\t}\n\tsetToScale(xScale, yScale) {\n\t\tthis._m00 = xScale;\n\t\tthis._m01 = 0.0;\n\t\tthis._m02 = 0.0;\n\t\tthis._m10 = 0.0;\n\t\tthis._m11 = yScale;\n\t\tthis._m12 = 0.0;\n\t\treturn this;\n\t}\n\tisIdentity() {\n\t\treturn this._m00 === 1 && this._m01 === 0 && this._m02 === 0 && this._m10 === 0 && this._m11 === 1 && this._m12 === 0;\n\t}\n\tscale(xScale, yScale) {\n\t\tthis.compose(AffineTransformation.scaleInstance(xScale, yScale));\n\t\treturn this;\n\t}\n\tsetToIdentity() {\n\t\tthis._m00 = 1.0;\n\t\tthis._m01 = 0.0;\n\t\tthis._m02 = 0.0;\n\t\tthis._m10 = 0.0;\n\t\tthis._m11 = 1.0;\n\t\tthis._m12 = 0.0;\n\t\treturn this;\n\t}\n\tisGeometryChanged() {\n\t\treturn true;\n\t}\n\tsetTransformation() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet trans = arguments[0];\n\t\t\tthis._m00 = trans._m00;\n\t\t\tthis._m01 = trans._m01;\n\t\t\tthis._m02 = trans._m02;\n\t\t\tthis._m10 = trans._m10;\n\t\t\tthis._m11 = trans._m11;\n\t\t\tthis._m12 = trans._m12;\n\t\t\treturn this;\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet m00 = arguments[0], m01 = arguments[1], m02 = arguments[2], m10 = arguments[3], m11 = arguments[4], m12 = arguments[5];\n\t\t\tthis._m00 = m00;\n\t\t\tthis._m01 = m01;\n\t\t\tthis._m02 = m02;\n\t\t\tthis._m10 = m10;\n\t\t\tthis._m11 = m11;\n\t\t\tthis._m12 = m12;\n\t\t\treturn this;\n\t\t}\n\t}\n\tsetToRotation() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet theta = arguments[0];\n\t\t\tthis.setToRotation(Math.sin(theta), Math.cos(theta));\n\t\t\treturn this;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet sinTheta = arguments[0], cosTheta = arguments[1];\n\t\t\tthis._m00 = cosTheta;\n\t\t\tthis._m01 = -sinTheta;\n\t\t\tthis._m02 = 0.0;\n\t\t\tthis._m10 = sinTheta;\n\t\t\tthis._m11 = cosTheta;\n\t\t\tthis._m12 = 0.0;\n\t\t\treturn this;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet theta = arguments[0], x = arguments[1], y = arguments[2];\n\t\t\tthis.setToRotation(Math.sin(theta), Math.cos(theta), x, y);\n\t\t\treturn this;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet sinTheta = arguments[0], cosTheta = arguments[1], x = arguments[2], y = arguments[3];\n\t\t\tthis._m00 = cosTheta;\n\t\t\tthis._m01 = -sinTheta;\n\t\t\tthis._m02 = x - x * cosTheta + y * sinTheta;\n\t\t\tthis._m10 = sinTheta;\n\t\t\tthis._m11 = cosTheta;\n\t\t\tthis._m12 = y - x * sinTheta - y * cosTheta;\n\t\t\treturn this;\n\t\t}\n\t}\n\tgetMatrixEntries() {\n\t\treturn [this._m00, this._m01, this._m02, this._m10, this._m11, this._m12];\n\t}\n\tfilter(seq, i) {\n\t\tthis.transform(seq, i);\n\t}\n\trotate() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet theta = arguments[0];\n\t\t\tthis.compose(AffineTransformation.rotationInstance(theta));\n\t\t\treturn this;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet sinTheta = arguments[0], cosTheta = arguments[1];\n\t\t\tthis.compose(AffineTransformation.rotationInstance(sinTheta, cosTheta));\n\t\t\treturn this;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet theta = arguments[0], x = arguments[1], y = arguments[2];\n\t\t\tthis.compose(AffineTransformation.rotationInstance(theta, x, y));\n\t\t\treturn this;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet sinTheta = arguments[0], cosTheta = arguments[1], x = arguments[2], y = arguments[3];\n\t\t\tthis.compose(AffineTransformation.rotationInstance(sinTheta, cosTheta));\n\t\t\treturn this;\n\t\t}\n\t}\n\tgetDeterminant() {\n\t\treturn this._m00 * this._m11 - this._m01 * this._m10;\n\t}\n\tcomposeBefore(trans) {\n\t\tvar mp00 = this._m00 * trans._m00 + this._m01 * trans._m10;\n\t\tvar mp01 = this._m00 * trans._m01 + this._m01 * trans._m11;\n\t\tvar mp02 = this._m00 * trans._m02 + this._m01 * trans._m12 + this._m02;\n\t\tvar mp10 = this._m10 * trans._m00 + this._m11 * trans._m10;\n\t\tvar mp11 = this._m10 * trans._m01 + this._m11 * trans._m11;\n\t\tvar mp12 = this._m10 * trans._m02 + this._m11 * trans._m12 + this._m12;\n\t\tthis._m00 = mp00;\n\t\tthis._m01 = mp01;\n\t\tthis._m02 = mp02;\n\t\tthis._m10 = mp10;\n\t\tthis._m11 = mp11;\n\t\tthis._m12 = mp12;\n\t\treturn this;\n\t}\n\tsetToShear(xShear, yShear) {\n\t\tthis._m00 = 1.0;\n\t\tthis._m01 = xShear;\n\t\tthis._m02 = 0.0;\n\t\tthis._m10 = yShear;\n\t\tthis._m11 = 1.0;\n\t\tthis._m12 = 0.0;\n\t\treturn this;\n\t}\n\tisDone() {\n\t\treturn false;\n\t}\n\tclone() {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t}\n\ttranslate(x, y) {\n\t\tthis.compose(AffineTransformation.translationInstance(x, y));\n\t\treturn this;\n\t}\n\tsetToReflection() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (x === 0.0 && y === 0.0) {\n\t\t\t\tthrow new IllegalArgumentException(\"Reflection vector must be non-zero\");\n\t\t\t}\n\t\t\tif (x === y) {\n\t\t\t\tthis._m00 = 0.0;\n\t\t\t\tthis._m01 = 1.0;\n\t\t\t\tthis._m02 = 0.0;\n\t\t\t\tthis._m10 = 1.0;\n\t\t\t\tthis._m11 = 0.0;\n\t\t\t\tthis._m12 = 0.0;\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tvar d = Math.sqrt(x * x + y * y);\n\t\t\tvar sin = y / d;\n\t\t\tvar cos = x / d;\n\t\t\tthis.rotate(-sin, cos);\n\t\t\tthis.scale(1, -1);\n\t\t\tthis.rotate(sin, cos);\n\t\t\treturn this;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\t\tif (x0 === x1 && y0 === y1) {\n\t\t\t\tthrow new IllegalArgumentException(\"Reflection line points must be distinct\");\n\t\t\t}\n\t\t\tthis.setToTranslation(-x0, -y0);\n\t\t\tvar dx = x1 - x0;\n\t\t\tvar dy = y1 - y0;\n\t\t\tvar d = Math.sqrt(dx * dx + dy * dy);\n\t\t\tvar sin = dy / d;\n\t\t\tvar cos = dx / d;\n\t\t\tthis.rotate(-sin, cos);\n\t\t\tthis.scale(1, -1);\n\t\t\tthis.rotate(sin, cos);\n\t\t\tthis.translate(x0, y0);\n\t\t\treturn this;\n\t\t}\n\t}\n\ttoString() {\n\t\treturn \"AffineTransformation[[\" + this._m00 + \", \" + this._m01 + \", \" + this._m02 + \"], [\" + this._m10 + \", \" + this._m11 + \", \" + this._m12 + \"]]\";\n\t}\n\tsetToTranslation(dx, dy) {\n\t\tthis._m00 = 1.0;\n\t\tthis._m01 = 0.0;\n\t\tthis._m02 = dx;\n\t\tthis._m10 = 0.0;\n\t\tthis._m11 = 1.0;\n\t\tthis._m12 = dy;\n\t\treturn this;\n\t}\n\tshear(xShear, yShear) {\n\t\tthis.compose(AffineTransformation.shearInstance(xShear, yShear));\n\t\treturn this;\n\t}\n\ttransform() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet g = arguments[0];\n\t\t\tvar g2 = g.copy();\n\t\t\tg2.apply(this);\n\t\t\treturn g2;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\t\tlet src = arguments[0], dest = arguments[1];\n\t\t\t\tvar xp = this._m00 * src.x + this._m01 * src.y + this._m02;\n\t\t\t\tvar yp = this._m10 * src.x + this._m11 * src.y + this._m12;\n\t\t\t\tdest.x = xp;\n\t\t\t\tdest.y = yp;\n\t\t\t\treturn dest;\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n\t\t\t\tlet seq = arguments[0], i = arguments[1];\n\t\t\t\tvar xp = this._m00 * seq.getOrdinate(i, 0) + this._m01 * seq.getOrdinate(i, 1) + this._m02;\n\t\t\t\tvar yp = this._m10 * seq.getOrdinate(i, 0) + this._m11 * seq.getOrdinate(i, 1) + this._m12;\n\t\t\t\tseq.setOrdinate(i, 0, xp);\n\t\t\t\tseq.setOrdinate(i, 1, yp);\n\t\t\t}\n\t\t}\n\t}\n\treflect() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tthis.compose(AffineTransformation.reflectionInstance(x, y));\n\t\t\treturn this;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\t\tthis.compose(AffineTransformation.reflectionInstance(x0, y0, x1, y1));\n\t\t\treturn this;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn AffineTransformation;\n\t}\n\tget interfaces_() {\n\t\treturn [Cloneable, CoordinateSequenceFilter];\n\t}\n}\nAffineTransformation.constructor_ = function () {\n\tthis._m00 = null;\n\tthis._m01 = null;\n\tthis._m02 = null;\n\tthis._m10 = null;\n\tthis._m11 = null;\n\tthis._m12 = null;\n\tif (arguments.length === 0) {\n\t\tthis.setToIdentity();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet matrix = arguments[0];\n\t\t\tthis._m00 = matrix[0];\n\t\t\tthis._m01 = matrix[1];\n\t\t\tthis._m02 = matrix[2];\n\t\t\tthis._m10 = matrix[3];\n\t\t\tthis._m11 = matrix[4];\n\t\t\tthis._m12 = matrix[5];\n\t\t} else if (arguments[0] instanceof AffineTransformation) {\n\t\t\tlet trans = arguments[0];\n\t\t\tthis.setTransformation(trans);\n\t\t}\n\t} else if (arguments.length === 6) {\n\t\tif (typeof arguments[5] === \"number\" && (typeof arguments[4] === \"number\" && (typeof arguments[3] === \"number\" && (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\"))))) {\n\t\t\tlet m00 = arguments[0], m01 = arguments[1], m02 = arguments[2], m10 = arguments[3], m11 = arguments[4], m12 = arguments[5];\n\t\t\tthis.setTransformation(m00, m01, m02, m10, m11, m12);\n\t\t} else if (arguments[5] instanceof Coordinate && (arguments[4] instanceof Coordinate && (arguments[3] instanceof Coordinate && (arguments[2] instanceof Coordinate && (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate))))) {\n\t\t\tlet src0 = arguments[0], src1 = arguments[1], src2 = arguments[2], dest0 = arguments[3], dest1 = arguments[4], dest2 = arguments[5];\n\t\t}\n\t}\n};\n","import Coordinate from '../geom/Coordinate';\nimport CGAlgorithmsDD from '../algorithm/CGAlgorithmsDD';\nimport Angle from '../algorithm/Angle';\nimport Assert from '../util/Assert';\nexport default class Vector2D {\n\tconstructor() {\n\t\tVector2D.constructor_.apply(this, arguments);\n\t}\n\tstatic create() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vector2D) {\n\t\t\t\tlet v = arguments[0];\n\t\t\t\treturn new Vector2D(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet coord = arguments[0];\n\t\t\t\treturn new Vector2D(coord);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\t\treturn new Vector2D(x, y);\n\t\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\t\tlet from = arguments[0], to = arguments[1];\n\t\t\t\treturn new Vector2D(from, to);\n\t\t\t}\n\t\t}\n\t}\n\tdot(v) {\n\t\treturn this._x * v._x + this._y * v._y;\n\t}\n\tisParallel(v) {\n\t\treturn 0.0 === CGAlgorithmsDD.signOfDet2x2(this._x, this._y, v._x, v._y);\n\t}\n\tgetComponent(index) {\n\t\tif (index === 0) return this._x;\n\t\treturn this._y;\n\t}\n\tsubtract(v) {\n\t\treturn Vector2D.create(this._x - v._x, this._y - v._y);\n\t}\n\tequals(o) {\n\t\tif (!(o instanceof Vector2D)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar v = o;\n\t\treturn this._x === v._x && this._y === v._y;\n\t}\n\tnormalize() {\n\t\tvar length = this.length();\n\t\tif (length > 0.0) return this.divide(length);\n\t\treturn Vector2D.create(0.0, 0.0);\n\t}\n\tangle() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn Math.atan2(this._y, this._x);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet v = arguments[0];\n\t\t\treturn Angle.diff(v.angle(), this.angle());\n\t\t}\n\t}\n\tweightedSum(v, frac) {\n\t\treturn Vector2D.create(frac * this._x + (1.0 - frac) * v._x, frac * this._y + (1.0 - frac) * v._y);\n\t}\n\tdivide(d) {\n\t\treturn Vector2D.create(this._x / d, this._y / d);\n\t}\n\trotateByQuarterCircle(numQuarters) {\n\t\tvar nQuad = numQuarters % 4;\n\t\tif (numQuarters < 0 && nQuad !== 0) {\n\t\t\tnQuad = nQuad + 4;\n\t\t}\n\t\tswitch (nQuad) {\n\t\t\tcase 0:\n\t\t\t\treturn Vector2D.create(this._x, this._y);\n\t\t\tcase 1:\n\t\t\t\treturn Vector2D.create(-this._y, this._x);\n\t\t\tcase 2:\n\t\t\t\treturn Vector2D.create(-this._x, -this._y);\n\t\t\tcase 3:\n\t\t\t\treturn Vector2D.create(this._y, -this._x);\n\t\t}\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t}\n\trotate(angle) {\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\t\treturn Vector2D.create(this._x * cos - this._y * sin, this._x * sin + this._y * cos);\n\t}\n\tangleTo(v) {\n\t\tvar a1 = this.angle();\n\t\tvar a2 = v.angle();\n\t\tvar angDel = a2 - a1;\n\t\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\t\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\t\treturn angDel;\n\t}\n\tgetX() {\n\t\treturn this._x;\n\t}\n\tlengthSquared() {\n\t\treturn this._x * this._x + this._y * this._y;\n\t}\n\tnegate() {\n\t\treturn Vector2D.create(-this._x, -this._y);\n\t}\n\tclone() {\n\t\treturn new Vector2D(this);\n\t}\n\ttoCoordinate() {\n\t\treturn new Coordinate(this._x, this._y);\n\t}\n\ttranslate(coord) {\n\t\treturn new Coordinate(this._x + coord.x, this._y + coord.y);\n\t}\n\tmultiply(d) {\n\t\treturn Vector2D.create(this._x * d, this._y * d);\n\t}\n\ttoString() {\n\t\treturn \"[\" + this._x + \", \" + this._y + \"]\";\n\t}\n\tlength() {\n\t\treturn Math.sqrt(this._x * this._x + this._y * this._y);\n\t}\n\taverage(v) {\n\t\treturn this.weightedSum(v, 0.5);\n\t}\n\tgetY() {\n\t\treturn this._y;\n\t}\n\tadd(v) {\n\t\treturn Vector2D.create(this._x + v._x, this._y + v._y);\n\t}\n\tdistance(v) {\n\t\tvar delx = v._x - this._x;\n\t\tvar dely = v._y - this._y;\n\t\treturn Math.sqrt(delx * delx + dely * dely);\n\t}\n\thashCode() {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this._x);\n\t\tresult = 37 * result + Coordinate.hashCode(this._y);\n\t\treturn result;\n\t}\n\tgetClass() {\n\t\treturn Vector2D;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nVector2D.constructor_ = function () {\n\tthis._x = null;\n\tthis._y = null;\n\tif (arguments.length === 0) {\n\t\tVector2D.constructor_.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Vector2D) {\n\t\t\tlet v = arguments[0];\n\t\t\tthis._x = v._x;\n\t\t\tthis._y = v._y;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet v = arguments[0];\n\t\t\tthis._x = v.x;\n\t\t\tthis._y = v.y;\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet from = arguments[0], to = arguments[1];\n\t\t\tthis._x = to.x - from.x;\n\t\t\tthis._y = to.y - from.y;\n\t\t}\n\t}\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport Double from '../../../../../java/lang/Double';\nexport default class PointPairDistance {\n\tconstructor() {\n\t\tPointPairDistance.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinates() {\n\t\treturn this._pt;\n\t}\n\tgetCoordinate(i) {\n\t\treturn this._pt[i];\n\t}\n\tsetMinimum() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ptDist = arguments[0];\n\t\t\tthis.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tif (this._isNull) {\n\t\t\t\tthis.initialize(p0, p1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar dist = p0.distance(p1);\n\t\t\tif (dist < this._distance) this.initialize(p0, p1, dist);\n\t\t}\n\t}\n\tinitialize() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis._isNull = true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tthis._pt[0].setCoordinate(p0);\n\t\t\tthis._pt[1].setCoordinate(p1);\n\t\t\tthis._distance = p0.distance(p1);\n\t\t\tthis._isNull = false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1], distance = arguments[2];\n\t\t\tthis._pt[0].setCoordinate(p0);\n\t\t\tthis._pt[1].setCoordinate(p1);\n\t\t\tthis._distance = distance;\n\t\t\tthis._isNull = false;\n\t\t}\n\t}\n\ttoString() {\n\t\treturn WKTWriter.toLineString(this._pt[0], this._pt[1]);\n\t}\n\tgetDistance() {\n\t\treturn this._distance;\n\t}\n\tsetMaximum() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ptDist = arguments[0];\n\t\t\tthis.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tif (this._isNull) {\n\t\t\t\tthis.initialize(p0, p1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar dist = p0.distance(p1);\n\t\t\tif (dist > this._distance) this.initialize(p0, p1, dist);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn PointPairDistance;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPointPairDistance.constructor_ = function () {\n\tthis._pt = [new Coordinate(), new Coordinate()];\n\tthis._distance = Double.NaN;\n\tthis._isNull = true;\n};\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport Coordinate from '../../geom/Coordinate';\nimport Polygon from '../../geom/Polygon';\nimport LineSegment from '../../geom/LineSegment';\nimport PointPairDistance from './PointPairDistance';\nimport GeometryCollection from '../../geom/GeometryCollection';\nexport default class DistanceToPoint {\n\tconstructor() {\n\t\tDistanceToPoint.constructor_.apply(this, arguments);\n\t}\n\tstatic computeDistance() {\n\t\tif (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n\t\t\tlet line = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\t\tvar tempSegment = new LineSegment();\n\t\t\tvar coords = line.getCoordinates();\n\t\t\tfor (var i = 0; i < coords.length - 1; i++) {\n\t\t\t\ttempSegment.setCoordinates(coords[i], coords[i + 1]);\n\t\t\t\tvar closestPt = tempSegment.closestPoint(pt);\n\t\t\t\tptDist.setMinimum(closestPt, pt);\n\t\t\t}\n\t\t} else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n\t\t\tlet poly = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\t\tDistanceToPoint.computeDistance(poly.getExteriorRing(), pt, ptDist);\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tDistanceToPoint.computeDistance(poly.getInteriorRingN(i), pt, ptDist);\n\t\t\t}\n\t\t} else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n\t\t\tlet geom = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tDistanceToPoint.computeDistance(geom, pt, ptDist);\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tDistanceToPoint.computeDistance(geom, pt, ptDist);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\t\tDistanceToPoint.computeDistance(g, pt, ptDist);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tptDist.setMinimum(geom.getCoordinate(), pt);\n\t\t\t}\n\t\t} else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n\t\t\tlet segment = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\t\tvar closestPt = segment.closestPoint(pt);\n\t\t\tptDist.setMinimum(closestPt, pt);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn DistanceToPoint;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDistanceToPoint.constructor_ = function () {};\n","import DistanceToPoint from './DistanceToPoint';\nimport CoordinateFilter from '../../geom/CoordinateFilter';\nimport Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport PointPairDistance from './PointPairDistance';\nimport CoordinateSequenceFilter from '../../geom/CoordinateSequenceFilter';\nexport default class DiscreteHausdorffDistance {\n\tconstructor() {\n\t\tDiscreteHausdorffDistance.constructor_.apply(this, arguments);\n\t}\n\tstatic distance() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\tvar dist = new DiscreteHausdorffDistance(g0, g1);\n\t\t\treturn dist.distance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1], densifyFrac = arguments[2];\n\t\t\tvar dist = new DiscreteHausdorffDistance(g0, g1);\n\t\t\tdist.setDensifyFraction(densifyFrac);\n\t\t\treturn dist.distance();\n\t\t}\n\t}\n\tgetCoordinates() {\n\t\treturn this._ptDist.getCoordinates();\n\t}\n\tsetDensifyFraction(densifyFrac) {\n\t\tif (densifyFrac > 1.0 || densifyFrac <= 0.0) throw new IllegalArgumentException(\"Fraction is not in range (0.0 - 1.0]\");\n\t\tthis._densifyFrac = densifyFrac;\n\t}\n\tcompute(g0, g1) {\n\t\tthis.computeOrientedDistance(g0, g1, this._ptDist);\n\t\tthis.computeOrientedDistance(g1, g0, this._ptDist);\n\t}\n\tdistance() {\n\t\tthis.compute(this._g0, this._g1);\n\t\treturn this._ptDist.getDistance();\n\t}\n\tcomputeOrientedDistance(discreteGeom, geom, ptDist) {\n\t\tvar distFilter = new MaxPointDistanceFilter(geom);\n\t\tdiscreteGeom.apply(distFilter);\n\t\tptDist.setMaximum(distFilter.getMaxPointDistance());\n\t\tif (this._densifyFrac > 0) {\n\t\t\tvar fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n\t\t\tdiscreteGeom.apply(fracFilter);\n\t\t\tptDist.setMaximum(fracFilter.getMaxPointDistance());\n\t\t}\n\t}\n\torientedDistance() {\n\t\tthis.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n\t\treturn this._ptDist.getDistance();\n\t}\n\tgetClass() {\n\t\treturn DiscreteHausdorffDistance;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass MaxPointDistanceFilter {\n\tconstructor() {\n\t\tMaxPointDistanceFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(pt) {\n\t\tthis._minPtDist.initialize();\n\t\tDistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n\t\tthis._maxPtDist.setMaximum(this._minPtDist);\n\t}\n\tgetMaxPointDistance() {\n\t\treturn this._maxPtDist;\n\t}\n\tgetClass() {\n\t\treturn MaxPointDistanceFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateFilter];\n\t}\n}\nMaxPointDistanceFilter.constructor_ = function () {\n\tthis._maxPtDist = new PointPairDistance();\n\tthis._minPtDist = new PointPairDistance();\n\tthis._euclideanDist = new DistanceToPoint();\n\tthis._geom = null;\n\tlet geom = arguments[0];\n\tthis._geom = geom;\n};\nclass MaxDensifiedByFractionDistanceFilter {\n\tconstructor() {\n\t\tMaxDensifiedByFractionDistanceFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(seq, index) {\n\t\tif (index === 0) return null;\n\t\tvar p0 = seq.getCoordinate(index - 1);\n\t\tvar p1 = seq.getCoordinate(index);\n\t\tvar delx = (p1.x - p0.x) / this._numSubSegs;\n\t\tvar dely = (p1.y - p0.y) / this._numSubSegs;\n\t\tfor (var i = 0; i < this._numSubSegs; i++) {\n\t\t\tvar x = p0.x + i * delx;\n\t\t\tvar y = p0.y + i * dely;\n\t\t\tvar pt = new Coordinate(x, y);\n\t\t\tthis._minPtDist.initialize();\n\t\t\tDistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n\t\t\tthis._maxPtDist.setMaximum(this._minPtDist);\n\t\t}\n\t}\n\tisDone() {\n\t\treturn false;\n\t}\n\tisGeometryChanged() {\n\t\treturn false;\n\t}\n\tgetMaxPointDistance() {\n\t\treturn this._maxPtDist;\n\t}\n\tgetClass() {\n\t\treturn MaxDensifiedByFractionDistanceFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateSequenceFilter];\n\t}\n}\nMaxDensifiedByFractionDistanceFilter.constructor_ = function () {\n\tthis._maxPtDist = new PointPairDistance();\n\tthis._minPtDist = new PointPairDistance();\n\tthis._geom = null;\n\tthis._numSubSegs = 0;\n\tlet geom = arguments[0], fraction = arguments[1];\n\tthis._geom = geom;\n\tthis._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nDiscreteHausdorffDistance.MaxPointDistanceFilter = MaxPointDistanceFilter;\nDiscreteHausdorffDistance.MaxDensifiedByFractionDistanceFilter = MaxDensifiedByFractionDistanceFilter;\nDiscreteHausdorffDistance.constructor_ = function () {\n\tthis._g0 = null;\n\tthis._g1 = null;\n\tthis._ptDist = new PointPairDistance();\n\tthis._densifyFrac = 0.0;\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tthis._g0 = g0;\n\tthis._g1 = g1;\n};\n","export default class ItemVisitor {\n\tconstructor() {\n\t\tItemVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisitItem(item) {}\n\tgetClass() {\n\t\treturn ItemVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nItemVisitor.constructor_ = function () {};\n","export default class PointOnGeometryLocator {\n\tconstructor() {\n\t\tPointOnGeometryLocator.constructor_.apply(this, arguments);\n\t}\n\tlocate(p) {}\n\tgetClass() {\n\t\treturn PointOnGeometryLocator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPointOnGeometryLocator.constructor_ = function () {};\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport Double from '../../../../../java/lang/Double';\nimport Comparator from '../../../../../java/util/Comparator';\nexport default class IntervalRTreeNode {\n\tconstructor() {\n\t\tIntervalRTreeNode.constructor_.apply(this, arguments);\n\t}\n\tgetMin() {\n\t\treturn this._min;\n\t}\n\tintersects(queryMin, queryMax) {\n\t\tif (this._min > queryMax || this._max < queryMin) return false;\n\t\treturn true;\n\t}\n\tgetMax() {\n\t\treturn this._max;\n\t}\n\ttoString() {\n\t\treturn WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0));\n\t}\n\tgetClass() {\n\t\treturn IntervalRTreeNode;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass NodeComparator {\n\tconstructor() {\n\t\tNodeComparator.constructor_.apply(this, arguments);\n\t}\n\tcompare(o1, o2) {\n\t\tvar n1 = o1;\n\t\tvar n2 = o2;\n\t\tvar mid1 = (n1._min + n1._max) / 2;\n\t\tvar mid2 = (n2._min + n2._max) / 2;\n\t\tif (mid1 < mid2) return -1;\n\t\tif (mid1 > mid2) return 1;\n\t\treturn 0;\n\t}\n\tgetClass() {\n\t\treturn NodeComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n}\nNodeComparator.constructor_ = function () {};\nIntervalRTreeNode.NodeComparator = NodeComparator;\nIntervalRTreeNode.constructor_ = function () {\n\tthis._min = Double.POSITIVE_INFINITY;\n\tthis._max = Double.NEGATIVE_INFINITY;\n};\n","import IntervalRTreeNode from './IntervalRTreeNode';\nexport default class IntervalRTreeLeafNode extends IntervalRTreeNode {\n\tconstructor() {\n\t\tsuper();\n\t\tIntervalRTreeLeafNode.constructor_.apply(this, arguments);\n\t}\n\tquery(queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\n\t\tvisitor.visitItem(this._item);\n\t}\n\tgetClass() {\n\t\treturn IntervalRTreeLeafNode;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIntervalRTreeLeafNode.constructor_ = function () {\n\tthis._item = null;\n\tlet min = arguments[0], max = arguments[1], item = arguments[2];\n\tthis._min = min;\n\tthis._max = max;\n\tthis._item = item;\n};\n","import Arrays from './Arrays'\nimport ArrayList from './ArrayList'\n\nconst Collections = {\n  reverseOrder: function () {\n    return {\n      compare (a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function (l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function (l, c) {\n    const a = l.toArray()\n    if (c) {\n      Arrays.sort(a, c)\n    } else {\n      Arrays.sort(a)\n    }\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function (o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","import IntervalRTreeNode from './IntervalRTreeNode';\nexport default class IntervalRTreeBranchNode extends IntervalRTreeNode {\n\tconstructor() {\n\t\tsuper();\n\t\tIntervalRTreeBranchNode.constructor_.apply(this, arguments);\n\t}\n\tbuildExtent(n1, n2) {\n\t\tthis._min = Math.min(n1._min, n2._min);\n\t\tthis._max = Math.max(n1._max, n2._max);\n\t}\n\tquery(queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor);\n\t\tif (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor);\n\t}\n\tgetClass() {\n\t\treturn IntervalRTreeBranchNode;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIntervalRTreeBranchNode.constructor_ = function () {\n\tthis._node1 = null;\n\tthis._node2 = null;\n\tlet n1 = arguments[0], n2 = arguments[1];\n\tthis._node1 = n1;\n\tthis._node2 = n2;\n\tthis.buildExtent(this._node1, this._node2);\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode';\nimport IntervalRTreeNode from './IntervalRTreeNode';\nimport Collections from '../../../../../java/util/Collections';\nimport System from '../../../../../java/lang/System';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode';\nexport default class SortedPackedIntervalRTree {\n\tconstructor() {\n\t\tSortedPackedIntervalRTree.constructor_.apply(this, arguments);\n\t}\n\tbuildTree() {\n\t\tCollections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n\t\tvar src = this._leaves;\n\t\tvar temp = null;\n\t\tvar dest = new ArrayList();\n\t\twhile (true) {\n\t\t\tthis.buildLevel(src, dest);\n\t\t\tif (dest.size() === 1) return dest.get(0);\n\t\t\ttemp = src;\n\t\t\tsrc = dest;\n\t\t\tdest = temp;\n\t\t}\n\t}\n\tinsert(min, max, item) {\n\t\tif (this._root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\t\tthis._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n\t}\n\tquery(min, max, visitor) {\n\t\tthis.init();\n\t\tthis._root.query(min, max, visitor);\n\t}\n\tbuildRoot() {\n\t\tif (this._root !== null) return null;\n\t\tthis._root = this.buildTree();\n\t}\n\tprintNode(node) {\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n\t}\n\tinit() {\n\t\tif (this._root !== null) return null;\n\t\tthis.buildRoot();\n\t}\n\tbuildLevel(src, dest) {\n\t\tthis._level++;\n\t\tdest.clear();\n\t\tfor (var i = 0; i < src.size(); i += 2) {\n\t\t\tvar n1 = src.get(i);\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\n\t\t\tif (n2 === null) {\n\t\t\t\tdest.add(n1);\n\t\t\t} else {\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n\t\t\t\tdest.add(node);\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn SortedPackedIntervalRTree;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSortedPackedIntervalRTree.constructor_ = function () {\n\tthis._leaves = new ArrayList();\n\tthis._root = null;\n\tthis._level = 0;\n};\n","import LineString from '../LineString';\nimport Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport LinearRing from '../LinearRing';\nimport GeometryComponentFilter from '../GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class LinearComponentExtracter {\n\tconstructor() {\n\t\tLinearComponentExtracter.constructor_.apply(this, arguments);\n\t}\n\tstatic getGeometry() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geom = arguments[0];\n\t\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\n\t\t}\n\t}\n\tstatic getLines() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geom = arguments[0];\n\t\t\treturn LinearComponentExtracter.getLines(geom, false);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\t\tlet geoms = arguments[0], lines = arguments[1];\n\t\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\t\tvar g = i.next();\n\t\t\t\t\tLinearComponentExtracter.getLines(g, lines);\n\t\t\t\t}\n\t\t\t\treturn lines;\n\t\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\t\t\tvar lines = new ArrayList();\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\t\treturn lines;\n\t\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\t\tlet geom = arguments[0], lines = arguments[1];\n\t\t\t\tif (geom instanceof LineString) {\n\t\t\t\t\tlines.add(geom);\n\t\t\t\t} else {\n\t\t\t\t\tgeom.apply(new LinearComponentExtracter(lines));\n\t\t\t\t}\n\t\t\t\treturn lines;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n\t\t\t\tlet geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\t\tvar g = i.next();\n\t\t\t\t\tLinearComponentExtracter.getLines(g, lines, forceToLineString);\n\t\t\t\t}\n\t\t\t\treturn lines;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n\t\t\t\tlet geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\t\treturn lines;\n\t\t\t}\n\t\t}\n\t}\n\tfilter(geom) {\n\t\tif (this._isForcedToLineString && geom instanceof LinearRing) {\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\t\t\tthis._lines.add(line);\n\t\t\treturn null;\n\t\t}\n\t\tif (geom instanceof LineString) this._lines.add(geom);\n\t}\n\tsetForceToLineString(isForcedToLineString) {\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t}\n\tgetClass() {\n\t\treturn LinearComponentExtracter;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t}\n}\nLinearComponentExtracter.constructor_ = function () {\n\tthis._lines = null;\n\tthis._isForcedToLineString = false;\n\tif (arguments.length === 1) {\n\t\tlet lines = arguments[0];\n\t\tthis._lines = lines;\n\t} else if (arguments.length === 2) {\n\t\tlet lines = arguments[0], isForcedToLineString = arguments[1];\n\t\tthis._lines = lines;\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t}\n};\n","import ItemVisitor from './ItemVisitor';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class ArrayListVisitor {\n\tconstructor() {\n\t\tArrayListVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisitItem(item) {\n\t\tthis._items.add(item);\n\t}\n\tgetItems() {\n\t\treturn this._items;\n\t}\n\tgetClass() {\n\t\treturn ArrayListVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [ItemVisitor];\n\t}\n}\nArrayListVisitor.constructor_ = function () {\n\tthis._items = new ArrayList();\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport Orientation from './Orientation';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default class RayCrossingCounter {\n\tconstructor() {\n\t\tRayCrossingCounter.constructor_.apply(this, arguments);\n\t}\n\tstatic locatePointInRing() {\n\t\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\t\tlet p = arguments[0], ring = arguments[1];\n\t\t\tvar counter = new RayCrossingCounter(p);\n\t\t\tvar p1 = new Coordinate();\n\t\t\tvar p2 = new Coordinate();\n\t\t\tfor (var i = 1; i < ring.size(); i++) {\n\t\t\t\tring.getCoordinate(i, p1);\n\t\t\t\tring.getCoordinate(i - 1, p2);\n\t\t\t\tcounter.countSegment(p1, p2);\n\t\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t\t}\n\t\t\treturn counter.getLocation();\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\t\tlet p = arguments[0], ring = arguments[1];\n\t\t\tvar counter = new RayCrossingCounter(p);\n\t\t\tfor (var i = 1; i < ring.length; i++) {\n\t\t\t\tvar p1 = ring[i];\n\t\t\t\tvar p2 = ring[i - 1];\n\t\t\t\tcounter.countSegment(p1, p2);\n\t\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t\t}\n\t\t\treturn counter.getLocation();\n\t\t}\n\t}\n\tcountSegment(p1, p2) {\n\t\tif (p1.x < this._p.x && p2.x < this._p.x) return null;\n\t\tif (this._p.x === p2.x && this._p.y === p2.y) {\n\t\t\tthis._isPointOnSegment = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y === this._p.y && p2.y === this._p.y) {\n\t\t\tvar minx = p1.x;\n\t\t\tvar maxx = p2.x;\n\t\t\tif (minx > maxx) {\n\t\t\t\tminx = p2.x;\n\t\t\t\tmaxx = p1.x;\n\t\t\t}\n\t\t\tif (this._p.x >= minx && this._p.x <= maxx) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n\t\t\tvar orient = Orientation.index(p1, p2, this._p);\n\t\t\tif (orient === Orientation.COLLINEAR) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (p2.y < p1.y) {\n\t\t\t\torient = -orient;\n\t\t\t}\n\t\t\tif (orient === Orientation.LEFT) {\n\t\t\t\tthis._crossingCount++;\n\t\t\t}\n\t\t}\n\t}\n\tisPointInPolygon() {\n\t\treturn this.getLocation() !== Location.EXTERIOR;\n\t}\n\tgetLocation() {\n\t\tif (this._isPointOnSegment) return Location.BOUNDARY;\n\t\tif (this._crossingCount % 2 === 1) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t}\n\tisOnSegment() {\n\t\treturn this._isPointOnSegment;\n\t}\n\tgetClass() {\n\t\treturn RayCrossingCounter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRayCrossingCounter.constructor_ = function () {\n\tthis._p = null;\n\tthis._crossingCount = 0;\n\tthis._isPointOnSegment = false;\n\tlet p = arguments[0];\n\tthis._p = p;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport LinearRing from '../../geom/LinearRing';\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree';\nimport LineSegment from '../../geom/LineSegment';\nimport Polygonal from '../../geom/Polygonal';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport ArrayListVisitor from '../../index/ArrayListVisitor';\nimport RayCrossingCounter from '../RayCrossingCounter';\nexport default class IndexedPointInAreaLocator {\n\tconstructor() {\n\t\tIndexedPointInAreaLocator.constructor_.apply(this, arguments);\n\t}\n\tlocate(p) {\n\t\tvar rcc = new RayCrossingCounter(p);\n\t\tvar visitor = new SegmentVisitor(rcc);\n\t\tthis._index.query(p.y, p.y, visitor);\n\t\treturn rcc.getLocation();\n\t}\n\tgetClass() {\n\t\treturn IndexedPointInAreaLocator;\n\t}\n\tget interfaces_() {\n\t\treturn [PointOnGeometryLocator];\n\t}\n}\nclass SegmentVisitor {\n\tconstructor() {\n\t\tSegmentVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisitItem(item) {\n\t\tvar seg = item;\n\t\tthis._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n\t}\n\tgetClass() {\n\t\treturn SegmentVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [ItemVisitor];\n\t}\n}\nSegmentVisitor.constructor_ = function () {\n\tthis._counter = null;\n\tlet counter = arguments[0];\n\tthis._counter = counter;\n};\nclass IntervalIndexedGeometry {\n\tconstructor() {\n\t\tIntervalIndexedGeometry.constructor_.apply(this, arguments);\n\t}\n\tinit(geom) {\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tvar pts = line.getCoordinates();\n\t\t\tthis.addLine(pts);\n\t\t}\n\t}\n\taddLine(pts) {\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\n\t\t\tthis._index.insert(min, max, seg);\n\t\t}\n\t}\n\tquery() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis._index.query(min, max, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet min = arguments[0], max = arguments[1], visitor = arguments[2];\n\t\t\tthis._index.query(min, max, visitor);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn IntervalIndexedGeometry;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIntervalIndexedGeometry.constructor_ = function () {\n\tthis._index = new SortedPackedIntervalRTree();\n\tlet geom = arguments[0];\n\tthis.init(geom);\n};\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\nIndexedPointInAreaLocator.constructor_ = function () {\n\tthis._index = null;\n\tlet g = arguments[0];\n\tif (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException(\"Argument must be Polygonal or LinearRing\");\n\tthis._index = new IntervalIndexedGeometry(g);\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport RayCrossingCounter from './RayCrossingCounter';\nexport default class PointLocation {\n\tconstructor() {\n\t\tPointLocation.constructor_.apply(this, arguments);\n\t}\n\tstatic isOnLine() {\n\t\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\t\tlet p = arguments[0], line = arguments[1];\n\t\t\tvar lineIntersector = new RobustLineIntersector();\n\t\t\tvar p0 = new Coordinate();\n\t\t\tvar p1 = new Coordinate();\n\t\t\tvar n = line.size();\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tline.getCoordinate(i - 1, p0);\n\t\t\t\tline.getCoordinate(i, p1);\n\t\t\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\t\t\tif (lineIntersector.hasIntersection()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\t\tlet p = arguments[0], line = arguments[1];\n\t\t\tvar lineIntersector = new RobustLineIntersector();\n\t\t\tfor (var i = 1; i < line.length; i++) {\n\t\t\t\tvar p0 = line[i - 1];\n\t\t\t\tvar p1 = line[i];\n\t\t\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\t\t\tif (lineIntersector.hasIntersection()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tstatic locateInRing(p, ring) {\n\t\treturn RayCrossingCounter.locatePointInRing(p, ring);\n\t}\n\tstatic isInRing(p, ring) {\n\t\treturn PointLocation.locateInRing(p, ring) !== Location.EXTERIOR;\n\t}\n\tgetClass() {\n\t\treturn PointLocation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPointLocation.constructor_ = function () {};\n","import Iterator from '../../../../java/util/Iterator';\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException';\nimport GeometryCollection from './GeometryCollection';\nexport default class GeometryCollectionIterator {\n\tconstructor() {\n\t\tGeometryCollectionIterator.constructor_.apply(this, arguments);\n\t}\n\tstatic isAtomic(geom) {\n\t\treturn !(geom instanceof GeometryCollection);\n\t}\n\tnext() {\n\t\tif (this._atStart) {\n\t\t\tthis._atStart = false;\n\t\t\tif (GeometryCollectionIterator.isAtomic(this._parent)) this._index++;\n\t\t\treturn this._parent;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn this._subcollectionIterator.next();\n\t\t\t} else {\n\t\t\t\tthis._subcollectionIterator = null;\n\t\t\t}\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tvar obj = this._parent.getGeometryN(this._index++);\n\t\tif (obj instanceof GeometryCollection) {\n\t\t\tthis._subcollectionIterator = new GeometryCollectionIterator(obj);\n\t\t\treturn this._subcollectionIterator.next();\n\t\t}\n\t\treturn obj;\n\t}\n\tremove() {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t}\n\thasNext() {\n\t\tif (this._atStart) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._subcollectionIterator = null;\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn GeometryCollectionIterator;\n\t}\n\tget interfaces_() {\n\t\treturn [Iterator];\n\t}\n}\nGeometryCollectionIterator.constructor_ = function () {\n\tthis._parent = null;\n\tthis._atStart = null;\n\tthis._max = null;\n\tthis._index = null;\n\tthis._subcollectionIterator = null;\n\tlet parent = arguments[0];\n\tthis._parent = parent;\n\tthis._atStart = true;\n\tthis._index = 0;\n\tthis._max = parent.getNumGeometries();\n};\n","import Location from '../../geom/Location';\nimport Polygon from '../../geom/Polygon';\nimport PointLocation from '../PointLocation';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../../geom/GeometryCollection';\nexport default class SimplePointInAreaLocator {\n\tconstructor() {\n\t\tSimplePointInAreaLocator.constructor_.apply(this, arguments);\n\t}\n\tstatic locatePointInPolygon(p, poly) {\n\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\tvar shell = poly.getExteriorRing();\n\t\tvar shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell);\n\t\tif (shellLoc !== Location.INTERIOR) return shellLoc;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\tvar holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole);\n\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t}\n\t\treturn Location.INTERIOR;\n\t}\n\tstatic locatePointInRing(p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn PointLocation.locateInRing(p, ring.getCoordinates());\n\t}\n\tstatic containsPointInPolygon(p, poly) {\n\t\treturn Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly);\n\t}\n\tstatic locateInGeometry(p, geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\treturn SimplePointInAreaLocator.locatePointInPolygon(p, geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) {\n\t\t\t\t\tvar loc = SimplePointInAreaLocator.locateInGeometry(p, g2);\n\t\t\t\t\tif (loc !== Location.EXTERIOR) return loc;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t}\n\tstatic locate(p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\treturn SimplePointInAreaLocator.locateInGeometry(p, geom);\n\t}\n\tlocate(p) {\n\t\treturn SimplePointInAreaLocator.locate(p, this._geom);\n\t}\n\tgetClass() {\n\t\treturn SimplePointInAreaLocator;\n\t}\n\tget interfaces_() {\n\t\treturn [PointOnGeometryLocator];\n\t}\n}\nSimplePointInAreaLocator.constructor_ = function () {\n\tthis._geom = null;\n\tlet geom = arguments[0];\n\tthis._geom = geom;\n};\n","export default class SimilarityMeasure {\n\tconstructor() {\n\t\tSimilarityMeasure.constructor_.apply(this, arguments);\n\t}\n\tmeasure(g1, g2) {}\n\tgetClass() {\n\t\treturn SimilarityMeasure;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSimilarityMeasure.constructor_ = function () {};\n","import SimilarityMeasure from './SimilarityMeasure';\nexport default class AreaSimilarityMeasure {\n\tconstructor() {\n\t\tAreaSimilarityMeasure.constructor_.apply(this, arguments);\n\t}\n\tmeasure(g1, g2) {\n\t\tvar areaInt = g1.intersection(g2).getArea();\n\t\tvar areaUnion = g1.union(g2).getArea();\n\t\treturn areaInt / areaUnion;\n\t}\n\tgetClass() {\n\t\treturn AreaSimilarityMeasure;\n\t}\n\tget interfaces_() {\n\t\treturn [SimilarityMeasure];\n\t}\n}\nAreaSimilarityMeasure.constructor_ = function () {};\n","import SimilarityMeasure from './SimilarityMeasure';\nimport Envelope from '../../geom/Envelope';\nimport DiscreteHausdorffDistance from '../distance/DiscreteHausdorffDistance';\nexport default class HausdorffSimilarityMeasure {\n\tconstructor() {\n\t\tHausdorffSimilarityMeasure.constructor_.apply(this, arguments);\n\t}\n\tstatic diagonalSize(env) {\n\t\tif (env.isNull()) return 0.0;\n\t\tvar width = env.getWidth();\n\t\tvar hgt = env.getHeight();\n\t\treturn Math.sqrt(width * width + hgt * hgt);\n\t}\n\tmeasure(g1, g2) {\n\t\tvar distance = DiscreteHausdorffDistance.distance(g1, g2, HausdorffSimilarityMeasure.DENSIFY_FRACTION);\n\t\tvar env = new Envelope(g1.getEnvelopeInternal());\n\t\tenv.expandToInclude(g2.getEnvelopeInternal());\n\t\tvar envSize = HausdorffSimilarityMeasure.diagonalSize(env);\n\t\tvar measure = 1 - distance / envSize;\n\t\treturn measure;\n\t}\n\tgetClass() {\n\t\treturn HausdorffSimilarityMeasure;\n\t}\n\tget interfaces_() {\n\t\treturn [SimilarityMeasure];\n\t}\n}\nHausdorffSimilarityMeasure.constructor_ = function () {};\nHausdorffSimilarityMeasure.DENSIFY_FRACTION = 0.25;\n","export default class SimilarityMeasureCombiner {\n\tconstructor() {\n\t\tSimilarityMeasureCombiner.constructor_.apply(this, arguments);\n\t}\n\tstatic combine(measure1, measure2) {\n\t\treturn Math.min(measure1, measure2);\n\t}\n\tgetClass() {\n\t\treturn SimilarityMeasureCombiner;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSimilarityMeasureCombiner.constructor_ = function () {};\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport Orientation from './Orientation';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default class Centroid {\n\tconstructor() {\n\t\tCentroid.constructor_.apply(this, arguments);\n\t}\n\tstatic area2(p1, p2, p3) {\n\t\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n\t}\n\tstatic centroid3(p1, p2, p3, c) {\n\t\tc.x = p1.x + p2.x + p3.x;\n\t\tc.y = p1.y + p2.y + p3.y;\n\t\treturn null;\n\t}\n\tstatic getCentroid(geom) {\n\t\tvar cent = new Centroid(geom);\n\t\treturn cent.getCentroid();\n\t}\n\tsetAreaBasePoint(basePt) {\n\t\tthis._areaBasePt = basePt;\n\t}\n\taddPoint(pt) {\n\t\tthis._ptCount += 1;\n\t\tthis._ptCentSum.x += pt.x;\n\t\tthis._ptCentSum.y += pt.y;\n\t}\n\taddLineSegments(pts) {\n\t\tvar lineLen = 0.0;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segmentLen === 0.0) continue;\n\t\t\tlineLen += segmentLen;\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\n\t\t\tthis._lineCentSum.x += segmentLen * midx;\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\n\t\t\tthis._lineCentSum.y += segmentLen * midy;\n\t\t}\n\t\tthis._totalLength += lineLen;\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n\t}\n\taddHole(pts) {\n\t\tvar isPositiveArea = Orientation.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t}\n\tgetCentroid() {\n\t\tvar cent = new Coordinate();\n\t\tif (Math.abs(this._areasum2) > 0.0) {\n\t\t\tcent.x = this._cg3.x / 3 / this._areasum2;\n\t\t\tcent.y = this._cg3.y / 3 / this._areasum2;\n\t\t} else if (this._totalLength > 0.0) {\n\t\t\tcent.x = this._lineCentSum.x / this._totalLength;\n\t\t\tcent.y = this._lineCentSum.y / this._totalLength;\n\t\t} else if (this._ptCount > 0) {\n\t\t\tcent.x = this._ptCentSum.x / this._ptCount;\n\t\t\tcent.y = this._ptCentSum.y / this._ptCount;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\treturn cent;\n\t}\n\taddShell(pts) {\n\t\tif (pts.length > 0) this.setAreaBasePoint(pts[0]);\n\t\tvar isPositiveArea = !Orientation.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t}\n\taddTriangle(p0, p1, p2, isPositiveArea) {\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\n\t\tCentroid.centroid3(p0, p1, p2, this._triangleCent3);\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\n\t\tthis._cg3.x += sign * area2 * this._triangleCent3.x;\n\t\tthis._cg3.y += sign * area2 * this._triangleCent3.y;\n\t\tthis._areasum2 += sign * area2;\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.addShell(poly.getExteriorRing().getCoordinates());\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.addHole(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom.isEmpty()) return null;\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.addPoint(geom.getCoordinate());\n\t\t\t} else if (geom instanceof LineString) {\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tvar poly = geom;\n\t\t\t\tthis.add(poly);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Centroid;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCentroid.constructor_ = function () {\n\tthis._areaBasePt = null;\n\tthis._triangleCent3 = new Coordinate();\n\tthis._areasum2 = 0;\n\tthis._cg3 = new Coordinate();\n\tthis._lineCentSum = new Coordinate();\n\tthis._totalLength = 0.0;\n\tthis._ptCount = 0;\n\tthis._ptCentSum = new Coordinate();\n\tlet geom = arguments[0];\n\tthis._areaBasePt = null;\n\tthis.add(geom);\n};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function EmptyStackException(message) {\n  this.message = message || '';\n};\nEmptyStackException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n","import EmptyStackException from './EmptyStackException'\nimport List from './List'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nexport default function Stack() {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n};\nStack.prototype = new List();\n\n\n/**\n * @override\n */\nStack.prototype.add = function(e) {\n  this.array_.push(e);\n  return true;\n};\n\n\n/**\n * @override\n */\nStack.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function(e) {\n  this.array_.push(e);\n  return e;\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function(e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_.pop();\n};\n\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function() {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_[this.array_.length - 1];\n};\n\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function() {\n  if (this.array_.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function() {\n  return this.empty();\n};\n\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function(o) {\n  return this.array_.indexOf(o);\n};\n\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class UniqueCoordinateArrayFilter {\n\tconstructor() {\n\t\tUniqueCoordinateArrayFilter.constructor_.apply(this, arguments);\n\t}\n\tstatic filterCoordinates(coords) {\n\t\tvar filter = new UniqueCoordinateArrayFilter();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tfilter.filter(coords[i]);\n\t\t}\n\t\treturn filter.getCoordinates();\n\t}\n\tfilter(coord) {\n\t\tif (!this.treeSet.contains(coord)) {\n\t\t\tthis.list.add(coord);\n\t\t\tthis.treeSet.add(coord);\n\t\t}\n\t}\n\tgetCoordinates() {\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\n\t\treturn this.list.toArray(coordinates);\n\t}\n\tgetClass() {\n\t\treturn UniqueCoordinateArrayFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateFilter];\n\t}\n}\nUniqueCoordinateArrayFilter.constructor_ = function () {\n\tthis.treeSet = new TreeSet();\n\tthis.list = new ArrayList();\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateList from '../geom/CoordinateList';\nimport Arrays from '../../../../java/util/Arrays';\nimport PointLocation from './PointLocation';\nimport Stack from '../../../../java/util/Stack';\nimport Orientation from './Orientation';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Comparator from '../../../../java/util/Comparator';\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter';\nimport Assert from '../util/Assert';\nexport default class ConvexHull {\n\tconstructor() {\n\t\tConvexHull.constructor_.apply(this, arguments);\n\t}\n\tstatic extractCoordinates(geom) {\n\t\tvar filter = new UniqueCoordinateArrayFilter();\n\t\tgeom.apply(filter);\n\t\treturn filter.getCoordinates();\n\t}\n\tpreSort(pts) {\n\t\tvar t = null;\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n\t\t\t\tt = pts[0];\n\t\t\t\tpts[0] = pts[i];\n\t\t\t\tpts[i] = t;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n\t\treturn pts;\n\t}\n\tcomputeOctRing(inputPts) {\n\t\tvar octPts = this.computeOctPts(inputPts);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.add(octPts, false);\n\t\tif (coordList.size() < 3) {\n\t\t\treturn null;\n\t\t}\n\t\tcoordList.closeRing();\n\t\treturn coordList.toCoordinateArray();\n\t}\n\tlineOrPolygon(coordinates) {\n\t\tcoordinates = this.cleanRing(coordinates);\n\t\tif (coordinates.length === 3) {\n\t\t\treturn this._geomFactory.createLineString([coordinates[0], coordinates[1]]);\n\t\t}\n\t\tvar linearRing = this._geomFactory.createLinearRing(coordinates);\n\t\treturn this._geomFactory.createPolygon(linearRing);\n\t}\n\tcleanRing(original) {\n\t\tAssert.equals(original[0], original[original.length - 1]);\n\t\tvar cleanedRing = new ArrayList();\n\t\tvar previousDistinctCoordinate = null;\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\n\t\t\tvar currentCoordinate = original[i];\n\t\t\tvar nextCoordinate = original[i + 1];\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcleanedRing.add(currentCoordinate);\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\n\t\t}\n\t\tcleanedRing.add(original[original.length - 1]);\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\n\t}\n\tisBetween(c1, c2, c3) {\n\t\tif (Orientation.index(c1, c2, c3) !== 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (c1.x !== c3.x) {\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (c1.y !== c3.y) {\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treduce(inputPts) {\n\t\tvar polyPts = this.computeOctRing(inputPts);\n\t\tif (polyPts === null) return inputPts;\n\t\tvar reducedSet = new TreeSet();\n\t\tfor (var i = 0; i < polyPts.length; i++) {\n\t\t\treducedSet.add(polyPts[i]);\n\t\t}\n\t\tfor (var i = 0; i < inputPts.length; i++) {\n\t\t\tif (!PointLocation.isInRing(inputPts[i], polyPts)) {\n\t\t\t\treducedSet.add(inputPts[i]);\n\t\t\t}\n\t\t}\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\n\t\treturn reducedPts;\n\t}\n\tgetConvexHull() {\n\t\tif (this._inputPts.length === 0) {\n\t\t\treturn this._geomFactory.createGeometryCollection();\n\t\t}\n\t\tif (this._inputPts.length === 1) {\n\t\t\treturn this._geomFactory.createPoint(this._inputPts[0]);\n\t\t}\n\t\tif (this._inputPts.length === 2) {\n\t\t\treturn this._geomFactory.createLineString(this._inputPts);\n\t\t}\n\t\tvar reducedPts = this._inputPts;\n\t\tif (this._inputPts.length > 50) {\n\t\t\treducedPts = this.reduce(this._inputPts);\n\t\t}\n\t\tvar sortedPts = this.preSort(reducedPts);\n\t\tvar cHS = this.grahamScan(sortedPts);\n\t\tvar cH = this.toCoordinateArray(cHS);\n\t\treturn this.lineOrPolygon(cH);\n\t}\n\tpadArray3(pts) {\n\t\tvar pad = new Array(3).fill(null);\n\t\tfor (var i = 0; i < pad.length; i++) {\n\t\t\tif (i < pts.length) {\n\t\t\t\tpad[i] = pts[i];\n\t\t\t} else pad[i] = pts[0];\n\t\t}\n\t\treturn pad;\n\t}\n\tcomputeOctPts(inputPts) {\n\t\tvar pts = new Array(8).fill(null);\n\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\tpts[j] = inputPts[0];\n\t\t}\n\t\tfor (var i = 1; i < inputPts.length; i++) {\n\t\t\tif (inputPts[i].x < pts[0].x) {\n\t\t\t\tpts[0] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n\t\t\t\tpts[1] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y > pts[2].y) {\n\t\t\t\tpts[2] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n\t\t\t\tpts[3] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x > pts[4].x) {\n\t\t\t\tpts[4] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n\t\t\t\tpts[5] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y < pts[6].y) {\n\t\t\t\tpts[6] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n\t\t\t\tpts[7] = inputPts[i];\n\t\t\t}\n\t\t}\n\t\treturn pts;\n\t}\n\ttoCoordinateArray(stack) {\n\t\tvar coordinates = new Array(stack.size()).fill(null);\n\t\tfor (var i = 0; i < stack.size(); i++) {\n\t\t\tvar coordinate = stack.get(i);\n\t\t\tcoordinates[i] = coordinate;\n\t\t}\n\t\treturn coordinates;\n\t}\n\tgrahamScan(c) {\n\t\tvar p = null;\n\t\tvar ps = new Stack();\n\t\tps.push(c[0]);\n\t\tps.push(c[1]);\n\t\tps.push(c[2]);\n\t\tfor (var i = 3; i < c.length; i++) {\n\t\t\tp = ps.pop();\n\t\t\twhile (!ps.empty() && Orientation.index(ps.peek(), p, c[i]) > 0) {\n\t\t\t\tp = ps.pop();\n\t\t\t}\n\t\t\tps.push(p);\n\t\t\tps.push(c[i]);\n\t\t}\n\t\tps.push(c[0]);\n\t\treturn ps;\n\t}\n\tgetClass() {\n\t\treturn ConvexHull;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass RadialComparator {\n\tconstructor() {\n\t\tRadialComparator.constructor_.apply(this, arguments);\n\t}\n\tstatic polarCompare(o, p, q) {\n\t\tvar dxp = p.x - o.x;\n\t\tvar dyp = p.y - o.y;\n\t\tvar dxq = q.x - o.x;\n\t\tvar dyq = q.y - o.y;\n\t\tvar orient = Orientation.index(o, p, q);\n\t\tif (orient === Orientation.COUNTERCLOCKWISE) return 1;\n\t\tif (orient === Orientation.CLOCKWISE) return -1;\n\t\tvar op = dxp * dxp + dyp * dyp;\n\t\tvar oq = dxq * dxq + dyq * dyq;\n\t\tif (op < oq) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (op > oq) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tcompare(o1, o2) {\n\t\tvar p1 = o1;\n\t\tvar p2 = o2;\n\t\treturn RadialComparator.polarCompare(this._origin, p1, p2);\n\t}\n\tgetClass() {\n\t\treturn RadialComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n}\nRadialComparator.constructor_ = function () {\n\tthis._origin = null;\n\tlet origin = arguments[0];\n\tthis._origin = origin;\n};\nConvexHull.RadialComparator = RadialComparator;\nConvexHull.constructor_ = function () {\n\tthis._geomFactory = null;\n\tthis._inputPts = null;\n\tif (arguments.length === 1) {\n\t\tlet geometry = arguments[0];\n\t\tConvexHull.constructor_.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], geomFactory = arguments[1];\n\t\tthis._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n\t\tthis._geomFactory = geomFactory;\n\t}\n};\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default class InteriorPointArea {\n\tconstructor() {\n\t\tInteriorPointArea.constructor_.apply(this, arguments);\n\t}\n\tstatic centre(envelope) {\n\t\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n\t}\n\tstatic avg(a, b) {\n\t\treturn (a + b) / 2.0;\n\t}\n\taddPolygon(geometry) {\n\t\tif (geometry.isEmpty()) return null;\n\t\tvar intPt = null;\n\t\tvar width = null;\n\t\tvar bisector = this.horizontalBisector(geometry);\n\t\tif (bisector.getLength() === 0.0) {\n\t\t\twidth = 0;\n\t\t\tintPt = bisector.getCoordinate();\n\t\t} else {\n\t\t\tvar intersections = bisector.intersection(geometry);\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n\t\t}\n\t\tif (this._interiorPoint === null || width > this._maxWidth) {\n\t\t\tthis._interiorPoint = intPt;\n\t\t\tthis._maxWidth = width;\n\t\t}\n\t}\n\tgetInteriorPoint() {\n\t\treturn this._interiorPoint;\n\t}\n\twidestGeometry() {\n\t\tif (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tif (gc.isEmpty()) {\n\t\t\t\treturn gc;\n\t\t\t}\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn widestGeometry;\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t\treturn this.widestGeometry(geometry);\n\t\t}\n\t}\n\thorizontalBisector(geometry) {\n\t\tvar envelope = geometry.getEnvelopeInternal();\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\n\t\treturn this._factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n\t}\n\tadd(geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\tthis.addPolygon(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn InteriorPointArea;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass SafeBisectorFinder {\n\tconstructor() {\n\t\tSafeBisectorFinder.constructor_.apply(this, arguments);\n\t}\n\tstatic getBisectorY(poly) {\n\t\tvar finder = new SafeBisectorFinder(poly);\n\t\treturn finder.getBisectorY();\n\t}\n\tupdateInterval(y) {\n\t\tif (y <= this._centreY) {\n\t\t\tif (y > this._loY) this._loY = y;\n\t\t} else if (y > this._centreY) {\n\t\t\tif (y < this._hiY) {\n\t\t\t\tthis._hiY = y;\n\t\t\t}\n\t\t}\n\t}\n\tgetBisectorY() {\n\t\tthis.process(this._poly.getExteriorRing());\n\t\tfor (var i = 0; i < this._poly.getNumInteriorRing(); i++) {\n\t\t\tthis.process(this._poly.getInteriorRingN(i));\n\t\t}\n\t\tvar bisectY = InteriorPointArea.avg(this._hiY, this._loY);\n\t\treturn bisectY;\n\t}\n\tprocess(line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tfor (var i = 0; i < seq.size(); i++) {\n\t\t\tvar y = seq.getY(i);\n\t\t\tthis.updateInterval(y);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn SafeBisectorFinder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSafeBisectorFinder.constructor_ = function () {\n\tthis._poly = null;\n\tthis._centreY = null;\n\tthis._hiY = Double.MAX_VALUE;\n\tthis._loY = -Double.MAX_VALUE;\n\tlet poly = arguments[0];\n\tthis._poly = poly;\n\tthis._hiY = poly.getEnvelopeInternal().getMaxY();\n\tthis._loY = poly.getEnvelopeInternal().getMinY();\n\tthis._centreY = InteriorPointArea.avg(this._loY, this._hiY);\n};\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\nInteriorPointArea.constructor_ = function () {\n\tthis._factory = null;\n\tthis._interiorPoint = null;\n\tthis._maxWidth = 0.0;\n\tlet g = arguments[0];\n\tthis._factory = g.getFactory();\n\tthis.add(g);\n};\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default class InteriorPointLine {\n\tconstructor() {\n\t\tInteriorPointLine.constructor_.apply(this, arguments);\n\t}\n\taddEndpoints() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tthis.add(pts[0]);\n\t\t\tthis.add(pts[pts.length - 1]);\n\t\t}\n\t}\n\tgetInteriorPoint() {\n\t\treturn this._interiorPoint;\n\t}\n\taddInterior() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addInterior(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\n\t\t\t\tthis.add(pts[i]);\n\t\t\t}\n\t\t}\n\t}\n\tadd(point) {\n\t\tvar dist = point.distance(this._centroid);\n\t\tif (dist < this._minDistance) {\n\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\tthis._minDistance = dist;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn InteriorPointLine;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nInteriorPointLine.constructor_ = function () {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tlet g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.addInterior(g);\n\tif (this._interiorPoint === null) this.addEndpoints(g);\n};\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Double from '../../../../java/lang/Double';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default class InteriorPointPoint {\n\tconstructor() {\n\t\tInteriorPointPoint.constructor_.apply(this, arguments);\n\t}\n\tgetInteriorPoint() {\n\t\treturn this._interiorPoint;\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.add(geom.getCoordinate());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet point = arguments[0];\n\t\t\tvar dist = point.distance(this._centroid);\n\t\t\tif (dist < this._minDistance) {\n\t\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\t\tthis._minDistance = dist;\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn InteriorPointPoint;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nInteriorPointPoint.constructor_ = function () {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tlet g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.add(g);\n};\n","import Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Angle from './Angle';\nimport Assert from '../util/Assert';\nimport Triangle from '../geom/Triangle';\nexport default class MinimumBoundingCircle {\n\tconstructor() {\n\t\tMinimumBoundingCircle.constructor_.apply(this, arguments);\n\t}\n\tstatic pointWitMinAngleWithX(pts, P) {\n\t\tvar minSin = Double.MAX_VALUE;\n\t\tvar minAngPt = null;\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar p = pts[i];\n\t\t\tif (p === P) continue;\n\t\t\tvar dx = p.x - P.x;\n\t\t\tvar dy = p.y - P.y;\n\t\t\tif (dy < 0) dy = -dy;\n\t\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\tvar sin = dy / len;\n\t\t\tif (sin < minSin) {\n\t\t\t\tminSin = sin;\n\t\t\t\tminAngPt = p;\n\t\t\t}\n\t\t}\n\t\treturn minAngPt;\n\t}\n\tstatic lowestPoint(pts) {\n\t\tvar min = pts[0];\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < min.y) min = pts[i];\n\t\t}\n\t\treturn min;\n\t}\n\tstatic pointWithMinAngleWithSegment(pts, P, Q) {\n\t\tvar minAng = Double.MAX_VALUE;\n\t\tvar minAngPt = null;\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar p = pts[i];\n\t\t\tif (p === P) continue;\n\t\t\tif (p === Q) continue;\n\t\t\tvar ang = Angle.angleBetween(P, p, Q);\n\t\t\tif (ang < minAng) {\n\t\t\t\tminAng = ang;\n\t\t\t\tminAngPt = p;\n\t\t\t}\n\t\t}\n\t\treturn minAngPt;\n\t}\n\tgetRadius() {\n\t\tthis.compute();\n\t\treturn this._radius;\n\t}\n\tgetDiameter() {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t}\n\tgetExtremalPoints() {\n\t\tthis.compute();\n\t\treturn this._extremalPts;\n\t}\n\tcomputeCirclePoints() {\n\t\tif (this._input.isEmpty()) {\n\t\t\tthis._extremalPts = new Array(0).fill(null);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._input.getNumPoints() === 1) {\n\t\t\tvar pts = this._input.getCoordinates();\n\t\t\tthis._extremalPts = [new Coordinate(pts[0])];\n\t\t\treturn null;\n\t\t}\n\t\tvar convexHull = this._input.convexHull();\n\t\tvar hullPts = convexHull.getCoordinates();\n\t\tvar pts = hullPts;\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n\t\t}\n\t\tif (pts.length <= 2) {\n\t\t\tthis._extremalPts = CoordinateArrays.copyDeep(pts);\n\t\t\treturn null;\n\t\t}\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\n\t\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q)];\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\n\t\t\t\tP = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\n\t\t\t\tQ = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n\t}\n\tcompute() {\n\t\tif (this._extremalPts !== null) return null;\n\t\tthis.computeCirclePoints();\n\t\tthis.computeCentre();\n\t\tif (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0]);\n\t}\n\tgetFarthestPoints() {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[this._extremalPts.length - 1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t}\n\tgetCircle() {\n\t\tthis.compute();\n\t\tif (this._centre === null) return this._input.getFactory().createPolygon();\n\t\tvar centrePoint = this._input.getFactory().createPoint(this._centre);\n\t\tif (this._radius === 0.0) return centrePoint;\n\t\treturn centrePoint.buffer(this._radius);\n\t}\n\tgetCentre() {\n\t\tthis.compute();\n\t\treturn this._centre;\n\t}\n\tcomputeCentre() {\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\tthis._centre = null;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis._centre = this._extremalPts[0];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis._centre = Triangle.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MinimumBoundingCircle;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMinimumBoundingCircle.constructor_ = function () {\n\tthis._input = null;\n\tthis._extremalPts = null;\n\tthis._centre = null;\n\tthis._radius = 0.0;\n\tlet geom = arguments[0];\n\tthis._input = geom;\n};\n","import Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport LineSegment from '../geom/LineSegment';\nimport ConvexHull from './ConvexHull';\nexport default class MinimumDiameter {\n\tconstructor() {\n\t\tMinimumDiameter.constructor_.apply(this, arguments);\n\t}\n\tstatic nextIndex(pts, index) {\n\t\tindex++;\n\t\tif (index >= pts.length) index = 0;\n\t\treturn index;\n\t}\n\tstatic computeC(a, b, p) {\n\t\treturn a * p.y - b * p.x;\n\t}\n\tstatic getMinimumDiameter(geom) {\n\t\treturn new MinimumDiameter(geom).getDiameter();\n\t}\n\tstatic getMinimumRectangle(geom) {\n\t\treturn new MinimumDiameter(geom).getMinimumRectangle();\n\t}\n\tstatic computeSegmentForLine(a, b, c) {\n\t\tvar p0 = null;\n\t\tvar p1 = null;\n\t\tif (Math.abs(b) > Math.abs(a)) {\n\t\t\tp0 = new Coordinate(0.0, c / b);\n\t\t\tp1 = new Coordinate(1.0, c / b - a / b);\n\t\t} else {\n\t\t\tp0 = new Coordinate(c / a, 0.0);\n\t\t\tp1 = new Coordinate(c / a - b / a, 1.0);\n\t\t}\n\t\treturn new LineSegment(p0, p1);\n\t}\n\tgetWidthCoordinate() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidthPt;\n\t}\n\tgetSupportingSegment() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1]);\n\t}\n\tgetDiameter() {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString();\n\t\tvar basePt = this._minBaseSeg.project(this._minWidthPt);\n\t\treturn this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt]);\n\t}\n\tcomputeWidthConvex(convexGeom) {\n\t\tif (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this._convexHullPts = convexGeom.getCoordinates();\n\t\tif (this._convexHullPts.length === 0) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = null;\n\t\t\tthis._minBaseSeg = null;\n\t\t} else if (this._convexHullPts.length === 1) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[0];\n\t\t} else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[1];\n\t\t} else this.computeConvexRingMinDiameter(this._convexHullPts);\n\t}\n\tcomputeConvexRingMinDiameter(pts) {\n\t\tthis._minWidth = Double.MAX_VALUE;\n\t\tvar currMaxIndex = 1;\n\t\tvar seg = new LineSegment();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n\t\t}\n\t}\n\tcomputeMinimumDiameter() {\n\t\tif (this._minWidthPt !== null) return null;\n\t\tif (this._isConvex) this.computeWidthConvex(this._inputGeom); else {\n\t\t\tvar convexGeom = new ConvexHull(this._inputGeom).getConvexHull();\n\t\t\tthis.computeWidthConvex(convexGeom);\n\t\t}\n\t}\n\tgetLength() {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidth;\n\t}\n\tfindMaxPerpDistance(pts, seg, startIndex) {\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n\t\tvar nextPerpDistance = maxPerpDistance;\n\t\tvar maxIndex = startIndex;\n\t\tvar nextIndex = maxIndex;\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\n\t\t\tmaxPerpDistance = nextPerpDistance;\n\t\t\tmaxIndex = nextIndex;\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n\t\t}\n\t\tif (maxPerpDistance < this._minWidth) {\n\t\t\tthis._minPtIndex = maxIndex;\n\t\t\tthis._minWidth = maxPerpDistance;\n\t\t\tthis._minWidthPt = pts[this._minPtIndex];\n\t\t\tthis._minBaseSeg = new LineSegment(seg);\n\t\t}\n\t\treturn maxIndex;\n\t}\n\tgetMinimumRectangle() {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidth === 0.0) {\n\t\t\tif (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) {\n\t\t\t\treturn this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0);\n\t\t\t}\n\t\t\treturn this._minBaseSeg.toGeometry(this._inputGeom.getFactory());\n\t\t}\n\t\tvar dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x;\n\t\tvar dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y;\n\t\tvar minPara = Double.MAX_VALUE;\n\t\tvar maxPara = -Double.MAX_VALUE;\n\t\tvar minPerp = Double.MAX_VALUE;\n\t\tvar maxPerp = -Double.MAX_VALUE;\n\t\tfor (var i = 0; i < this._convexHullPts.length; i++) {\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i]);\n\t\t\tif (paraC > maxPara) maxPara = paraC;\n\t\t\tif (paraC < minPara) minPara = paraC;\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i]);\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\n\t\t\tif (perpC < minPerp) minPerp = perpC;\n\t\t}\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\n\t\tvar shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\t\treturn this._inputGeom.getFactory().createPolygon(shell);\n\t}\n\tgetClass() {\n\t\treturn MinimumDiameter;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMinimumDiameter.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._isConvex = null;\n\tthis._convexHullPts = null;\n\tthis._minBaseSeg = new LineSegment();\n\tthis._minWidthPt = null;\n\tthis._minPtIndex = null;\n\tthis._minWidth = 0.0;\n\tif (arguments.length === 1) {\n\t\tlet inputGeom = arguments[0];\n\t\tMinimumDiameter.constructor_.call(this, inputGeom, false);\n\t} else if (arguments.length === 2) {\n\t\tlet inputGeom = arguments[0], isConvex = arguments[1];\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._isConvex = isConvex;\n\t}\n};\n","import LineString from '../LineString';\nimport GeometryFactory from '../GeometryFactory';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport MultiLineString from '../MultiLineString';\nexport default class GeometryTransformer {\n\tconstructor() {\n\t\tGeometryTransformer.constructor_.apply(this, arguments);\n\t}\n\ttransformPoint(geom, parent) {\n\t\treturn this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t}\n\ttransformPolygon(geom, parent) {\n\t\tvar isAllValidLinearRings = true;\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n\t\t\tholes.add(hole);\n\t\t}\n\t\tif (isAllValidLinearRings) return this._factory.createPolygon(shell, holes.toArray([])); else {\n\t\t\tvar components = new ArrayList();\n\t\t\tif (shell !== null) components.add(shell);\n\t\t\tcomponents.addAll(holes);\n\t\t\treturn this._factory.buildGeometry(components);\n\t\t}\n\t}\n\tcreateCoordinateSequence(coords) {\n\t\treturn this._factory.getCoordinateSequenceFactory().create(coords);\n\t}\n\tgetInputGeometry() {\n\t\treturn this._inputGeom;\n\t}\n\ttransformMultiLineString(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t}\n\ttransformCoordinates(coords, parent) {\n\t\treturn this.copy(coords);\n\t}\n\ttransformLineString(geom, parent) {\n\t\treturn this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t}\n\ttransformMultiPoint(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t}\n\ttransformMultiPolygon(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t}\n\tcopy(seq) {\n\t\treturn seq.copy();\n\t}\n\ttransformGeometryCollection(geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\tif (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t}\n\ttransform(inputGeom) {\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._factory = inputGeom.getFactory();\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n\t}\n\ttransformLinearRing(geom, parent) {\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n\t\tif (seq === null) return this._factory.createLinearRing(null);\n\t\tvar seqSize = seq.size();\n\t\tif (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq);\n\t\treturn this._factory.createLinearRing(seq);\n\t}\n\tgetClass() {\n\t\treturn GeometryTransformer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryTransformer.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._factory = null;\n\tthis._pruneEmptyGeometry = true;\n\tthis._preserveGeometryCollectionType = true;\n\tthis._preserveCollections = false;\n\tthis._preserveType = false;\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport LineSegment from '../geom/LineSegment';\nexport default class Densifier {\n\tconstructor() {\n\t\tDensifier.constructor_.apply(this, arguments);\n\t}\n\tstatic densifyPoints(pts, distanceTolerance, precModel) {\n\t\tvar seg = new LineSegment();\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcoordList.add(seg.p0, false);\n\t\t\tvar len = seg.getLength();\n\t\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\t\t\tif (densifiedSegCount > 1) {\n\t\t\t\tvar densifiedSegLen = len / densifiedSegCount;\n\t\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\n\t\t\t\t\tvar segFract = j * densifiedSegLen / len;\n\t\t\t\t\tvar p = seg.pointAlong(segFract);\n\t\t\t\t\tprecModel.makePrecise(p);\n\t\t\t\t\tcoordList.add(p, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcoordList.add(pts[pts.length - 1], false);\n\t\treturn coordList.toCoordinateArray();\n\t}\n\tstatic densify(geom, distanceTolerance) {\n\t\tvar densifier = new Densifier(geom);\n\t\tdensifier.setDistanceTolerance(distanceTolerance);\n\t\treturn densifier.getResultGeometry();\n\t}\n\tgetResultGeometry() {\n\t\treturn new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom);\n\t}\n\tsetDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t}\n\tgetClass() {\n\t\treturn Densifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass DensifyTransformer extends GeometryTransformer {\n\tconstructor() {\n\t\tsuper();\n\t\tDensifyTransformer.constructor_.apply(this, arguments);\n\t}\n\ttransformMultiPolygon(geom, parent) {\n\t\tvar roughGeom = super.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(roughGeom);\n\t}\n\ttransformPolygon(geom, parent) {\n\t\tvar roughGeom = super.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn roughGeom;\n\t\t}\n\t\treturn this.createValidArea(roughGeom);\n\t}\n\ttransformCoordinates(coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\t\tif (parent instanceof LineString && newPts.length === 1) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t}\n\tcreateValidArea(roughAreaGeom) {\n\t\treturn roughAreaGeom.buffer(0.0);\n\t}\n\tgetClass() {\n\t\treturn DensifyTransformer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDensifyTransformer.constructor_ = function () {\n\tthis.distanceTolerance = null;\n\tlet distanceTolerance = arguments[0];\n\tthis.distanceTolerance = distanceTolerance;\n};\nDensifier.DensifyTransformer = DensifyTransformer;\nDensifier.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n};\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nexport default class Quadrant {\n\tconstructor() {\n\t\tQuadrant.constructor_.apply(this, arguments);\n\t}\n\tstatic isNorthern(quad) {\n\t\treturn quad === Quadrant.NE || quad === Quadrant.NW;\n\t}\n\tstatic isOpposite(quad1, quad2) {\n\t\tif (quad1 === quad2) return false;\n\t\tvar diff = (quad1 - quad2 + 4) % 4;\n\t\tif (diff === 2) return true;\n\t\treturn false;\n\t}\n\tstatic commonHalfPlane(quad1, quad2) {\n\t\tif (quad1 === quad2) return quad1;\n\t\tvar diff = (quad1 - quad2 + 4) % 4;\n\t\tif (diff === 2) return -1;\n\t\tvar min = quad1 < quad2 ? quad1 : quad2;\n\t\tvar max = quad1 > quad2 ? quad1 : quad2;\n\t\tif (min === 0 && max === 3) return 3;\n\t\treturn min;\n\t}\n\tstatic isInHalfPlane(quad, halfPlane) {\n\t\tif (halfPlane === Quadrant.SE) {\n\t\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\n\t\t}\n\t\treturn quad === halfPlane || quad === halfPlane + 1;\n\t}\n\tstatic quadrant() {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet dx = arguments[0], dy = arguments[1];\n\t\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\t\t\tif (dx >= 0.0) {\n\t\t\t\tif (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE;\n\t\t\t} else {\n\t\t\t\tif (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\t\t\tif (p1.x >= p0.x) {\n\t\t\t\tif (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE;\n\t\t\t} else {\n\t\t\t\tif (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW;\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Quadrant;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nQuadrant.constructor_ = function () {};\nQuadrant.NE = 0;\nQuadrant.NW = 1;\nQuadrant.SW = 2;\nQuadrant.SE = 3;\n","import Coordinate from '../geom/Coordinate';\nimport Orientation from '../algorithm/Orientation';\nimport Quadrant from '../geomgraph/Quadrant';\nimport Assert from '../util/Assert';\nexport default class HalfEdge {\n\tconstructor() {\n\t\tHalfEdge.constructor_.apply(this, arguments);\n\t}\n\tstatic init(e0, e1) {\n\t\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n\t\te0.init(e1);\n\t\treturn e0;\n\t}\n\tstatic create(p0, p1) {\n\t\tvar e0 = new HalfEdge(p0);\n\t\tvar e1 = new HalfEdge(p1);\n\t\te0.init(e1);\n\t\treturn e0;\n\t}\n\tfind(dest) {\n\t\tvar oNext = this;\n\t\tdo {\n\t\t\tif (oNext === null) return null;\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\n\t\t\toNext = oNext.oNext();\n\t\t} while (oNext !== this);\n\t\treturn null;\n\t}\n\tdest() {\n\t\treturn this._sym._orig;\n\t}\n\toNext() {\n\t\treturn this._sym._next;\n\t}\n\tinsert(e) {\n\t\tif (this.oNext() === this) {\n\t\t\tthis.insertAfter(e);\n\t\t\treturn null;\n\t\t}\n\t\tvar ecmp = this.compareTo(e);\n\t\tvar ePrev = this;\n\t\tdo {\n\t\t\tvar oNext = ePrev.oNext();\n\t\t\tvar cmp = oNext.compareTo(e);\n\t\t\tif (cmp !== ecmp || oNext === this) {\n\t\t\t\tePrev.insertAfter(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tePrev = oNext;\n\t\t} while (ePrev !== this);\n\t\tAssert.shouldNeverReachHere();\n\t}\n\tinsertAfter(e) {\n\t\tAssert.equals(this._orig, e.orig());\n\t\tvar save = this.oNext();\n\t\tthis._sym.setNext(e);\n\t\te.sym().setNext(save);\n\t}\n\tdegree() {\n\t\tvar degree = 0;\n\t\tvar e = this;\n\t\tdo {\n\t\t\tdegree++;\n\t\t\te = e.oNext();\n\t\t} while (e !== this);\n\t\treturn degree;\n\t}\n\tequals() {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Coordinate && arguments[0] instanceof Coordinate)) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n\t\t}\n\t}\n\tdeltaY() {\n\t\treturn this._sym._orig.y - this._orig.y;\n\t}\n\tsym() {\n\t\treturn this._sym;\n\t}\n\tprev() {\n\t\treturn this._sym.next()._sym;\n\t}\n\tcompareAngularDirection(e) {\n\t\tvar dx = this.deltaX();\n\t\tvar dy = this.deltaY();\n\t\tvar dx2 = e.deltaX();\n\t\tvar dy2 = e.deltaY();\n\t\tif (dx === dx2 && dy === dy2) return 0;\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\n\t\tif (quadrant > quadrant2) return 1;\n\t\tif (quadrant < quadrant2) return -1;\n\t\treturn Orientation.index(e._orig, e.dest(), this.dest());\n\t}\n\tprevNode() {\n\t\tvar e = this;\n\t\twhile (e.degree() === 2) {\n\t\t\te = e.prev();\n\t\t\tif (e === this) return null;\n\t\t}\n\t\treturn e;\n\t}\n\tcompareTo(obj) {\n\t\tvar e = obj;\n\t\tvar comp = this.compareAngularDirection(e);\n\t\treturn comp;\n\t}\n\tnext() {\n\t\treturn this._next;\n\t}\n\tsetSym(e) {\n\t\tthis._sym = e;\n\t}\n\torig() {\n\t\treturn this._orig;\n\t}\n\ttoString() {\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n\t}\n\tsetNext(e) {\n\t\tthis._next = e;\n\t}\n\tinit(e) {\n\t\tthis.setSym(e);\n\t\te.setSym(this);\n\t\tthis.setNext(e);\n\t\te.setNext(this);\n\t}\n\tdeltaX() {\n\t\treturn this._sym._orig.x - this._orig.x;\n\t}\n\tgetClass() {\n\t\treturn HalfEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nHalfEdge.constructor_ = function () {\n\tthis._orig = null;\n\tthis._sym = null;\n\tthis._next = null;\n\tlet orig = arguments[0];\n\tthis._orig = orig;\n};\n","import HalfEdge from './HalfEdge';\nexport default class MarkHalfEdge extends HalfEdge {\n\tconstructor() {\n\t\tsuper();\n\t\tMarkHalfEdge.constructor_.apply(this, arguments);\n\t}\n\tstatic setMarkBoth(e, isMarked) {\n\t\te.setMark(isMarked);\n\t\te.sym().setMark(isMarked);\n\t}\n\tstatic isMarked(e) {\n\t\treturn e.isMarked();\n\t}\n\tstatic setMark(e, isMarked) {\n\t\te.setMark(isMarked);\n\t}\n\tstatic markBoth(e) {\n\t\te.mark();\n\t\te.sym().mark();\n\t}\n\tstatic mark(e) {\n\t\te.mark();\n\t}\n\tmark() {\n\t\tthis._isMarked = true;\n\t}\n\tsetMark(isMarked) {\n\t\tthis._isMarked = isMarked;\n\t}\n\tisMarked() {\n\t\treturn this._isMarked;\n\t}\n\tgetClass() {\n\t\treturn MarkHalfEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMarkHalfEdge.constructor_ = function () {\n\tthis._isMarked = false;\n\tlet orig = arguments[0];\n\tHalfEdge.constructor_.call(this, orig);\n};\n","import HashMap from '../../../../java/util/HashMap';\nimport HalfEdge from './HalfEdge';\nexport default class EdgeGraph {\n\tconstructor() {\n\t\tEdgeGraph.constructor_.apply(this, arguments);\n\t}\n\tstatic isValidEdge(orig, dest) {\n\t\tvar cmp = dest.compareTo(orig);\n\t\treturn cmp !== 0;\n\t}\n\tinsert(orig, dest, eAdj) {\n\t\tvar e = this.create(orig, dest);\n\t\tif (eAdj !== null) {\n\t\t\teAdj.insert(e);\n\t\t} else {\n\t\t\tthis._vertexMap.put(orig, e);\n\t\t}\n\t\tvar eAdjDest = this._vertexMap.get(dest);\n\t\tif (eAdjDest !== null) {\n\t\t\teAdjDest.insert(e.sym());\n\t\t} else {\n\t\t\tthis._vertexMap.put(dest, e.sym());\n\t\t}\n\t\treturn e;\n\t}\n\tcreate(p0, p1) {\n\t\tvar e0 = this.createEdge(p0);\n\t\tvar e1 = this.createEdge(p1);\n\t\tHalfEdge.init(e0, e1);\n\t\treturn e0;\n\t}\n\tcreateEdge(orig) {\n\t\treturn new HalfEdge(orig);\n\t}\n\taddEdge(orig, dest) {\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\t\tvar eAdj = this._vertexMap.get(orig);\n\t\tvar eSame = null;\n\t\tif (eAdj !== null) {\n\t\t\teSame = eAdj.find(dest);\n\t\t}\n\t\tif (eSame !== null) {\n\t\t\treturn eSame;\n\t\t}\n\t\tvar e = this.insert(orig, dest, eAdj);\n\t\treturn e;\n\t}\n\tgetVertexEdges() {\n\t\treturn this._vertexMap.values();\n\t}\n\tfindEdge(orig, dest) {\n\t\tvar e = this._vertexMap.get(orig);\n\t\tif (e === null) return null;\n\t\treturn e.find(dest);\n\t}\n\tgetClass() {\n\t\treturn EdgeGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeGraph.constructor_ = function () {\n\tthis._vertexMap = new HashMap();\n};\n","import MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nexport default class DissolveHalfEdge extends MarkHalfEdge {\n\tconstructor() {\n\t\tsuper();\n\t\tDissolveHalfEdge.constructor_.apply(this, arguments);\n\t}\n\tsetStart() {\n\t\tthis._isStart = true;\n\t}\n\tisStart() {\n\t\treturn this._isStart;\n\t}\n\tgetClass() {\n\t\treturn DissolveHalfEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDissolveHalfEdge.constructor_ = function () {\n\tthis._isStart = false;\n\tlet orig = arguments[0];\n\tMarkHalfEdge.constructor_.call(this, orig);\n};\n","import EdgeGraph from '../edgegraph/EdgeGraph';\nimport DissolveHalfEdge from './DissolveHalfEdge';\nexport default class DissolveEdgeGraph extends EdgeGraph {\n\tconstructor() {\n\t\tsuper();\n\t\tDissolveEdgeGraph.constructor_.apply(this, arguments);\n\t}\n\tcreateEdge(p0) {\n\t\treturn new DissolveHalfEdge(p0);\n\t}\n\tgetClass() {\n\t\treturn DissolveEdgeGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDissolveEdgeGraph.constructor_ = function () {};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Stack from '../../../../java/util/Stack';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport DissolveEdgeGraph from './DissolveEdgeGraph';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class LineDissolver {\n\tconstructor() {\n\t\tLineDissolver.constructor_.apply(this, arguments);\n\t}\n\tstatic dissolve(g) {\n\t\tvar d = new LineDissolver();\n\t\td.add(g);\n\t\treturn d.getResult();\n\t}\n\taddLine(line) {\n\t\tthis._lines.add(this._factory.createLineString(line.toCoordinateArray()));\n\t}\n\tupdateRingStartEdge(e) {\n\t\tif (!e.isStart()) {\n\t\t\te = e.sym();\n\t\t\tif (!e.isStart()) return null;\n\t\t}\n\t\tif (this._ringStartEdge === null) {\n\t\t\tthis._ringStartEdge = e;\n\t\t\treturn null;\n\t\t}\n\t\tif (e.orig().compareTo(this._ringStartEdge.orig()) < 0) {\n\t\t\tthis._ringStartEdge = e;\n\t\t}\n\t}\n\tgetResult() {\n\t\tif (this._result === null) this.computeResult();\n\t\treturn this._result;\n\t}\n\tprocess(e) {\n\t\tvar eNode = e.prevNode();\n\t\tif (eNode === null) eNode = e;\n\t\tthis.stackEdges(eNode);\n\t\tthis.buildLines();\n\t}\n\tbuildRing(eStartRing) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStartRing;\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStartRing) break;\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.addLine(line);\n\t}\n\tbuildLine(eStart) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStart;\n\t\tthis._ringStartEdge = null;\n\t\tMarkHalfEdge.markBoth(e);\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tthis.updateRingStartEdge(e);\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStart) {\n\t\t\t\tthis.buildRing(this._ringStartEdge);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t\tMarkHalfEdge.markBoth(e);\n\t\t}\n\t\tline.add(e.dest().clone(), false);\n\t\tthis.stackEdges(e.sym());\n\t\tthis.addLine(line);\n\t}\n\tstackEdges(node) {\n\t\tvar e = node;\n\t\tdo {\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e);\n\t\t\te = e.oNext();\n\t\t} while (e !== node);\n\t}\n\tcomputeResult() {\n\t\tvar edges = this._graph.getVertexEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.process(e);\n\t\t}\n\t\tthis._result = this._factory.buildGeometry(this._lines);\n\t}\n\tbuildLines() {\n\t\twhile (!this._nodeEdgeStack.empty()) {\n\t\t\tvar e = this._nodeEdgeStack.pop();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.buildLine(e);\n\t\t}\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply(new (class {\n\t\t\t\tget interfaces_() {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t}\n\t\t\t\tfilter(component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})());\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tvar seq = lineString.getCoordinateSequence();\n\t\t\tvar doneStart = false;\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\n\t\t\t\tvar e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\t\t\t\tif (e === null) continue;\n\t\t\t\tif (!doneStart) {\n\t\t\t\t\te.setStart();\n\t\t\t\t\tdoneStart = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn LineDissolver;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineDissolver.constructor_ = function () {\n\tthis._result = null;\n\tthis._factory = null;\n\tthis._graph = null;\n\tthis._lines = new ArrayList();\n\tthis._nodeEdgeStack = new Stack();\n\tthis._ringStartEdge = null;\n\tthis._graph = new DissolveEdgeGraph();\n};\n","import Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport PointLocation from './PointLocation';\nimport BoundaryNodeRule from './BoundaryNodeRule';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport MultiLineString from '../geom/MultiLineString';\nexport default class PointLocator {\n\tconstructor() {\n\t\tPointLocator.constructor_.apply(this, arguments);\n\t}\n\tlocateInPolygonRing(p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn PointLocation.locateInRing(p, ring.getCoordinates());\n\t}\n\tintersects(p, geom) {\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\n\t}\n\tupdateLocationInfo(loc) {\n\t\tif (loc === Location.INTERIOR) this._isIn = true;\n\t\tif (loc === Location.BOUNDARY) this._numBoundaries++;\n\t}\n\tcomputeLocation(p, geom) {\n\t\tif (geom instanceof Point) {\n\t\t\tthis.updateLocationInfo(this.locateOnPoint(p, geom));\n\t\t}\n\t\tif (geom instanceof LineString) {\n\t\t\tthis.updateLocationInfo(this.locateOnLineString(p, geom));\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tthis.updateLocationInfo(this.locateInPolygon(p, geom));\n\t\t} else if (geom instanceof MultiLineString) {\n\t\t\tvar ml = geom;\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\n\t\t\t\tvar l = ml.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateOnLineString(p, l));\n\t\t\t}\n\t\t} else if (geom instanceof MultiPolygon) {\n\t\t\tvar mpoly = geom;\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInPolygon(p, poly));\n\t\t\t}\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\n\t\t\t}\n\t\t}\n\t}\n\tlocateOnPoint(p, pt) {\n\t\tvar ptCoord = pt.getCoordinate();\n\t\tif (ptCoord.equals2D(p)) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t}\n\tlocateOnLineString(p, l) {\n\t\tif (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\tvar seq = l.getCoordinateSequence();\n\t\tif (!l.isClosed()) {\n\t\t\tif (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) {\n\t\t\t\treturn Location.BOUNDARY;\n\t\t\t}\n\t\t}\n\t\tif (PointLocation.isOnLine(p, seq)) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t}\n\tlocateInPolygon(p, poly) {\n\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\tvar shell = poly.getExteriorRing();\n\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\n\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\n\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t}\n\t\treturn Location.INTERIOR;\n\t}\n\tlocate(p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\tif (geom instanceof LineString) {\n\t\t\treturn this.locateOnLineString(p, geom);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\treturn this.locateInPolygon(p, geom);\n\t\t}\n\t\tthis._isIn = false;\n\t\tthis._numBoundaries = 0;\n\t\tthis.computeLocation(p, geom);\n\t\tif (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY;\n\t\tif (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t}\n\tgetClass() {\n\t\treturn PointLocator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPointLocator.constructor_ = function () {\n\tthis._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n\tthis._isIn = null;\n\tthis._numBoundaries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet boundaryRule = arguments[0];\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n\t\tthis._boundaryRule = boundaryRule;\n\t}\n};\n","export default class Position {\n\tconstructor() {\n\t\tPosition.constructor_.apply(this, arguments);\n\t}\n\tstatic opposite(position) {\n\t\tif (position === Position.LEFT) return Position.RIGHT;\n\t\tif (position === Position.RIGHT) return Position.LEFT;\n\t\treturn position;\n\t}\n\tgetClass() {\n\t\treturn Position;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPosition.constructor_ = function () {};\nPosition.ON = 0;\nPosition.LEFT = 1;\nPosition.RIGHT = 2;\n","export default class MonotoneChain {\n\tconstructor() {\n\t\tMonotoneChain.constructor_.apply(this, arguments);\n\t}\n\tcomputeIntersections(mc, si) {\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n\t}\n\tgetClass() {\n\t\treturn MonotoneChain;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChain.constructor_ = function () {\n\tthis.mce = null;\n\tthis.chainIndex = null;\n\tlet mce = arguments[0], chainIndex = arguments[1];\n\tthis.mce = mce;\n\tthis.chainIndex = chainIndex;\n};\n","import Comparable from '../../../../../java/lang/Comparable';\nexport default class SweepLineEvent {\n\tconstructor() {\n\t\tSweepLineEvent.constructor_.apply(this, arguments);\n\t}\n\tisDelete() {\n\t\treturn this._eventType === SweepLineEvent.DELETE;\n\t}\n\tsetDeleteEventIndex(deleteEventIndex) {\n\t\tthis._deleteEventIndex = deleteEventIndex;\n\t}\n\tgetObject() {\n\t\treturn this._obj;\n\t}\n\tcompareTo(o) {\n\t\tvar pe = o;\n\t\tif (this._xValue < pe._xValue) return -1;\n\t\tif (this._xValue > pe._xValue) return 1;\n\t\tif (this._eventType < pe._eventType) return -1;\n\t\tif (this._eventType > pe._eventType) return 1;\n\t\treturn 0;\n\t}\n\tgetInsertEvent() {\n\t\treturn this._insertEvent;\n\t}\n\tisInsert() {\n\t\treturn this._eventType === SweepLineEvent.INSERT;\n\t}\n\tisSameLabel(ev) {\n\t\tif (this._label === null) return false;\n\t\treturn this._label === ev._label;\n\t}\n\tgetDeleteEventIndex() {\n\t\treturn this._deleteEventIndex;\n\t}\n\tgetClass() {\n\t\treturn SweepLineEvent;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nSweepLineEvent.constructor_ = function () {\n\tthis._label = null;\n\tthis._xValue = null;\n\tthis._eventType = null;\n\tthis._insertEvent = null;\n\tthis._deleteEventIndex = null;\n\tthis._obj = null;\n\tif (arguments.length === 2) {\n\t\tlet x = arguments[0], insertEvent = arguments[1];\n\t\tthis._eventType = SweepLineEvent.DELETE;\n\t\tthis._xValue = x;\n\t\tthis._insertEvent = insertEvent;\n\t} else if (arguments.length === 3) {\n\t\tlet label = arguments[0], x = arguments[1], obj = arguments[2];\n\t\tthis._eventType = SweepLineEvent.INSERT;\n\t\tthis._label = label;\n\t\tthis._xValue = x;\n\t\tthis._obj = obj;\n\t}\n};\nSweepLineEvent.INSERT = 1;\nSweepLineEvent.DELETE = 2;\n","export default class EdgeSetIntersector {\n\tconstructor() {\n\t\tEdgeSetIntersector.constructor_.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn EdgeSetIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeSetIntersector.constructor_ = function () {};\n","export default class SegmentIntersector {\n\tconstructor() {\n\t\tSegmentIntersector.constructor_.apply(this, arguments);\n\t}\n\tstatic isAdjacentSegments(i1, i2) {\n\t\treturn Math.abs(i1 - i2) === 1;\n\t}\n\tisTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetProperIntersectionPoint() {\n\t\treturn this._properIntersectionPoint;\n\t}\n\tsetIsDoneIfProperInt(isDoneWhenProperInt) {\n\t\tthis._isDoneWhenProperInt = isDoneWhenProperInt;\n\t}\n\thasProperInteriorIntersection() {\n\t\treturn this._hasProperInterior;\n\t}\n\tisBoundaryPointInternal(li, bdyNodes) {\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tvar pt = node.getCoordinate();\n\t\t\tif (li.isIntersection(pt)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\thasProperIntersection() {\n\t\treturn this._hasProper;\n\t}\n\thasIntersection() {\n\t\treturn this._hasIntersection;\n\t}\n\tisDone() {\n\t\treturn this._isDone;\n\t}\n\tisBoundaryPoint(li, bdyNodes) {\n\t\tif (bdyNodes === null) return false;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n\t\treturn false;\n\t}\n\tsetBoundaryNodes(bdyNodes0, bdyNodes1) {\n\t\tthis._bdyNodes = new Array(2).fill(null);\n\t\tthis._bdyNodes[0] = bdyNodes0;\n\t\tthis._bdyNodes[1] = bdyNodes1;\n\t}\n\taddIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._recordIsolated) {\n\t\t\t\te0.setIsolated(false);\n\t\t\t\te1.setIsolated(false);\n\t\t\t}\n\t\t\tthis._numIntersections++;\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\tif (this._includeProper || !this._li.isProper()) {\n\t\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\t}\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis._properIntersectionPoint = this._li.getIntersection(0).copy();\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tif (this._isDoneWhenProperInt) {\n\t\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn SegmentIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegmentIntersector.constructor_ = function () {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._includeProper = null;\n\tthis._recordIsolated = null;\n\tthis._isSelfIntersection = null;\n\tthis._numIntersections = 0;\n\tthis.numTests = 0;\n\tthis._bdyNodes = null;\n\tthis._isDone = false;\n\tthis._isDoneWhenProperInt = false;\n\tlet li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2];\n\tthis._li = li;\n\tthis._includeProper = includeProper;\n\tthis._recordIsolated = recordIsolated;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport MonotoneChain from './MonotoneChain';\nimport SweepLineEvent from './SweepLineEvent';\nimport EdgeSetIntersector from './EdgeSetIntersector';\nimport Collections from '../../../../../java/util/Collections';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default class SimpleMCSweepLineIntersector extends EdgeSetIntersector {\n\tconstructor() {\n\t\tsuper();\n\t\tSimpleMCSweepLineIntersector.constructor_.apply(this, arguments);\n\t}\n\tprepareEvents() {\n\t\tCollections.sort(this.events);\n\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\tvar ev = this.events.get(i);\n\t\t\tif (ev.isDelete()) {\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\n\t\t\t}\n\t\t}\n\t}\n\tcomputeIntersections() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet si = arguments[0];\n\t\t\tthis.nOverlaps = 0;\n\t\t\tthis.prepareEvents();\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\t\tvar ev = this.events.get(i);\n\t\t\t\tif (ev.isInsert()) {\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n\t\t\t\t}\n\t\t\t\tif (si.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet edges0 = arguments[0], edges1 = arguments[1], si = arguments[2];\n\t\t\t\tthis.addEdges(edges0, edges0);\n\t\t\t\tthis.addEdges(edges1, edges1);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n\t\t\t\tlet edges = arguments[0], si = arguments[1], testAllSegments = arguments[2];\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t}\n\t\t}\n\t}\n\taddEdge(edge, edgeSet) {\n\t\tvar mce = edge.getMonotoneChainEdge();\n\t\tvar startIndex = mce.getStartIndexes();\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(mce, i);\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n\t\t\tthis.events.add(insertEvent);\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n\t\t}\n\t}\n\tprocessOverlaps(start, end, ev0, si) {\n\t\tvar mc0 = ev0.getObject();\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar ev1 = this.events.get(i);\n\t\t\tif (ev1.isInsert()) {\n\t\t\t\tvar mc1 = ev1.getObject();\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\taddEdges() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edge);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edges = arguments[0], edgeSet = arguments[1];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edgeSet);\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn SimpleMCSweepLineIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSimpleMCSweepLineIntersector.constructor_ = function () {\n\tthis.events = new ArrayList();\n\tthis.nOverlaps = null;\n};\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nexport default class TopologyLocation {\n\tconstructor() {\n\t\tTopologyLocation.constructor_.apply(this, arguments);\n\t}\n\tsetAllLocations(locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tthis.location[i] = locValue;\n\t\t}\n\t}\n\tisNull() {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== Location.NONE) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tsetAllLocationsIfNull(locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\n\t\t}\n\t}\n\tisLine() {\n\t\treturn this.location.length === 1;\n\t}\n\tmerge(gl) {\n\t\tif (gl.location.length > this.location.length) {\n\t\t\tvar newLoc = new Array(3).fill(null);\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\n\t\t\tthis.location = newLoc;\n\t\t}\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n\t\t}\n\t}\n\tgetLocations() {\n\t\treturn this.location;\n\t}\n\tflip() {\n\t\tif (this.location.length <= 1) return null;\n\t\tvar temp = this.location[Position.LEFT];\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\n\t\tthis.location[Position.RIGHT] = temp;\n\t}\n\ttoString() {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n\t\treturn buf.toString();\n\t}\n\tsetLocations(on, left, right) {\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n\tget(posIndex) {\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\n\t\treturn Location.NONE;\n\t}\n\tisArea() {\n\t\treturn this.location.length > 1;\n\t}\n\tisAnyNull() {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tsetLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet locValue = arguments[0];\n\t\t\tthis.setLocation(Position.ON, locValue);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet locIndex = arguments[0], locValue = arguments[1];\n\t\t\tthis.location[locIndex] = locValue;\n\t\t}\n\t}\n\tinit(size) {\n\t\tthis.location = new Array(size).fill(null);\n\t\tthis.setAllLocations(Location.NONE);\n\t}\n\tisEqualOnSide(le, locIndex) {\n\t\treturn this.location[locIndex] === le.location[locIndex];\n\t}\n\tallPositionsEqual(loc) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== loc) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn TopologyLocation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTopologyLocation.constructor_ = function () {\n\tthis.location = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.init(location.length);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet on = arguments[0];\n\t\t\tthis.init(1);\n\t\t\tthis.location[Position.ON] = on;\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\n\t\t\tlet gl = arguments[0];\n\t\t\tthis.init(gl.location.length);\n\t\t\tif (gl !== null) {\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\t\t\tthis.location[i] = gl.location[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet on = arguments[0], left = arguments[1], right = arguments[2];\n\t\tthis.init(3);\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n};\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyLocation from './TopologyLocation';\nexport default class Label {\n\tconstructor() {\n\t\tLabel.constructor_.apply(this, arguments);\n\t}\n\tstatic toLineLabel(label) {\n\t\tvar lineLabel = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tlineLabel.setLocation(i, label.getLocation(i));\n\t\t}\n\t\treturn lineLabel;\n\t}\n\tgetGeometryCount() {\n\t\tvar count = 0;\n\t\tif (!this.elt[0].isNull()) count++;\n\t\tif (!this.elt[1].isNull()) count++;\n\t\treturn count;\n\t}\n\tsetAllLocations(geomIndex, location) {\n\t\tthis.elt[geomIndex].setAllLocations(location);\n\t}\n\tisNull(geomIndex) {\n\t\treturn this.elt[geomIndex].isNull();\n\t}\n\tsetAllLocationsIfNull() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.setAllLocationsIfNull(0, location);\n\t\t\tthis.setAllLocationsIfNull(1, location);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(location);\n\t\t}\n\t}\n\tisLine(geomIndex) {\n\t\treturn this.elt[geomIndex].isLine();\n\t}\n\tmerge(lbl) {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\n\t\t\t} else {\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\n\t\t\t}\n\t\t}\n\t}\n\tflip() {\n\t\tthis.elt[0].flip();\n\t\tthis.elt[1].flip();\n\t}\n\tgetLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this.elt[geomIndex].get(posIndex);\n\t\t}\n\t}\n\ttoString() {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.elt[0] !== null) {\n\t\t\tbuf.append(\"A:\");\n\t\t\tbuf.append(this.elt[0].toString());\n\t\t}\n\t\tif (this.elt[1] !== null) {\n\t\t\tbuf.append(\" B:\");\n\t\t\tbuf.append(this.elt[1].toString());\n\t\t}\n\t\treturn buf.toString();\n\t}\n\tisArea() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].isArea();\n\t\t}\n\t}\n\tisAnyNull(geomIndex) {\n\t\treturn this.elt[geomIndex].isAnyNull();\n\t}\n\tsetLocation() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tthis.elt[geomIndex].setLocation(posIndex, location);\n\t\t}\n\t}\n\tisEqualOnSide(lbl, side) {\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n\t}\n\tallPositionsEqual(geomIndex, loc) {\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\n\t}\n\ttoLine(geomIndex) {\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n\t}\n\tgetClass() {\n\t\treturn Label;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLabel.constructor_ = function () {\n\tthis.elt = new Array(2).fill(null);\n\tif (arguments.length === 1) {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet onLoc = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[geomIndex].setLocation(onLoc);\n\t} else if (arguments.length === 3) {\n\t\tlet onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2];\n\t\tthis.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t\tthis.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t} else if (arguments.length === 4) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\n\t}\n};\n","import Coordinate from '../geom/Coordinate';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default class EdgeIntersection {\n\tconstructor() {\n\t\tEdgeIntersection.constructor_.apply(this, arguments);\n\t}\n\tgetSegmentIndex() {\n\t\treturn this.segmentIndex;\n\t}\n\tgetCoordinate() {\n\t\treturn this.coord;\n\t}\n\tprint(out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t\tout.println(\" dist = \" + this.dist);\n\t}\n\tcompareTo(obj) {\n\t\tvar other = obj;\n\t\treturn this.compare(other.segmentIndex, other.dist);\n\t}\n\tisEndPoint(maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t}\n\ttoString() {\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n\t}\n\tgetDistance() {\n\t\treturn this.dist;\n\t}\n\tcompare(segmentIndex, dist) {\n\t\tif (this.segmentIndex < segmentIndex) return -1;\n\t\tif (this.segmentIndex > segmentIndex) return 1;\n\t\tif (this.dist < dist) return -1;\n\t\tif (this.dist > dist) return 1;\n\t\treturn 0;\n\t}\n\tgetClass() {\n\t\treturn EdgeIntersection;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nEdgeIntersection.constructor_ = function () {\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.dist = null;\n\tlet coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2];\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.dist = dist;\n};\n","import EdgeIntersection from './EdgeIntersection';\nimport Coordinate from '../geom/Coordinate';\nimport Label from './Label';\nimport Edge from './Edge';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default class EdgeIntersectionList {\n\tconstructor() {\n\t\tEdgeIntersectionList.constructor_.apply(this, arguments);\n\t}\n\tprint(out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t}\n\titerator() {\n\t\treturn this._nodeMap.values().iterator();\n\t}\n\taddSplitEdges(edgeList) {\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t}\n\taddEndpoints() {\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n\t}\n\tcreateSplitEdge(ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.pts[i];\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\n\t\treturn new Edge(pts, new Label(this.edge._label));\n\t}\n\tadd(intPt, segmentIndex, dist) {\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t}\n\tisIntersection(pt) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tif (ei.coord.equals(pt)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn EdgeIntersectionList;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeIntersectionList.constructor_ = function () {\n\tthis._nodeMap = new TreeMap();\n\tthis.edge = null;\n\tlet edge = arguments[0];\n\tthis.edge = edge;\n};\n","import Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../Quadrant';\nexport default class MonotoneChainIndexer {\n\tconstructor() {\n\t\tMonotoneChainIndexer.constructor_.apply(this, arguments);\n\t}\n\tstatic toIntArray(list) {\n\t\tvar array = new Array(list.size()).fill(null);\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = list.get(i).intValue();\n\t\t}\n\t\treturn array;\n\t}\n\tgetChainStartIndices(pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = this.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t}\n\tfindChainEnd(pts, start) {\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t}\n\tgetClass() {\n\t\treturn MonotoneChainIndexer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChainIndexer.constructor_ = function () {};\n","import MonotoneChainIndexer from './MonotoneChainIndexer';\nimport Envelope from '../../geom/Envelope';\nexport default class MonotoneChainEdge {\n\tconstructor() {\n\t\tMonotoneChainEdge.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinates() {\n\t\treturn this.pts;\n\t}\n\tgetMaxX(chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 > x2 ? x1 : x2;\n\t}\n\tgetMinX(chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 < x2 ? x1 : x2;\n\t}\n\tcomputeIntersectsForChain() {\n\t\tif (arguments.length === 4) {\n\t\t\tlet chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3];\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tei.addIntersections(this.e, start0, mce.e, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!this.overlaps(start0, end0, mce, start1, end1)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t}\n\t}\n\toverlaps(start0, end0, mce, start1, end1) {\n\t\treturn Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1]);\n\t}\n\tgetStartIndexes() {\n\t\treturn this.startIndex;\n\t}\n\tcomputeIntersects(mce, si) {\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MonotoneChainEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChainEdge.constructor_ = function () {\n\tthis.e = null;\n\tthis.pts = null;\n\tthis.startIndex = null;\n\tlet e = arguments[0];\n\tthis.e = e;\n\tthis.pts = e.getCoordinates();\n\tvar mcb = new MonotoneChainIndexer();\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\n};\n","import Location from '../geom/Location';\nimport Position from './Position';\nexport default class Depth {\n\tconstructor() {\n\t\tDepth.constructor_.apply(this, arguments);\n\t}\n\tstatic depthAtLocation(location) {\n\t\tif (location === Location.EXTERIOR) return 0;\n\t\tif (location === Location.INTERIOR) return 1;\n\t\treturn Depth.NULL_VALUE;\n\t}\n\tgetDepth(geomIndex, posIndex) {\n\t\treturn this._depth[geomIndex][posIndex];\n\t}\n\tsetDepth(geomIndex, posIndex, depthValue) {\n\t\tthis._depth[geomIndex][posIndex] = depthValue;\n\t}\n\tisNull() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\tif (this._depth[i][j] !== Depth.NULL_VALUE) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this._depth[geomIndex][1] === Depth.NULL_VALUE;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this._depth[geomIndex][posIndex] === Depth.NULL_VALUE;\n\t\t}\n\t}\n\tnormalize() {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!this.isNull(i)) {\n\t\t\t\tvar minDepth = this._depth[i][1];\n\t\t\t\tif (this._depth[i][2] < minDepth) minDepth = this._depth[i][2];\n\t\t\t\tif (minDepth < 0) minDepth = 0;\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar newValue = 0;\n\t\t\t\t\tif (this._depth[i][j] > minDepth) newValue = 1;\n\t\t\t\t\tthis._depth[i][j] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetDelta(geomIndex) {\n\t\treturn this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT];\n\t}\n\tgetLocation(geomIndex, posIndex) {\n\t\tif (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n\t\treturn Location.INTERIOR;\n\t}\n\ttoString() {\n\t\treturn \"A: \" + this._depth[0][1] + \",\" + this._depth[0][2] + \" B: \" + this._depth[1][1] + \",\" + this._depth[1][2];\n\t}\n\tadd() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n\t\t\t\t\t\tif (this.isNull(i, j)) {\n\t\t\t\t\t\t\tthis._depth[i][j] = Depth.depthAtLocation(loc);\n\t\t\t\t\t\t} else this._depth[i][j] += Depth.depthAtLocation(loc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tif (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Depth;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDepth.constructor_ = function () {\n\tthis._depth = Array(2).fill().map(() => Array(3));\n\tfor (var i = 0; i < 2; i++) {\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tthis._depth[i][j] = Depth.NULL_VALUE;\n\t\t}\n\t}\n};\nDepth.NULL_VALUE = -1;\n","import Assert from '../util/Assert';\nexport default class GraphComponent {\n\tconstructor() {\n\t\tGraphComponent.constructor_.apply(this, arguments);\n\t}\n\tsetVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t}\n\tsetInResult(isInResult) {\n\t\tthis._isInResult = isInResult;\n\t}\n\tisCovered() {\n\t\treturn this._isCovered;\n\t}\n\tisCoveredSet() {\n\t\treturn this._isCoveredSet;\n\t}\n\tsetLabel(label) {\n\t\tthis._label = label;\n\t}\n\tgetLabel() {\n\t\treturn this._label;\n\t}\n\tsetCovered(isCovered) {\n\t\tthis._isCovered = isCovered;\n\t\tthis._isCoveredSet = true;\n\t}\n\tupdateIM(im) {\n\t\tAssert.isTrue(this._label.getGeometryCount() >= 2, \"found partial label\");\n\t\tthis.computeIM(im);\n\t}\n\tisInResult() {\n\t\treturn this._isInResult;\n\t}\n\tisVisited() {\n\t\treturn this._isVisited;\n\t}\n\tgetClass() {\n\t\treturn GraphComponent;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGraphComponent.constructor_ = function () {\n\tthis._label = null;\n\tthis._isInResult = false;\n\tthis._isCovered = false;\n\tthis._isCoveredSet = false;\n\tthis._isVisited = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet label = arguments[0];\n\t\tthis._label = label;\n\t}\n};\n","import EdgeIntersectionList from './EdgeIntersectionList';\nimport IntersectionMatrix from '../geom/IntersectionMatrix';\nimport MonotoneChainEdge from './index/MonotoneChainEdge';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport Label from './Label';\nimport Envelope from '../geom/Envelope';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nimport Depth from './Depth';\nimport GraphComponent from './GraphComponent';\nexport default class Edge extends GraphComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tEdge.constructor_.apply(this, arguments);\n\t}\n\tstatic updateIM() {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n\t\t\tlet label = arguments[0], im = arguments[1];\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\t\t\tif (label.isArea()) {\n\t\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n\t\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n\t\t\t}\n\t\t} else return super.updateIM.apply(this, arguments);\n\t}\n\tgetDepth() {\n\t\treturn this._depth;\n\t}\n\tgetCollapsedEdge() {\n\t\tvar newPts = new Array(2).fill(null);\n\t\tnewPts[0] = this.pts[0];\n\t\tnewPts[1] = this.pts[1];\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this._label));\n\t\treturn newe;\n\t}\n\tisIsolated() {\n\t\treturn this._isIsolated;\n\t}\n\tgetCoordinates() {\n\t\treturn this.pts;\n\t}\n\tsetIsolated(isIsolated) {\n\t\tthis._isIsolated = isIsolated;\n\t}\n\tsetName(name) {\n\t\tthis._name = name;\n\t}\n\tequals(o) {\n\t\tif (!(o instanceof Edge)) return false;\n\t\tvar e = o;\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tvar isEqualForward = true;\n\t\tvar isEqualReverse = true;\n\t\tvar iRev = this.pts.length;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\tisEqualForward = false;\n\t\t\t}\n\t\t\tif (!this.pts[i].equals2D(e.pts[-- iRev])) {\n\t\t\t\tisEqualReverse = false;\n\t\t\t}\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tgetCoordinate() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.pts.length > 0) return this.pts[0];\n\t\t\treturn null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this.pts[i];\n\t\t}\n\t}\n\tprint(out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tout.print(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) out.print(\",\");\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tout.print(\")  \" + this._label + \" \" + this._depthDelta);\n\t}\n\tcomputeIM(im) {\n\t\tEdge.updateIM(this._label, im);\n\t}\n\tisCollapsed() {\n\t\tif (!this._label.isArea()) return false;\n\t\tif (this.pts.length !== 3) return false;\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\n\t\treturn false;\n\t}\n\tisClosed() {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t}\n\tgetMaximumSegmentIndex() {\n\t\treturn this.pts.length - 1;\n\t}\n\tgetDepthDelta() {\n\t\treturn this._depthDelta;\n\t}\n\tgetNumPoints() {\n\t\treturn this.pts.length;\n\t}\n\tprintReverse(out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\n\t\t\tout.print(this.pts[i] + \" \");\n\t\t}\n\t\tout.println(\"\");\n\t}\n\tgetMonotoneChainEdge() {\n\t\tif (this._mce === null) this._mce = new MonotoneChainEdge(this);\n\t\treturn this._mce;\n\t}\n\tgetEnvelope() {\n\t\tif (this._env === null) {\n\t\t\tthis._env = new Envelope();\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\t\tthis._env.expandToInclude(this.pts[i]);\n\t\t\t}\n\t\t}\n\t\treturn this._env;\n\t}\n\taddIntersection(li, segmentIndex, geomIndex, intIndex) {\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t\tdist = 0.0;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n\t}\n\ttoString() {\n\t\tvar builder = new StringBuilder();\n\t\tbuilder.append(\"edge \" + this._name + \": \");\n\t\tbuilder.append(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) builder.append(\",\");\n\t\t\tbuilder.append(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tbuilder.append(\")  \" + this._label + \" \" + this._depthDelta);\n\t\treturn builder.toString();\n\t}\n\tisPointwiseEqual(e) {\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tsetDepthDelta(depthDelta) {\n\t\tthis._depthDelta = depthDelta;\n\t}\n\tgetEdgeIntersectionList() {\n\t\treturn this.eiList;\n\t}\n\taddIntersections(li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Edge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdge.constructor_ = function () {\n\tthis.pts = null;\n\tthis._env = null;\n\tthis.eiList = new EdgeIntersectionList(this);\n\tthis._name = null;\n\tthis._mce = null;\n\tthis._isIsolated = true;\n\tthis._depth = new Depth();\n\tthis._depthDelta = 0;\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\tEdge.constructor_.call(this, pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], label = arguments[1];\n\t\tthis.pts = pts;\n\t\tthis._label = label;\n\t}\n};\n","import Location from '../geom/Location';\nimport Label from './Label';\nimport GraphComponent from './GraphComponent';\nexport default class Node extends GraphComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tNode.constructor_.apply(this, arguments);\n\t}\n\tisIncidentEdgeInResult() {\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getEdge().isInResult()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tisIsolated() {\n\t\treturn this._label.getGeometryCount() === 1;\n\t}\n\tgetCoordinate() {\n\t\treturn this._coord;\n\t}\n\tprint(out) {\n\t\tout.println(\"node \" + this._coord + \" lbl: \" + this._label);\n\t}\n\tcomputeIM(im) {}\n\tcomputeMergedLocation(label2, eltIndex) {\n\t\tvar loc = Location.NONE;\n\t\tloc = this._label.getLocation(eltIndex);\n\t\tif (!label2.isNull(eltIndex)) {\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\n\t\t}\n\t\treturn loc;\n\t}\n\tsetLabel() {\n\t\tif (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n\t\t\tlet argIndex = arguments[0], onLocation = arguments[1];\n\t\t\tif (this._label === null) {\n\t\t\t\tthis._label = new Label(argIndex, onLocation);\n\t\t\t} else this._label.setLocation(argIndex, onLocation);\n\t\t} else return super.setLabel.apply(this, arguments);\n\t}\n\tgetEdges() {\n\t\treturn this._edges;\n\t}\n\tmergeLabel() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tthis.mergeLabel(n._label);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet label2 = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\n\t\t\t\tvar thisLoc = this._label.getLocation(i);\n\t\t\t\tif (thisLoc === Location.NONE) this._label.setLocation(i, loc);\n\t\t\t}\n\t\t}\n\t}\n\tadd(e) {\n\t\tthis._edges.insert(e);\n\t\te.setNode(this);\n\t}\n\tsetLabelBoundary(argIndex) {\n\t\tif (this._label === null) return null;\n\t\tvar loc = Location.NONE;\n\t\tif (this._label !== null) loc = this._label.getLocation(argIndex);\n\t\tvar newLoc = null;\n\t\tswitch (loc) {\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\tnewLoc = Location.INTERIOR;\n\t\t\t\tbreak;\n\t\t\tcase Location.INTERIOR:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._label.setLocation(argIndex, newLoc);\n\t}\n\tgetClass() {\n\t\treturn Node;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNode.constructor_ = function () {\n\tthis._coord = null;\n\tthis._edges = null;\n\tlet coord = arguments[0], edges = arguments[1];\n\tthis._coord = coord;\n\tthis._edges = edges;\n\tthis._label = new Label(0, Location.NONE);\n};\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default class NodeMap {\n\tconstructor() {\n\t\tNodeMap.constructor_.apply(this, arguments);\n\t}\n\tfind(coord) {\n\t\treturn this.nodeMap.get(coord);\n\t}\n\taddNode() {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tvar node = this.nodeMap.get(coord);\n\t\t\tif (node === null) {\n\t\t\t\tnode = this.nodeFact.createNode(coord);\n\t\t\t\tthis.nodeMap.put(coord, node);\n\t\t\t}\n\t\t\treturn node;\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\n\t\t\tif (node === null) {\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tnode.mergeLabel(n);\n\t\t\treturn node;\n\t\t}\n\t}\n\tprint(out) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar n = it.next();\n\t\t\tn.print(out);\n\t\t}\n\t}\n\titerator() {\n\t\treturn this.nodeMap.values().iterator();\n\t}\n\tvalues() {\n\t\treturn this.nodeMap.values();\n\t}\n\tgetBoundaryNodes(geomIndex) {\n\t\tvar bdyNodes = new ArrayList();\n\t\tfor (var i = this.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n\t\t}\n\t\treturn bdyNodes;\n\t}\n\tadd(e) {\n\t\tvar p = e.getCoordinate();\n\t\tvar n = this.addNode(p);\n\t\tn.add(e);\n\t}\n\tgetClass() {\n\t\treturn NodeMap;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNodeMap.constructor_ = function () {\n\tthis.nodeMap = new TreeMap();\n\tthis.nodeFact = null;\n\tlet nodeFact = arguments[0];\n\tthis.nodeFact = nodeFact;\n};\n","import Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nexport default class EdgeEnd {\n\tconstructor() {\n\t\tEdgeEnd.constructor_.apply(this, arguments);\n\t}\n\tcompareDirection(e) {\n\t\tif (this._dx === e._dx && this._dy === e._dy) return 0;\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn Orientation.index(e._p0, e._p1, this._p1);\n\t}\n\tgetDy() {\n\t\treturn this._dy;\n\t}\n\tgetCoordinate() {\n\t\treturn this._p0;\n\t}\n\tsetNode(node) {\n\t\tthis._node = node;\n\t}\n\tprint(out) {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label);\n\t}\n\tcompareTo(obj) {\n\t\tvar e = obj;\n\t\treturn this.compareDirection(e);\n\t}\n\tgetDirectedCoordinate() {\n\t\treturn this._p1;\n\t}\n\tgetDx() {\n\t\treturn this._dx;\n\t}\n\tgetLabel() {\n\t\treturn this._label;\n\t}\n\tgetEdge() {\n\t\treturn this._edge;\n\t}\n\tgetQuadrant() {\n\t\treturn this._quadrant;\n\t}\n\tgetNode() {\n\t\treturn this._node;\n\t}\n\ttoString() {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\treturn \"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label;\n\t}\n\tcomputeLabel(boundaryNodeRule) {}\n\tinit(p0, p1) {\n\t\tthis._p0 = p0;\n\t\tthis._p1 = p1;\n\t\tthis._dx = p1.x - p0.x;\n\t\tthis._dy = p1.y - p0.y;\n\t\tthis._quadrant = Quadrant.quadrant(this._dx, this._dy);\n\t\tAssert.isTrue(!(this._dx === 0 && this._dy === 0), \"EdgeEnd with identical endpoints found\");\n\t}\n\tgetClass() {\n\t\treturn EdgeEnd;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nEdgeEnd.constructor_ = function () {\n\tthis._edge = null;\n\tthis._label = null;\n\tthis._node = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._dx = null;\n\tthis._dy = null;\n\tthis._quadrant = null;\n\tif (arguments.length === 1) {\n\t\tlet edge = arguments[0];\n\t\tthis._edge = edge;\n\t} else if (arguments.length === 3) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tEdgeEnd.constructor_.call(this, edge, p0, p1, null);\n\t} else if (arguments.length === 4) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3];\n\t\tEdgeEnd.constructor_.call(this, edge);\n\t\tthis.init(p0, p1);\n\t\tthis._label = label;\n\t}\n};\n","import Coordinate from './Coordinate';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nexport default class TopologyException extends RuntimeException {\n\tconstructor() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet msg = arguments[0];\n\t\t\tsuper(msg)\n\t\t\tRuntimeException.call(this, msg);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet msg = arguments[0], pt = arguments[1];\n\t\t\tsuper(TopologyException.msgWithCoord(msg, pt))\n\t\t\tthis.name = 'TopologyException';\n\t\t\tthis.pt = new Coordinate(pt);\n\t\t}\n\t}\n\tgetCoordinate() {\n\t\treturn this.pt;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n\tgetClass() {\n\t\treturn TopologyException;\n\t}\n\tstatic msgWithCoord (msg, pt) {\n\t\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\n\t\treturn msg;\n\t}\n}","import Location from '../geom/Location';\nimport EdgeEnd from './EdgeEnd';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport Label from './Label';\nexport default class DirectedEdge extends EdgeEnd {\n\tconstructor() {\n\t\tsuper();\n\t\tDirectedEdge.constructor_.apply(this, arguments);\n\t}\n\tstatic depthFactor(currLocation, nextLocation) {\n\t\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n\t\treturn 0;\n\t}\n\tgetNextMin() {\n\t\treturn this._nextMin;\n\t}\n\tgetDepth(position) {\n\t\treturn this._depth[position];\n\t}\n\tsetVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t}\n\tcomputeDirectedLabel() {\n\t\tthis._label = new Label(this._edge.getLabel());\n\t\tif (!this._isForward) this._label.flip();\n\t}\n\tgetNext() {\n\t\treturn this._next;\n\t}\n\tsetDepth(position, depthVal) {\n\t\tif (this._depth[position] !== -999) {\n\t\t\tif (this._depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n\t\t}\n\t\tthis._depth[position] = depthVal;\n\t}\n\tisInteriorAreaEdge() {\n\t\tvar isInteriorAreaEdge = true;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n\t\t\t\tisInteriorAreaEdge = false;\n\t\t\t}\n\t\t}\n\t\treturn isInteriorAreaEdge;\n\t}\n\tsetNextMin(nextMin) {\n\t\tthis._nextMin = nextMin;\n\t}\n\tprint(out) {\n\t\tsuper.print.call(this, out);\n\t\tout.print(\" \" + this._depth[Position.LEFT] + \"/\" + this._depth[Position.RIGHT]);\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\n\t\tif (this._isInResult) out.print(\" inResult\");\n\t}\n\tsetMinEdgeRing(minEdgeRing) {\n\t\tthis._minEdgeRing = minEdgeRing;\n\t}\n\tisLineEdge() {\n\t\tvar isLine = this._label.isLine(0) || this._label.isLine(1);\n\t\tvar isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n\t\tvar isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\n\t}\n\tsetEdgeRing(edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t}\n\tgetMinEdgeRing() {\n\t\treturn this._minEdgeRing;\n\t}\n\tgetDepthDelta() {\n\t\tvar depthDelta = this._edge.getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\treturn depthDelta;\n\t}\n\tsetInResult(isInResult) {\n\t\tthis._isInResult = isInResult;\n\t}\n\tgetSym() {\n\t\treturn this._sym;\n\t}\n\tisForward() {\n\t\treturn this._isForward;\n\t}\n\tgetEdge() {\n\t\treturn this._edge;\n\t}\n\tprintEdge(out) {\n\t\tthis.print(out);\n\t\tout.print(\" \");\n\t\tif (this._isForward) this._edge.print(out); else this._edge.printReverse(out);\n\t}\n\tsetSym(de) {\n\t\tthis._sym = de;\n\t}\n\tsetVisitedEdge(isVisited) {\n\t\tthis.setVisited(isVisited);\n\t\tthis._sym.setVisited(isVisited);\n\t}\n\tsetEdgeDepths(position, depth) {\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\tvar directionFactor = 1;\n\t\tif (position === Position.LEFT) directionFactor = -1;\n\t\tvar oppositePos = Position.opposite(position);\n\t\tvar delta = depthDelta * directionFactor;\n\t\tvar oppositeDepth = depth + delta;\n\t\tthis.setDepth(position, depth);\n\t\tthis.setDepth(oppositePos, oppositeDepth);\n\t}\n\tgetEdgeRing() {\n\t\treturn this._edgeRing;\n\t}\n\tisInResult() {\n\t\treturn this._isInResult;\n\t}\n\tsetNext(next) {\n\t\tthis._next = next;\n\t}\n\tisVisited() {\n\t\treturn this._isVisited;\n\t}\n\tgetClass() {\n\t\treturn DirectedEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDirectedEdge.constructor_ = function () {\n\tthis._isForward = null;\n\tthis._isInResult = false;\n\tthis._isVisited = false;\n\tthis._sym = null;\n\tthis._next = null;\n\tthis._nextMin = null;\n\tthis._edgeRing = null;\n\tthis._minEdgeRing = null;\n\tthis._depth = [0, -999, -999];\n\tlet edge = arguments[0], isForward = arguments[1];\n\tEdgeEnd.constructor_.call(this, edge);\n\tthis._isForward = isForward;\n\tif (isForward) {\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\n\t} else {\n\t\tvar n = edge.getNumPoints() - 1;\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n\t}\n\tthis.computeDirectedLabel();\n};\n","import Node from './Node';\nexport default class NodeFactory {\n\tconstructor() {\n\t\tNodeFactory.constructor_.apply(this, arguments);\n\t}\n\tcreateNode(coord) {\n\t\treturn new Node(coord, null);\n\t}\n\tgetClass() {\n\t\treturn NodeFactory;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNodeFactory.constructor_ = function () {};\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport NodeMap from './NodeMap';\nimport Orientation from '../algorithm/Orientation';\nimport DirectedEdge from './DirectedEdge';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport NodeFactory from './NodeFactory';\nexport default class PlanarGraph {\n\tconstructor() {\n\t\tPlanarGraph.constructor_.apply(this, arguments);\n\t}\n\tstatic linkResultDirectedEdges(nodes) {\n\t\tfor (var nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t}\n\tprintEdges(out) {\n\t\tout.println(\"Edges:\");\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tout.println(\"edge \" + i + \":\");\n\t\t\tvar e = this._edges.get(i);\n\t\t\te.print(out);\n\t\t\te.eiList.print(out);\n\t\t}\n\t}\n\tfind(coord) {\n\t\treturn this._nodes.find(coord);\n\t}\n\taddNode() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\treturn this._nodes.addNode(node);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\treturn this._nodes.addNode(coord);\n\t\t}\n\t}\n\tgetNodeIterator() {\n\t\treturn this._nodes.iterator();\n\t}\n\tlinkResultDirectedEdges() {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t}\n\tdebugPrintln(o) {\n\t\tSystem.out.println(o);\n\t}\n\tisBoundaryNode(geomIndex, coord) {\n\t\tvar node = this._nodes.find(coord);\n\t\tif (node === null) return false;\n\t\tvar label = node.getLabel();\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n\t\treturn false;\n\t}\n\tlinkAllDirectedEdges() {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkAllDirectedEdges();\n\t\t}\n\t}\n\tmatchInSameDirection(p0, p1, ep0, ep1) {\n\t\tif (!p0.equals(ep0)) return false;\n\t\tif (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n\t\treturn false;\n\t}\n\tgetEdgeEnds() {\n\t\treturn this._edgeEndList;\n\t}\n\tdebugPrint(o) {\n\t\tSystem.out.print(o);\n\t}\n\tgetEdgeIterator() {\n\t\treturn this._edges.iterator();\n\t}\n\tfindEdgeInSameDirection(p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n\t\t}\n\t\treturn null;\n\t}\n\tinsertEdge(e) {\n\t\tthis._edges.add(e);\n\t}\n\tfindEdgeEnd(e) {\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n\t\t\tvar ee = i.next();\n\t\t\tif (ee.getEdge() === e) return ee;\n\t\t}\n\t\treturn null;\n\t}\n\taddEdges(edgesToAdd) {\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tthis._edges.add(e);\n\t\t\tvar de1 = new DirectedEdge(e, true);\n\t\t\tvar de2 = new DirectedEdge(e, false);\n\t\t\tde1.setSym(de2);\n\t\t\tde2.setSym(de1);\n\t\t\tthis.add(de1);\n\t\t\tthis.add(de2);\n\t\t}\n\t}\n\tadd(e) {\n\t\tthis._nodes.add(e);\n\t\tthis._edgeEndList.add(e);\n\t}\n\tgetNodes() {\n\t\treturn this._nodes.values();\n\t}\n\tfindEdge(p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n\t\t}\n\t\treturn null;\n\t}\n\tgetClass() {\n\t\treturn PlanarGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPlanarGraph.constructor_ = function () {\n\tthis._edges = new ArrayList();\n\tthis._nodes = null;\n\tthis._edgeEndList = new ArrayList();\n\tif (arguments.length === 0) {\n\t\tthis._nodes = new NodeMap(new NodeFactory());\n\t} else if (arguments.length === 1) {\n\t\tlet nodeFact = arguments[0];\n\t\tthis._nodes = new NodeMap(nodeFact);\n\t}\n};\n","import PointLocator from '../algorithm/PointLocator';\nimport Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport MultiPoint from '../geom/MultiPoint';\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector';\nimport LinearRing from '../geom/LinearRing';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport Orientation from '../algorithm/Orientation';\nimport SegmentIntersector from './index/SegmentIntersector';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport Label from './Label';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Polygonal from '../geom/Polygonal';\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../util/Assert';\nimport Edge from './Edge';\nimport MultiLineString from '../geom/MultiLineString';\nimport PlanarGraph from './PlanarGraph';\nexport default class GeometryGraph extends PlanarGraph {\n\tconstructor() {\n\t\tsuper();\n\t\tGeometryGraph.constructor_.apply(this, arguments);\n\t}\n\tstatic determineBoundary(boundaryNodeRule, boundaryCount) {\n\t\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n\t}\n\tinsertBoundaryPoint(argIndex, coord) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tvar boundaryCount = 1;\n\t\tvar loc = Location.NONE;\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\tvar newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n\t\tlbl.setLocation(argIndex, newLoc);\n\t}\n\tcomputeSelfNodes() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1];\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2];\n\t\t\tvar si = new SegmentIntersector(li, true, false);\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\n\t\t\tvar esi = this.createEdgeSetIntersector();\n\t\t\tvar isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n\t\t\tvar computeAllSegments = computeRingSelfNodes || !isRings;\n\t\t\tesi.computeIntersections(this._edges, si, computeAllSegments);\n\t\t\tthis.addSelfIntersectionNodes(this._argIndex);\n\t\t\treturn si;\n\t\t}\n\t}\n\tcomputeSplitEdges(edgelist) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\te.eiList.addSplitEdges(edgelist);\n\t\t}\n\t}\n\tcomputeEdgeIntersections(g, li, includeProper) {\n\t\tvar si = new SegmentIntersector(li, includeProper, true);\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n\t\tvar esi = this.createEdgeSetIntersector();\n\t\tesi.computeIntersections(this._edges, g._edges, si);\n\t\treturn si;\n\t}\n\tgetGeometry() {\n\t\treturn this._parentGeom;\n\t}\n\tgetBoundaryNodeRule() {\n\t\treturn this._boundaryNodeRule;\n\t}\n\thasTooFewPoints() {\n\t\treturn this._hasTooFewPoints;\n\t}\n\taddPoint() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar coord = p.getCoordinate();\n\t\t\tthis.insertPoint(this._argIndex, coord, Location.INTERIOR);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.insertPoint(this._argIndex, pt, Location.INTERIOR);\n\t\t}\n\t}\n\taddPolygon(p) {\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t}\n\taddEdge(e) {\n\t\tthis.insertEdge(e);\n\t\tvar coord = e.getCoordinates();\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t\tthis.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n\t}\n\taddLineString(line) {\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (coord.length < 2) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n\t\tthis._lineEdgeMap.put(line, e);\n\t\tthis.insertEdge(e);\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[0]);\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n\t}\n\tgetInvalidPoint() {\n\t\treturn this._invalidPoint;\n\t}\n\tgetBoundaryPoints() {\n\t\tvar coll = this.getBoundaryNodes();\n\t\tvar pts = new Array(coll.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = coll.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tpts[i++] = node.getCoordinate().copy();\n\t\t}\n\t\treturn pts;\n\t}\n\tgetBoundaryNodes() {\n\t\tif (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex);\n\t\treturn this._boundaryNodes;\n\t}\n\taddSelfIntersectionNode(argIndex, coord, loc) {\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\n\t\tif (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc);\n\t}\n\taddPolygonRing(lr, cwLeft, cwRight) {\n\t\tif (lr.isEmpty()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\t\tif (coord.length < 4) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar left = cwLeft;\n\t\tvar right = cwRight;\n\t\tif (Orientation.isCCW(coord)) {\n\t\t\tleft = cwRight;\n\t\t\tright = cwLeft;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n\t\tthis._lineEdgeMap.put(lr, e);\n\t\tthis.insertEdge(e);\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t}\n\tinsertPoint(argIndex, coord, onLocation) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tif (lbl === null) {\n\t\t\tn._label = new Label(argIndex, onLocation);\n\t\t} else lbl.setLocation(argIndex, onLocation);\n\t}\n\tcreateEdgeSetIntersector() {\n\t\treturn new SimpleMCSweepLineIntersector();\n\t}\n\taddSelfIntersectionNodes(argIndex) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n\t\t\t}\n\t\t}\n\t}\n\tadd() {\n\t\tif (arguments.length === 1 && arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false;\n\t\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t} else return super.add.apply(this, arguments);\n\t}\n\taddCollection(gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t}\n\tlocate(pt) {\n\t\tif (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n\t\t\tif (this._areaPtLocator === null) {\n\t\t\t\tthis._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n\t\t\t}\n\t\t\treturn this._areaPtLocator.locate(pt);\n\t\t}\n\t\treturn this._ptLocator.locate(pt, this._parentGeom);\n\t}\n\tfindEdge() {\n\t\tif (arguments.length === 1 && arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\treturn this._lineEdgeMap.get(line);\n\t\t} else return super.findEdge.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn GeometryGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryGraph.constructor_ = function () {\n\tthis._parentGeom = null;\n\tthis._lineEdgeMap = new HashMap();\n\tthis._boundaryNodeRule = null;\n\tthis._useBoundaryDeterminationRule = true;\n\tthis._argIndex = null;\n\tthis._boundaryNodes = null;\n\tthis._hasTooFewPoints = false;\n\tthis._invalidPoint = null;\n\tthis._areaPtLocator = null;\n\tthis._ptLocator = new PointLocator();\n\tif (arguments.length === 2) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1];\n\t\tGeometryGraph.constructor_.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2];\n\t\tthis._argIndex = argIndex;\n\t\tthis._parentGeom = parentGeom;\n\t\tthis._boundaryNodeRule = boundaryNodeRule;\n\t\tif (parentGeom !== null) {\n\t\t\tthis.add(parentGeom);\n\t\t}\n\t}\n};\n","export default class KdNodeVisitor {\n\tconstructor() {\n\t\tKdNodeVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisit(node) {}\n\tgetClass() {\n\t\treturn KdNodeVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nKdNodeVisitor.constructor_ = function () {};\n","import Coordinate from '../../geom/Coordinate';\nexport default class KdNode {\n\tconstructor() {\n\t\tKdNode.constructor_.apply(this, arguments);\n\t}\n\tisRepeated() {\n\t\treturn this._count > 1;\n\t}\n\tgetRight() {\n\t\treturn this._right;\n\t}\n\tgetCoordinate() {\n\t\treturn this._p;\n\t}\n\tsetLeft(_left) {\n\t\tthis._left = _left;\n\t}\n\tgetX() {\n\t\treturn this._p.x;\n\t}\n\tgetData() {\n\t\treturn this._data;\n\t}\n\tgetCount() {\n\t\treturn this._count;\n\t}\n\tgetLeft() {\n\t\treturn this._left;\n\t}\n\tgetY() {\n\t\treturn this._p.y;\n\t}\n\tincrement() {\n\t\tthis._count = this._count + 1;\n\t}\n\tsetRight(_right) {\n\t\tthis._right = _right;\n\t}\n\tgetClass() {\n\t\treturn KdNode;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nKdNode.constructor_ = function () {\n\tthis._p = null;\n\tthis._data = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis._count = null;\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], data = arguments[1];\n\t\tthis._p = new Coordinate(p);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], data = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t}\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport hasInterface from '../../../../../hasInterface';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport KdNodeVisitor from './KdNodeVisitor';\nimport Envelope from '../../geom/Envelope';\nimport List from '../../../../../java/util/List';\nimport KdNode from './KdNode';\nexport default class KdTree {\n\tconstructor() {\n\t\tKdTree.constructor_.apply(this, arguments);\n\t}\n\tstatic toCoordinates() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet kdnodes = arguments[0];\n\t\t\treturn KdTree.toCoordinates(kdnodes, false);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet kdnodes = arguments[0], includeRepeated = arguments[1];\n\t\t\tvar coord = new CoordinateList();\n\t\t\tfor (var it = kdnodes.iterator(); it.hasNext(); ) {\n\t\t\t\tvar node = it.next();\n\t\t\t\tvar count = includeRepeated ? node.getCount() : 1;\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tcoord.add(node.getCoordinate(), true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn coord.toCoordinateArray();\n\t\t}\n\t}\n\tinsert() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn this.insert(p, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], data = arguments[1];\n\t\t\tif (this._root === null) {\n\t\t\t\tthis._root = new KdNode(p, data);\n\t\t\t\treturn this._root;\n\t\t\t}\n\t\t\tif (this._tolerance > 0) {\n\t\t\t\tvar matchNode = this.findBestMatchNode(p);\n\t\t\t\tif (matchNode !== null) {\n\t\t\t\t\tmatchNode.increment();\n\t\t\t\t\treturn matchNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.insertExact(p, data);\n\t\t}\n\t}\n\tquery() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet queryEnv = arguments[0];\n\t\t\tvar result = new ArrayList();\n\t\t\tthis.query(queryEnv, result);\n\t\t\treturn result;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n\t\t\t\tlet queryEnv = arguments[0], result = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, new (class {\n\t\t\t\t\tget interfaces_() {\n\t\t\t\t\t\treturn [KdNodeVisitor];\n\t\t\t\t\t}\n\t\t\t\t\tvisit(node) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t})());\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n\t\t\t\tlet queryEnv = arguments[0], visitor = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, visitor);\n\t\t\t}\n\t\t}\n\t}\n\tqueryNode(currentNode, queryEnv, odd, visitor) {\n\t\tif (currentNode === null) return null;\n\t\tvar min = null;\n\t\tvar max = null;\n\t\tvar discriminant = null;\n\t\tif (odd) {\n\t\t\tmin = queryEnv.getMinX();\n\t\t\tmax = queryEnv.getMaxX();\n\t\t\tdiscriminant = currentNode.getX();\n\t\t} else {\n\t\t\tmin = queryEnv.getMinY();\n\t\t\tmax = queryEnv.getMaxY();\n\t\t\tdiscriminant = currentNode.getY();\n\t\t}\n\t\tvar searchLeft = min < discriminant;\n\t\tvar searchRight = discriminant <= max;\n\t\tif (searchLeft) {\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n\t\t}\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\n\t\t\tvisitor.visit(currentNode);\n\t\t}\n\t\tif (searchRight) {\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n\t\t}\n\t}\n\tfindBestMatchNode(p) {\n\t\tvar visitor = new BestMatchVisitor(p, this._tolerance);\n\t\tthis.query(visitor.queryEnvelope(), visitor);\n\t\treturn visitor.getNode();\n\t}\n\tisEmpty() {\n\t\tif (this._root === null) return true;\n\t\treturn false;\n\t}\n\tinsertExact(p, data) {\n\t\tvar currentNode = this._root;\n\t\tvar leafNode = this._root;\n\t\tvar isOddLevel = true;\n\t\tvar isLessThan = true;\n\t\twhile (currentNode !== null) {\n\t\t\tif (currentNode !== null) {\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance;\n\t\t\t\tif (isInTolerance) {\n\t\t\t\t\tcurrentNode.increment();\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOddLevel) {\n\t\t\t\tisLessThan = p.x < currentNode.getX();\n\t\t\t} else {\n\t\t\t\tisLessThan = p.y < currentNode.getY();\n\t\t\t}\n\t\t\tleafNode = currentNode;\n\t\t\tif (isLessThan) {\n\t\t\t\tcurrentNode = currentNode.getLeft();\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.getRight();\n\t\t\t}\n\t\t\tisOddLevel = !isOddLevel;\n\t\t}\n\t\tthis._numberOfNodes = this._numberOfNodes + 1;\n\t\tvar node = new KdNode(p, data);\n\t\tif (isLessThan) {\n\t\t\tleafNode.setLeft(node);\n\t\t} else {\n\t\t\tleafNode.setRight(node);\n\t\t}\n\t\treturn node;\n\t}\n\tgetClass() {\n\t\treturn KdTree;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass BestMatchVisitor {\n\tconstructor() {\n\t\tBestMatchVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisit(node) {\n\t\tvar dist = this._p.distance(node.getCoordinate());\n\t\tvar isInTolerance = dist <= this._tolerance;\n\t\tif (!isInTolerance) return null;\n\t\tvar update = false;\n\t\tif (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true;\n\t\tif (update) {\n\t\t\tthis._matchNode = node;\n\t\t\tthis._matchDist = dist;\n\t\t}\n\t}\n\tqueryEnvelope() {\n\t\tvar queryEnv = new Envelope(this._p);\n\t\tqueryEnv.expandBy(this._tolerance);\n\t\treturn queryEnv;\n\t}\n\tgetNode() {\n\t\treturn this._matchNode;\n\t}\n\tgetClass() {\n\t\treturn BestMatchVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [KdNodeVisitor];\n\t}\n}\nBestMatchVisitor.constructor_ = function () {\n\tthis._tolerance = null;\n\tthis._matchNode = null;\n\tthis._matchDist = 0.0;\n\tthis._p = null;\n\tlet p = arguments[0], tolerance = arguments[1];\n\tthis._p = p;\n\tthis._tolerance = tolerance;\n};\nKdTree.BestMatchVisitor = BestMatchVisitor;\nKdTree.constructor_ = function () {\n\tthis._root = null;\n\tthis._numberOfNodes = null;\n\tthis._tolerance = null;\n\tif (arguments.length === 0) {\n\t\tKdTree.constructor_.call(this, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet tolerance = arguments[0];\n\t\tthis._tolerance = tolerance;\n\t}\n};\n","import ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default class NodeBase {\n\tconstructor() {\n\t\tNodeBase.constructor_.apply(this, arguments);\n\t}\n\tstatic getSubnodeIndex(env, centrex, centrey) {\n\t\tvar subnodeIndex = -1;\n\t\tif (env.getMinX() >= centrex) {\n\t\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\n\t\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\n\t\t}\n\t\tif (env.getMaxX() <= centrex) {\n\t\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\n\t\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\n\t\t}\n\t\treturn subnodeIndex;\n\t}\n\thasChildren() {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tisPrunable() {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t}\n\taddAllItems(resultItems) {\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(resultItems);\n\t\t\t}\n\t\t}\n\t\treturn resultItems;\n\t}\n\tgetNodeCount() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t}\n\tsize() {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t}\n\taddAllItemsFromOverlapping(searchEnv, resultItems) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n\t\t\t}\n\t\t}\n\t}\n\tvisitItems(searchEnv, visitor) {\n\t\tfor (var i = this._items.iterator(); i.hasNext(); ) {\n\t\t\tvisitor.visitItem(i.next());\n\t\t}\n\t}\n\thasItems() {\n\t\treturn !this._items.isEmpty();\n\t}\n\tremove(itemEnv, item) {\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemEnv, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t}\n\tvisit(searchEnv, visitor) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tthis.visitItems(searchEnv, visitor);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].visit(searchEnv, visitor);\n\t\t\t}\n\t\t}\n\t}\n\tgetItems() {\n\t\treturn this._items;\n\t}\n\tdepth() {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t}\n\tisEmpty() {\n\t\tvar isEmpty = true;\n\t\tif (!this._items.isEmpty()) isEmpty = false; else {\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\t\tif (!this._subnode[i].isEmpty()) {\n\t\t\t\t\t\tisEmpty = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isEmpty;\n\t}\n\tadd(item) {\n\t\tthis._items.add(item);\n\t}\n\tgetClass() {\n\t\treturn NodeBase;\n\t}\n\tget interfaces_() {\n\t\treturn [Serializable];\n\t}\n}\nNodeBase.constructor_ = function () {\n\tthis._items = new ArrayList();\n\tthis._subnode = new Array(4).fill(null);\n};\n","export default function DoubleBits () { }\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023\n}\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp)\n}\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n * @private\n */\nfunction CVTFWD (NumW, Qty) {\n  var Sign\n  var Expo\n  var Mant\n  var Bin\n  var Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  }\n  var ExW = {\n    32: 8,\n    64: 11\n  }[NumW]\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW]\n      if (Sign) {\n        Bin.d += 1 << (NumW / 4 - 1)\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW]\n    Mant = Math.abs(Qty)\n    while (Mant >= 2) {\n      Expo++\n      Mant /= 2\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--\n      Mant *= 2\n    }\n    if (Expo <= 0) {\n      Mant /= 2\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  return Expo\n}\n","import Coordinate from '../../geom/Coordinate';\nimport DoubleBits from './DoubleBits';\nimport Envelope from '../../geom/Envelope';\nexport default class Key {\n\tconstructor() {\n\t\tKey.constructor_.apply(this, arguments);\n\t}\n\tstatic computeQuadLevel(env) {\n\t\tvar dx = env.getWidth();\n\t\tvar dy = env.getHeight();\n\t\tvar dMax = dx > dy ? dx : dy;\n\t\tvar level = DoubleBits.exponent(dMax) + 1;\n\t\treturn level;\n\t}\n\tgetLevel() {\n\t\treturn this._level;\n\t}\n\tcomputeKey() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet itemEnv = arguments[0];\n\t\t\tthis._level = Key.computeQuadLevel(itemEnv);\n\t\t\tthis._env = new Envelope();\n\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\twhile (!this._env.contains(itemEnv)) {\n\t\t\t\tthis._level += 1;\n\t\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet level = arguments[0], itemEnv = arguments[1];\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\n\t\t\tthis._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\n\t\t\tthis._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\n\t\t\tthis._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize);\n\t\t}\n\t}\n\tgetEnvelope() {\n\t\treturn this._env;\n\t}\n\tgetCentre() {\n\t\treturn new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2);\n\t}\n\tgetPoint() {\n\t\treturn this._pt;\n\t}\n\tgetClass() {\n\t\treturn Key;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nKey.constructor_ = function () {\n\tthis._pt = new Coordinate();\n\tthis._level = 0;\n\tthis._env = null;\n\tlet itemEnv = arguments[0];\n\tthis.computeKey(itemEnv);\n};\n","import NodeBase from './NodeBase';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport Key from './Key';\nexport default class Node extends NodeBase {\n\tconstructor() {\n\t\tsuper();\n\t\tNode.constructor_.apply(this, arguments);\n\t}\n\tstatic createNode(env) {\n\t\tvar key = new Key(env);\n\t\tvar node = new Node(key.getEnvelope(), key.getLevel());\n\t\treturn node;\n\t}\n\tstatic createExpanded(node, addEnv) {\n\t\tvar expandEnv = new Envelope(addEnv);\n\t\tif (node !== null) expandEnv.expandToInclude(node._env);\n\t\tvar largerNode = Node.createNode(expandEnv);\n\t\tif (node !== null) largerNode.insertNode(node);\n\t\treturn largerNode;\n\t}\n\tfind(searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchEnv);\n\t\t}\n\t\treturn this;\n\t}\n\tisSearchMatch(searchEnv) {\n\t\tif (searchEnv === null) return false;\n\t\treturn this._env.intersects(searchEnv);\n\t}\n\tgetSubnode(index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t}\n\tgetEnvelope() {\n\t\treturn this._env;\n\t}\n\tgetNode(searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchEnv);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\tcreateSubnode(index) {\n\t\tvar minx = 0.0;\n\t\tvar maxx = 0.0;\n\t\tvar miny = 0.0;\n\t\tvar maxy = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\n\t\tvar node = new Node(sqEnv, this._level - 1);\n\t\treturn node;\n\t}\n\tinsertNode(node) {\n\t\tAssert.isTrue(this._env === null || this._env.contains(node._env));\n\t\tvar index = NodeBase.getSubnodeIndex(node._env, this._centrex, this._centrey);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insertNode(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Node;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNode.constructor_ = function () {\n\tthis._env = null;\n\tthis._centrex = null;\n\tthis._centrey = null;\n\tthis._level = null;\n\tlet env = arguments[0], level = arguments[1];\n\tthis._env = env;\n\tthis._level = level;\n\tthis._centrex = (env.getMinX() + env.getMaxX()) / 2;\n\tthis._centrey = (env.getMinY() + env.getMaxY()) / 2;\n};\n","import DoubleBits from './DoubleBits';\nexport default class IntervalSize {\n\tconstructor() {\n\t\tIntervalSize.constructor_.apply(this, arguments);\n\t}\n\tstatic isZeroWidth(min, max) {\n\t\tvar width = max - min;\n\t\tif (width === 0.0) return true;\n\t\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\n\t\tvar scaledInterval = width / maxAbs;\n\t\tvar level = DoubleBits.exponent(scaledInterval);\n\t\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\n\t}\n\tgetClass() {\n\t\treturn IntervalSize;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIntervalSize.constructor_ = function () {};\nIntervalSize.MIN_BINARY_EXPONENT = -50;\n","import Coordinate from '../../geom/Coordinate';\nimport NodeBase from './NodeBase';\nimport Node from './Node';\nimport IntervalSize from './IntervalSize';\nimport Assert from '../../util/Assert';\nexport default class Root extends NodeBase {\n\tconstructor() {\n\t\tsuper();\n\t\tRoot.constructor_.apply(this, arguments);\n\t}\n\tinsert(itemEnv, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemEnv);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemEnv, item);\n\t}\n\tisSearchMatch(searchEnv) {\n\t\treturn true;\n\t}\n\tinsertContained(tree, itemEnv, item) {\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n\t\tvar node = null;\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv);\n\t\tnode.add(item);\n\t}\n\tgetClass() {\n\t\treturn Root;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRoot.constructor_ = function () {};\nRoot.origin = new Coordinate(0.0, 0.0);\n","export default class SpatialIndex {\n\tconstructor() {\n\t\tSpatialIndex.constructor_.apply(this, arguments);\n\t}\n\tinsert(itemEnv, item) {}\n\tremove(itemEnv, item) {}\n\tquery() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn SpatialIndex;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSpatialIndex.constructor_ = function () {};\n","import Root from './Root';\nimport SpatialIndex from '../SpatialIndex';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport ArrayListVisitor from '../ArrayListVisitor';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nexport default class Quadtree {\n\tconstructor() {\n\t\tQuadtree.constructor_.apply(this, arguments);\n\t}\n\tstatic ensureExtent(itemEnv, minExtent) {\n\t\tvar minx = itemEnv.getMinX();\n\t\tvar maxx = itemEnv.getMaxX();\n\t\tvar miny = itemEnv.getMinY();\n\t\tvar maxy = itemEnv.getMaxY();\n\t\tif (minx !== maxx && miny !== maxy) return itemEnv;\n\t\tif (minx === maxx) {\n\t\t\tminx = minx - minExtent / 2.0;\n\t\t\tmaxx = minx + minExtent / 2.0;\n\t\t}\n\t\tif (miny === maxy) {\n\t\t\tminy = miny - minExtent / 2.0;\n\t\t\tmaxy = miny + minExtent / 2.0;\n\t\t}\n\t\treturn new Envelope(minx, maxx, miny, maxy);\n\t}\n\tsize() {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t}\n\tinsert(itemEnv, item) {\n\t\tthis.collectStats(itemEnv);\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\tthis._root.insert(insertEnv, item);\n\t}\n\tquery() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.query(searchEnv, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tthis._root.visit(searchEnv, visitor);\n\t\t}\n\t}\n\tqueryAll() {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems;\n\t}\n\tremove(itemEnv, item) {\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\treturn this._root.remove(posEnv, item);\n\t}\n\tcollectStats(itemEnv) {\n\t\tvar delX = itemEnv.getWidth();\n\t\tif (delX < this._minExtent && delX > 0.0) this._minExtent = delX;\n\t\tvar delY = itemEnv.getHeight();\n\t\tif (delY < this._minExtent && delY > 0.0) this._minExtent = delY;\n\t}\n\tdepth() {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t}\n\tisEmpty() {\n\t\tif (this._root === null) return true;\n\t\treturn this._root.isEmpty();\n\t}\n\tgetClass() {\n\t\treturn Quadtree;\n\t}\n\tget interfaces_() {\n\t\treturn [SpatialIndex, Serializable];\n\t}\n}\nQuadtree.constructor_ = function () {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root();\n};\nQuadtree.serialVersionUID = -7461163625812743604;\n","export default class Boundable {\n\tconstructor() {\n\t\tBoundable.constructor_.apply(this, arguments);\n\t}\n\tgetBounds() {}\n\tgetClass() {\n\t\treturn Boundable;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nBoundable.constructor_ = function () {};\n","import Boundable from './Boundable';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default class ItemBoundable {\n\tconstructor() {\n\t\tItemBoundable.constructor_.apply(this, arguments);\n\t}\n\tgetItem() {\n\t\treturn this._item;\n\t}\n\tgetBounds() {\n\t\treturn this._bounds;\n\t}\n\tgetClass() {\n\t\treturn ItemBoundable;\n\t}\n\tget interfaces_() {\n\t\treturn [Boundable, Serializable];\n\t}\n}\nItemBoundable.constructor_ = function () {\n\tthis._bounds = null;\n\tthis._item = null;\n\tlet bounds = arguments[0], item = arguments[1];\n\tthis._bounds = bounds;\n\tthis._item = item;\n};\n","import ArrayList from '../../../../java/util/ArrayList';\nexport default class PriorityQueue {\n\tconstructor() {\n\t\tPriorityQueue.constructor_.apply(this, arguments);\n\t}\n\tpoll() {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this._items.get(1);\n\t\tthis._items.set(1, this._items.get(this._size));\n\t\tthis._size -= 1;\n\t\tthis.reorder(1);\n\t\treturn minItem;\n\t}\n\tsize() {\n\t\treturn this._size;\n\t}\n\treorder(hole) {\n\t\tvar child = null;\n\t\tvar tmp = this._items.get(hole);\n\t\tfor (; hole * 2 <= this._size; hole = child) {\n\t\t\tchild = hole * 2;\n\t\t\tif (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++;\n\t\t\tif (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child)); else break;\n\t\t}\n\t\tthis._items.set(hole, tmp);\n\t}\n\tclear() {\n\t\tthis._size = 0;\n\t\tthis._items.clear();\n\t}\n\tpeek() {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this._items.get(1);\n\t\treturn minItem;\n\t}\n\tisEmpty() {\n\t\treturn this._size === 0;\n\t}\n\tadd(x) {\n\t\tthis._items.add(null);\n\t\tthis._size += 1;\n\t\tvar hole = this._size;\n\t\tthis._items.set(0, x);\n\t\tfor (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n\t\t\tthis._items.set(hole, this._items.get(Math.trunc(hole / 2)));\n\t\t}\n\t\tthis._items.set(hole, x);\n\t}\n\tgetClass() {\n\t\treturn PriorityQueue;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPriorityQueue.constructor_ = function () {\n\tthis._size = null;\n\tthis._items = null;\n\tthis._size = 0;\n\tthis._items = new ArrayList();\n\tthis._items.add(null);\n};\n","import Boundable from './Boundable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nexport default class AbstractNode {\n\tconstructor() {\n\t\tAbstractNode.constructor_.apply(this, arguments);\n\t}\n\tgetLevel() {\n\t\treturn this._level;\n\t}\n\tsize() {\n\t\treturn this._childBoundables.size();\n\t}\n\tgetChildBoundables() {\n\t\treturn this._childBoundables;\n\t}\n\taddChildBoundable(childBoundable) {\n\t\tAssert.isTrue(this._bounds === null);\n\t\tthis._childBoundables.add(childBoundable);\n\t}\n\tisEmpty() {\n\t\treturn this._childBoundables.isEmpty();\n\t}\n\tgetBounds() {\n\t\tif (this._bounds === null) {\n\t\t\tthis._bounds = this.computeBounds();\n\t\t}\n\t\treturn this._bounds;\n\t}\n\tgetClass() {\n\t\treturn AbstractNode;\n\t}\n\tget interfaces_() {\n\t\treturn [Boundable, Serializable];\n\t}\n}\nAbstractNode.constructor_ = function () {\n\tthis._childBoundables = new ArrayList();\n\tthis._bounds = null;\n\tthis._level = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet level = arguments[0];\n\t\tthis._level = level;\n\t}\n};\nAbstractNode.serialVersionUID = 6493722185909573708;\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport AbstractNode from './AbstractNode';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default class BoundablePair {\n\tconstructor() {\n\t\tBoundablePair.constructor_.apply(this, arguments);\n\t}\n\tstatic area(b) {\n\t\treturn b.getBounds().getArea();\n\t}\n\tstatic isComposite(item) {\n\t\treturn item instanceof AbstractNode;\n\t}\n\texpandToQueue(priQ, minDistance) {\n\t\tvar isComp1 = BoundablePair.isComposite(this._boundable1);\n\t\tvar isComp2 = BoundablePair.isComposite(this._boundable2);\n\t\tif (isComp1 && isComp2) {\n\t\t\tif (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n\t\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isComp1) {\n\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\treturn null;\n\t\t} else if (isComp2) {\n\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\treturn null;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\n\t}\n\tisLeaves() {\n\t\treturn !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2));\n\t}\n\tcompareTo(o) {\n\t\tvar nd = o;\n\t\tif (this._distance < nd._distance) return -1;\n\t\tif (this._distance > nd._distance) return 1;\n\t\treturn 0;\n\t}\n\texpand(bndComposite, bndOther, priQ, minDistance) {\n\t\tvar children = bndComposite.getChildBoundables();\n\t\tfor (var i = children.iterator(); i.hasNext(); ) {\n\t\t\tvar child = i.next();\n\t\t\tvar bp = new BoundablePair(child, bndOther, this._itemDistance);\n\t\t\tif (bp.getDistance() < minDistance) {\n\t\t\t\tpriQ.add(bp);\n\t\t\t}\n\t\t}\n\t}\n\tgetBoundable(i) {\n\t\tif (i === 0) return this._boundable1;\n\t\treturn this._boundable2;\n\t}\n\tgetDistance() {\n\t\treturn this._distance;\n\t}\n\tdistance() {\n\t\tif (this.isLeaves()) {\n\t\t\treturn this._itemDistance.distance(this._boundable1, this._boundable2);\n\t\t}\n\t\treturn this._boundable1.getBounds().distance(this._boundable2.getBounds());\n\t}\n\tgetClass() {\n\t\treturn BoundablePair;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nBoundablePair.constructor_ = function () {\n\tthis._boundable1 = null;\n\tthis._boundable2 = null;\n\tthis._distance = null;\n\tthis._itemDistance = null;\n\tlet boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2];\n\tthis._boundable1 = boundable1;\n\tthis._boundable2 = boundable2;\n\tthis._itemDistance = itemDistance;\n\tthis._distance = this.distance();\n};\n","import ItemBoundable from './ItemBoundable';\nimport hasInterface from '../../../../../hasInterface';\nimport ItemVisitor from '../ItemVisitor';\nimport AbstractNode from './AbstractNode';\nimport Collections from '../../../../../java/util/Collections';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nimport List from '../../../../../java/util/List';\nexport default class AbstractSTRtree {\n\tconstructor() {\n\t\tAbstractSTRtree.constructor_.apply(this, arguments);\n\t}\n\tstatic compareDoubles(a, b) {\n\t\treturn a > b ? 1 : a < b ? -1 : 0;\n\t}\n\tqueryInternal() {\n\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\n\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tthis.queryInternal(searchBounds, childBoundable, visitor);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvisitor.visitItem(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\n\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tthis.queryInternal(searchBounds, childBoundable, matches);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tmatches.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetNodeCapacity() {\n\t\treturn this._nodeCapacity;\n\t}\n\tlastNode(nodes) {\n\t\treturn nodes.get(nodes.size() - 1);\n\t}\n\tsize() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.size(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar size = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tsize += this.size(childBoundable);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tsize += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn size;\n\t\t}\n\t}\n\tremoveItem(node, item) {\n\t\tvar childToRemove = null;\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (childBoundable instanceof ItemBoundable) {\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\n\t\t\t}\n\t\t}\n\t\tif (childToRemove !== null) {\n\t\t\tnode.getChildBoundables().remove(childToRemove);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\titemsTree() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.build();\n\t\t\tvar valuesTree = this.itemsTree(this._root);\n\t\t\tif (valuesTree === null) return new ArrayList();\n\t\t\treturn valuesTree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar valuesTreeForNode = new ArrayList();\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\n\t\t\treturn valuesTreeForNode;\n\t\t}\n\t}\n\tinsert(bounds, item) {\n\t\tAssert.isTrue(!this._built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\t\tthis._itemBoundables.add(new ItemBoundable(bounds, item));\n\t}\n\tboundablesAtLevel() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet level = arguments[0];\n\t\t\tvar boundables = new ArrayList();\n\t\t\tthis.boundablesAtLevel(level, this._root, boundables);\n\t\t\treturn boundables;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet level = arguments[0], top = arguments[1], boundables = arguments[2];\n\t\t\tAssert.isTrue(level > -2);\n\t\t\tif (top.getLevel() === level) {\n\t\t\t\tboundables.add(top);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar boundable = i.next();\n\t\t\t\tif (boundable instanceof AbstractNode) {\n\t\t\t\t\tthis.boundablesAtLevel(level, boundable, boundables);\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\n\t\t\t\t\tif (level === -1) {\n\t\t\t\t\t\tboundables.add(boundable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\tquery() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchBounds = arguments[0];\n\t\t\tthis.build();\n\t\t\tvar matches = new ArrayList();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.queryInternal(searchBounds, this._root, matches);\n\t\t\t}\n\t\t\treturn matches;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], visitor = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.queryInternal(searchBounds, this._root, visitor);\n\t\t\t}\n\t\t}\n\t}\n\tbuild() {\n\t\tif (this._built) return null;\n\t\tthis._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n\t\tthis._itemBoundables = null;\n\t\tthis._built = true;\n\t}\n\tgetRoot() {\n\t\tthis.build();\n\t\treturn this._root;\n\t}\n\tremove() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], item = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\treturn this.remove(searchBounds, this._root, item);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], item = arguments[2];\n\t\t\tvar found = this.removeItem(node, item);\n\t\t\tif (found) return true;\n\t\t\tvar childToPrune = null;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tfound = this.remove(searchBounds, childBoundable, item);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tchildToPrune = childBoundable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (childToPrune !== null) {\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn found;\n\t\t}\n\t}\n\tcreateHigherLevels(boundablesOfALevel, level) {\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\t\tif (parentBoundables.size() === 1) {\n\t\t\treturn parentBoundables.get(0);\n\t\t}\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\n\t}\n\tdepth() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.depth(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar maxChildDepth = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxChildDepth + 1;\n\t\t}\n\t}\n\tcreateParentBoundables(childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar parentBoundables = new ArrayList();\n\t\tparentBoundables.add(this.createNode(newLevel));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\n\t\t\t}\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\n\t\t}\n\t\treturn parentBoundables;\n\t}\n\tisEmpty() {\n\t\tif (!this._built) return this._itemBoundables.isEmpty();\n\t\treturn this._root.isEmpty();\n\t}\n\tgetClass() {\n\t\treturn AbstractSTRtree;\n\t}\n\tget interfaces_() {\n\t\treturn [Serializable];\n\t}\n}\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp;\nAbstractSTRtree.constructor_ = function () {\n\tthis._root = null;\n\tthis._built = false;\n\tthis._itemBoundables = new ArrayList();\n\tthis._nodeCapacity = null;\n\tif (arguments.length === 0) {\n\t\tAbstractSTRtree.constructor_.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n\t\tthis._nodeCapacity = nodeCapacity;\n\t}\n};\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","export default class ItemDistance {\n\tconstructor() {\n\t\tItemDistance.constructor_.apply(this, arguments);\n\t}\n\tdistance(item1, item2) {}\n\tgetClass() {\n\t\treturn ItemDistance;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nItemDistance.constructor_ = function () {};\n","import ItemBoundable from './ItemBoundable';\nimport PriorityQueue from '../../util/PriorityQueue';\nimport hasInterface from '../../../../../hasInterface';\nimport SpatialIndex from '../SpatialIndex';\nimport AbstractNode from './AbstractNode';\nimport Double from '../../../../../java/lang/Double';\nimport Collections from '../../../../../java/util/Collections';\nimport BoundablePair from './BoundablePair';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport AbstractSTRtree from './AbstractSTRtree';\nimport ItemDistance from './ItemDistance';\nexport default class STRtree extends AbstractSTRtree {\n\tconstructor() {\n\t\tsuper();\n\t\tSTRtree.constructor_.apply(this, arguments);\n\t}\n\tstatic centreX(e) {\n\t\treturn STRtree.avg(e.getMinX(), e.getMaxX());\n\t}\n\tstatic avg(a, b) {\n\t\treturn (a + b) / 2;\n\t}\n\tstatic getItems(kNearestNeighbors) {\n\t\tvar items = new Array(kNearestNeighbors.size()).fill(null);\n\t\tvar count = 0;\n\t\twhile (!kNearestNeighbors.isEmpty()) {\n\t\t\tvar bp = kNearestNeighbors.poll();\n\t\t\titems[count] = bp.getBoundable(0).getItem();\n\t\t\tcount++;\n\t\t}\n\t\treturn items;\n\t}\n\tstatic centreY(e) {\n\t\treturn STRtree.avg(e.getMinY(), e.getMaxY());\n\t}\n\tcreateParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n\t\tAssert.isTrue(verticalSlices.length > 0);\n\t\tvar parentBoundables = new ArrayList();\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n\t\t}\n\t\treturn parentBoundables;\n\t}\n\tcreateNode(level) {\n\t\treturn new STRtreeNode(level);\n\t}\n\tsize() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn super.size.call(this);\n\t\t} else return super.size.apply(this, arguments);\n\t}\n\tinsert() {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\tif (itemEnv.isNull()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsuper.insert.call(this, itemEnv, item);\n\t\t} else return super.insert.apply(this, arguments);\n\t}\n\tgetIntersectsOp() {\n\t\treturn STRtree.intersectsOp;\n\t}\n\tverticalSlices(childBoundables, sliceCount) {\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n\t\tvar slices = new Array(sliceCount).fill(null);\n\t\tvar i = childBoundables.iterator();\n\t\tfor (var j = 0; j < sliceCount; j++) {\n\t\t\tslices[j] = new ArrayList();\n\t\t\tvar boundablesAddedToSlice = 0;\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tslices[j].add(childBoundable);\n\t\t\t\tboundablesAddedToSlice++;\n\t\t\t}\n\t\t}\n\t\treturn slices;\n\t}\n\tquery() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\treturn super.query.call(this, searchEnv);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tsuper.query.call(this, searchEnv, visitor);\n\t\t}\n\t}\n\tgetComparator() {\n\t\treturn STRtree.yComparator;\n\t}\n\tcreateParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n\t\treturn super.createParentBoundables.call(this, childBoundables, newLevel);\n\t}\n\tremove() {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\treturn super.remove.call(this, itemEnv, item);\n\t\t} else return super.remove.apply(this, arguments);\n\t}\n\tdepth() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn super.depth.call(this);\n\t\t} else return super.depth.apply(this, arguments);\n\t}\n\tcreateParentBoundables(childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n\t}\n\tnearestNeighbour() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\n\t\t\t\tlet itemDist = arguments[0];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\n\t\t\t\tlet initBndPair = arguments[0];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n\t\t\t\tlet tree = arguments[0], itemDist = arguments[1];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar minPair = null;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\n\t\t\t\t\t\tminPair = bndPair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n\t\t\t} else if (arguments[0] instanceof BoundablePair && Number.isInteger(arguments[1])) {\n\t\t\t\tlet initBndPair = arguments[0], k = arguments[1];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY, k);\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemDistance) && (arguments[0] instanceof Envelope && arguments[1] instanceof Object)) {\n\t\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2];\n\t\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp)[0];\n\t\t\t} else if (Number.isInteger(arguments[2]) && (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\")) {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1], k = arguments[2];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\tvar kNearestNeighbors = new PriorityQueue();\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tif (kNearestNeighbors.size() < k) {\n\t\t\t\t\t\t\tkNearestNeighbors.add(bndPair);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar bp1 = kNearestNeighbors.peek();\n\t\t\t\t\t\t\tif (bp1.getDistance() > currentDistance) {\n\t\t\t\t\t\t\t\tkNearestNeighbors.poll();\n\t\t\t\t\t\t\t\tkNearestNeighbors.add(bndPair);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar bp2 = kNearestNeighbors.peek();\n\t\t\t\t\t\t\tdistanceLowerBound = bp2.getDistance();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn STRtree.getItems(kNearestNeighbors);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2], k = arguments[3];\n\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\treturn this.nearestNeighbour(bp, k);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn STRtree;\n\t}\n\tget interfaces_() {\n\t\treturn [SpatialIndex, Serializable];\n\t}\n}\nclass STRtreeNode extends AbstractNode {\n\tconstructor() {\n\t\tsuper();\n\t\tSTRtreeNode.constructor_.apply(this, arguments);\n\t}\n\tcomputeBounds() {\n\t\tvar bounds = null;\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (bounds === null) {\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\n\t\t\t} else {\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t}\n\tgetClass() {\n\t\treturn STRtreeNode;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSTRtreeNode.constructor_ = function () {\n\tlet level = arguments[0];\n\tAbstractNode.constructor_.call(this, level);\n};\nSTRtree.STRtreeNode = STRtreeNode;\nSTRtree.constructor_ = function () {\n\tif (arguments.length === 0) {\n\t\tSTRtree.constructor_.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAbstractSTRtree.constructor_.call(this, nodeCapacity);\n\t}\n};\nSTRtree.serialVersionUID = 259274702368956900;\nSTRtree.xComparator = new (class {\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n\tcompare(o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n\t}\n})();\nSTRtree.yComparator = new (class {\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n\tcompare(o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n\t}\n})();\nSTRtree.intersectsOp = new (class {\n\tget interfaces_() {\n\t\treturn [IntersectsOp];\n\t}\n\tintersects(aBounds, bBounds) {\n\t\treturn aBounds.intersects(bBounds);\n\t}\n})();\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default class GeoJSONParser {\n  constructor(geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n  }\n\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read (json) {\n    let obj\n    if (typeof json === 'string')\n      obj = JSON.parse(json)\n    else\n      obj = json\n\n    const type = obj.type\n\n    if (!parse[type])\n      throw new Error('Unknown GeoJSON type: ' + obj.type)\n\n    if (geometryTypes.indexOf(type) !== -1)\n      return parse[type].call(this, obj.coordinates)\n    else if (type === 'GeometryCollection')\n      return parse[type].call(this, obj.geometries)\n\n    // feature or feature collection\n    return parse[type].call(this, obj)\n  }\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write (geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type])\n      throw new Error('Geometry is not supported')\n\n    return extract[type].call(this, geometry)\n  }\n} \n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    const feature = {}\n\n    for (let key in obj)\n      feature[key] = obj[key]\n\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type])\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    if (obj.bbox)\n      feature.bbox = parse.bbox.call(this, obj.bbox)\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i)\n        featureCollection.features.push(this.read(obj.features[i]))\n    }\n\n    if (obj.bbox)\n      featureCollection.bbox = this.parse.bbox.call(this, obj.bbox)\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(sub[0], sub[1]))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    const coordinate = new Coordinate(array[0], array[1])\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i)\n      points.push(parse.Point.call(this, array[i]))\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    const coordinates = parse.coordinates.call(this, array)\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i)\n      lineStrings.push(parse.LineString.call(this, array[i]))\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    const shellCoordinates = parse.coordinates.call(this, array[0])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      var hole = array[i]\n      var coordinates = parse.coordinates.call(this, hole)\n      var linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    const array = extract.coordinate.call(this, point.getCoordinate())\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint._geometries.length; ++i) {\n      const point = multipoint._geometries[i]\n      const geoJson = extract.Point.call(this, point)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.call(this, coordinate))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring._geometries.length; ++i) {\n      const linestring = multilinestring._geometries[i]\n      const geoJson = extract.LineString.call(this, linestring)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.call(this, polygon._shell)\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon._holes.length; ++i) {\n      const hole = polygon._holes[i]\n      const holeGeoJson = extract.LineString.call(this, hole)\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon._geometries.length; ++i) {\n      const polygon = multipolygon._geometries[i]\n      const geoJson = extract.Polygon.call(this, polygon)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    const array = []\n    for (let i = 0; i < collection._geometries.length; ++i) {\n      const geometry = collection._geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].call(this, geometry))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport GeoJSONParser from './GeoJSONParser'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\nexport default class GeoJSONReader {\n  /**\n   * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   *\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new GeoJSONParser(geometryFactory || new GeometryFactory())\n  }\n\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n   */\n  read (geoJson) {\n    var geometry = this.parser.read(geoJson)\n    return geometry\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\nexport default class GeoJSONWriter {\n  /**\n   * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n   * model. Only the maximum number of decimal places necessary to represent the\n   * ordinates to the required precision will be output.\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @constructor\n   */\n  constructor() {\n    this.parser = new GeoJSONParser(this.geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n}","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport WKTParser from './WKTParser'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\nexport default class WKTReader {\n  /**\n   * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory || new GeometryFactory())\n  }\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read (wkt) {\n    var geometry = this.parser.read(wkt)\n    return geometry\n  }\n}","/*eslint-disable no-undef */\n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\n\nfunction p2c (p) { return [p.x, p.y] }\n\nexport default class OL3Parser {\n  /**\n   * OpenLayers Geometry parser and writer\n   * @param {GeometryFactory} geometryFactory\n   * @param {ol} olReference \n   */\n  constructor(geometryFactory, olReference) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.ol = olReference || (typeof ol !== 'undefined' && ol)\n  }\n\n  /**\n   * Inject OpenLayers geom classes\n   */\n  inject(Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection) {\n    this.ol = {\n      geom: {\n        Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection\n      }\n    }\n  }\n\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read (geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry)\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry)\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry)\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry)\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry)\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry)\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry)\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry)\n    }\n  }\n\n  convertFromPoint (point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  }\n\n  convertFromLineString (lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromLinearRing (linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromPolygon (polygon) {\n    const linearRings = polygon.getLinearRings()\n    var shell = null\n    var holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0) {\n        shell = linearRing\n      } else {\n        holes.push(linearRing)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  }\n\n  convertFromMultiPoint (multiPoint) {\n    const points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  }\n\n  convertFromMultiLineString (multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  }\n\n  convertFromMultiPolygon (multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  }\n\n  convertFromCollection (collection) {\n    const geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write (geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate())\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry)\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry)\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry)\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry)\n    }\n  }\n\n  convertToPoint (coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  }\n\n  convertToLineString (lineString) {\n    var points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  }\n\n  convertToLinearRing (linearRing) {\n    var points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  }\n\n  convertToPolygon (polygon) {\n    var rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) {\n      rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n    }\n    return new this.ol.geom.Polygon(rings)\n  }\n\n  convertToMultiPoint (multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  }\n\n  convertToMultiLineString (multiLineString) {\n    var lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiLineString(lineStrings)\n  }\n\n  convertToMultiPolygon (multiPolygon) {\n    var polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiPolygon(polygons)\n  }\n\n  convertToCollection (geometryCollection) {\n    var geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      var geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n} \n","import Assert from '../util/Assert';\nexport default class SegmentPointComparator {\n\tconstructor() {\n\t\tSegmentPointComparator.constructor_.apply(this, arguments);\n\t}\n\tstatic relativeSign(x0, x1) {\n\t\tif (x0 < x1) return -1;\n\t\tif (x0 > x1) return 1;\n\t\treturn 0;\n\t}\n\tstatic compare(octant, p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n\t\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\t\tswitch (octant) {\n\t\t\tcase 0:\n\t\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\n\t\t\tcase 1:\n\t\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\n\t\t\tcase 2:\n\t\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\n\t\t\tcase 3:\n\t\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\n\t\t\tcase 4:\n\t\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\n\t\t\tcase 5:\n\t\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\n\t\t\tcase 6:\n\t\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\n\t\t\tcase 7:\n\t\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"invalid octant value\");\n\t\treturn 0;\n\t}\n\tstatic compareValue(compareSign0, compareSign1) {\n\t\tif (compareSign0 < 0) return -1;\n\t\tif (compareSign0 > 0) return 1;\n\t\tif (compareSign1 < 0) return -1;\n\t\tif (compareSign1 > 0) return 1;\n\t\treturn 0;\n\t}\n\tgetClass() {\n\t\treturn SegmentPointComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegmentPointComparator.constructor_ = function () {};\n","import Coordinate from '../geom/Coordinate';\nimport SegmentPointComparator from './SegmentPointComparator';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default class SegmentNode {\n\tconstructor() {\n\t\tSegmentNode.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinate() {\n\t\treturn this.coord;\n\t}\n\tprint(out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t}\n\tcompareTo(obj) {\n\t\tvar other = obj;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.coord.equals2D(other.coord)) return 0;\n\t\treturn SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord);\n\t}\n\tisEndPoint(maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t}\n\tisInterior() {\n\t\treturn this._isInterior;\n\t}\n\tgetClass() {\n\t\treturn SegmentNode;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nSegmentNode.constructor_ = function () {\n\tthis._segString = null;\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis._segmentOctant = null;\n\tthis._isInterior = null;\n\tlet segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3];\n\tthis._segString = segString;\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis._segmentOctant = segmentOctant;\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport SegmentNode from './SegmentNode';\nimport Iterator from '../../../../java/util/Iterator';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport Integer from '../../../../java/lang/Integer';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default class SegmentNodeList {\n\tconstructor() {\n\t\tSegmentNodeList.constructor_.apply(this, arguments);\n\t}\n\tgetSplitCoordinates() {\n\t\tvar coordList = new CoordinateList();\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\n\t\t\teiPrev = ei;\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t}\n\taddCollapsedNodes() {\n\t\tvar collapsedVertexIndexes = new ArrayList();\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n\t\t\tvar vertexIndex = it.next().intValue();\n\t\t\tthis.add(this._edge.getCoordinate(vertexIndex), vertexIndex);\n\t\t}\n\t}\n\tprint(out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t}\n\tfindCollapsesFromExistingVertices(collapsedVertexIndexes) {\n\t\tfor (var i = 0; i < this._edge.size() - 2; i++) {\n\t\t\tvar p0 = this._edge.getCoordinate(i);\n\t\t\tvar p1 = this._edge.getCoordinate(i + 1);\n\t\t\tvar p2 = this._edge.getCoordinate(i + 2);\n\t\t\tif (p0.equals2D(p2)) {\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\n\t\t\t}\n\t\t}\n\t}\n\taddEdgeCoordinates(ei0, ei1, coordList) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar ipt = 0;\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tcoordList.add(this._edge.getCoordinate(i));\n\t\t}\n\t\tif (useIntPt1) {\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\n\t\t}\n\t}\n\titerator() {\n\t\treturn this._nodeMap.values().iterator();\n\t}\n\taddSplitEdges(edgeList) {\n\t\tthis.addEndpoints();\n\t\tthis.addCollapsedNodes();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t}\n\tfindCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\t\tif (!ei1.isInterior()) {\n\t\t\tnumVerticesBetween--;\n\t\t}\n\t\tif (numVerticesBetween === 1) {\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tfindCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n\t\t\teiPrev = ei;\n\t\t}\n\t}\n\tgetEdge() {\n\t\treturn this._edge;\n\t}\n\taddEndpoints() {\n\t\tvar maxSegIndex = this._edge.size() - 1;\n\t\tthis.add(this._edge.getCoordinate(0), 0);\n\t\tthis.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n\t}\n\tcreateSplitEdge(ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this._edge.getCoordinate(i);\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n\t\treturn new NodedSegmentString(pts, this._edge.getData());\n\t}\n\tadd(intPt, segmentIndex) {\n\t\tvar eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t}\n\tcheckSplitEdgesCorrectness(splitEdges) {\n\t\tvar edgePts = this._edge.getCoordinates();\n\t\tvar split0 = splitEdges.get(0);\n\t\tvar pt0 = split0.getCoordinate(0);\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\n\t\tvar splitnPts = splitn.getCoordinates();\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n\t}\n\tgetClass() {\n\t\treturn SegmentNodeList;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegmentNodeList.constructor_ = function () {\n\tthis._nodeMap = new TreeMap();\n\tthis._edge = null;\n\tlet edge = arguments[0];\n\tthis._edge = edge;\n};\nclass NodeVertexIterator {\n\tconstructor() {\n\t\tNodeVertexIterator.constructor_.apply(this, arguments);\n\t}\n\tnext() {\n\t\tif (this._currNode === null) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode === null) return null;\n\t\tif (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n\t\treturn null;\n\t}\n\tremove() {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t}\n\thasNext() {\n\t\tif (this._nextNode === null) return false;\n\t\treturn true;\n\t}\n\treadNextNode() {\n\t\tif (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null;\n\t}\n\tgetClass() {\n\t\treturn NodeVertexIterator;\n\t}\n\tget interfaces_() {\n\t\treturn [Iterator];\n\t}\n}\nNodeVertexIterator.constructor_ = function () {\n\tthis._nodeList = null;\n\tthis._edge = null;\n\tthis._nodeIt = null;\n\tthis._currNode = null;\n\tthis._nextNode = null;\n\tthis._currSegIndex = 0;\n\tlet nodeList = arguments[0];\n\tthis._nodeList = nodeList;\n\tthis._edge = nodeList.getEdge();\n\tthis._nodeIt = nodeList.iterator();\n\tthis.readNextNode();\n};\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nexport default class Octant {\n\tconstructor() {\n\t\tOctant.constructor_.apply(this, arguments);\n\t}\n\tstatic octant() {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet dx = arguments[0], dy = arguments[1];\n\t\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\n\t\t\tvar adx = Math.abs(dx);\n\t\t\tvar ady = Math.abs(dy);\n\t\t\tif (dx >= 0) {\n\t\t\t\tif (dy >= 0) {\n\t\t\t\t\tif (adx >= ady) return 0; else return 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (adx >= ady) return 7; else return 6;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (dy >= 0) {\n\t\t\t\t\tif (adx >= ady) return 3; else return 2;\n\t\t\t\t} else {\n\t\t\t\t\tif (adx >= ady) return 4; else return 5;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tvar dx = p1.x - p0.x;\n\t\t\tvar dy = p1.y - p0.y;\n\t\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n\t\t\treturn Octant.octant(dx, dy);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Octant;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOctant.constructor_ = function () {};\n","export default class SegmentString {\n\tconstructor() {\n\t\tSegmentString.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinates() {}\n\tsize() {}\n\tgetCoordinate(i) {}\n\tisClosed() {}\n\tsetData(data) {}\n\tgetData() {}\n\tgetClass() {\n\t\treturn SegmentString;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegmentString.constructor_ = function () {};\n","import SegmentString from './SegmentString';\nexport default class NodableSegmentString {\n\tconstructor() {\n\t\tNodableSegmentString.constructor_.apply(this, arguments);\n\t}\n\taddIntersection(intPt, segmentIndex) {}\n\tgetClass() {\n\t\treturn NodableSegmentString;\n\t}\n\tget interfaces_() {\n\t\treturn [SegmentString];\n\t}\n}\nNodableSegmentString.constructor_ = function () {};\n","import SegmentNodeList from './SegmentNodeList';\nimport WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Coordinate from '../geom/Coordinate';\nimport Octant from './Octant';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport NodableSegmentString from './NodableSegmentString';\nexport default class NodedSegmentString {\n\tconstructor() {\n\t\tNodedSegmentString.constructor_.apply(this, arguments);\n\t}\n\tstatic getNodedSubstrings() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tvar resultEdgelist = new ArrayList();\n\t\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n\t\t\treturn resultEdgelist;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet segStrings = arguments[0], resultEdgelist = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tss.getNodeList().addSplitEdges(resultEdgelist);\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinates() {\n\t\treturn this._pts;\n\t}\n\tsize() {\n\t\treturn this._pts.length;\n\t}\n\tgetCoordinate(i) {\n\t\treturn this._pts[i];\n\t}\n\tisClosed() {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t}\n\tgetSegmentOctant(index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t}\n\tsetData(data) {\n\t\tthis._data = data;\n\t}\n\tsafeOctant(p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\treturn Octant.octant(p0, p1);\n\t}\n\tgetData() {\n\t\treturn this._data;\n\t}\n\taddIntersection() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet intPt = arguments[0], segmentIndex = arguments[1];\n\t\t\tthis.addIntersectionNode(intPt, segmentIndex);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3];\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\t\tthis.addIntersection(intPt, segmentIndex);\n\t\t}\n\t}\n\ttoString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t}\n\tgetNodeList() {\n\t\treturn this._nodeList;\n\t}\n\taddIntersectionNode(intPt, segmentIndex) {\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this._pts.length) {\n\t\t\tvar nextPt = this._pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t}\n\t\t}\n\t\tvar ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n\t\treturn ei;\n\t}\n\taddIntersections(li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn NodedSegmentString;\n\t}\n\tget interfaces_() {\n\t\treturn [NodableSegmentString];\n\t}\n}\nNodedSegmentString.constructor_ = function () {\n\tthis._nodeList = new SegmentNodeList(this);\n\tthis._pts = null;\n\tthis._data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n};\n","import LineSegment from '../../geom/LineSegment';\nexport default class MonotoneChainOverlapAction {\n\tconstructor() {\n\t\tMonotoneChainOverlapAction.constructor_.apply(this, arguments);\n\t}\n\toverlap() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet seg1 = arguments[0], seg2 = arguments[1];\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tmc1.getLineSegment(start1, this._overlapSeg1);\n\t\t\tmc2.getLineSegment(start2, this._overlapSeg2);\n\t\t\tthis.overlap(this._overlapSeg1, this._overlapSeg2);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MonotoneChainOverlapAction;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChainOverlapAction.constructor_ = function () {\n\tthis._overlapSeg1 = new LineSegment();\n\tthis._overlapSeg2 = new LineSegment();\n};\n","import Envelope from '../../geom/Envelope';\nexport default class MonotoneChain {\n\tconstructor() {\n\t\tMonotoneChain.constructor_.apply(this, arguments);\n\t}\n\tgetLineSegment(index, ls) {\n\t\tls.p0 = this._pts[index];\n\t\tls.p1 = this._pts[index + 1];\n\t}\n\tcomputeSelect(searchEnv, start0, end0, mcs) {\n\t\tvar p0 = this._pts[start0];\n\t\tvar p1 = this._pts[end0];\n\t\tif (end0 - start0 === 1) {\n\t\t\tmcs.select(this, start0);\n\t\t\treturn null;\n\t\t}\n\t\tif (!searchEnv.intersects(p0, p1)) return null;\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\n\t\tif (start0 < mid) {\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\n\t\t}\n\t\tif (mid < end0) {\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\n\t\t}\n\t}\n\tgetCoordinates() {\n\t\tvar coord = new Array(this._end - this._start + 1).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._start; i <= this._end; i++) {\n\t\t\tcoord[index++] = this._pts[i];\n\t\t}\n\t\treturn coord;\n\t}\n\tcomputeOverlaps() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], mco = arguments[1];\n\t\t\tthis.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mc = arguments[2], start1 = arguments[3], end1 = arguments[4], mco = arguments[5];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tmco.overlap(this, start0, mc, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!this.overlaps(start0, end0, mc, start1, end1)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco);\n\t\t\t\tif (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco);\n\t\t\t\tif (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco);\n\t\t\t}\n\t\t}\n\t}\n\tsetId(id) {\n\t\tthis._id = id;\n\t}\n\tselect(searchEnv, mcs) {\n\t\tthis.computeSelect(searchEnv, this._start, this._end, mcs);\n\t}\n\tgetEnvelope() {\n\t\tif (this._env === null) {\n\t\t\tvar p0 = this._pts[this._start];\n\t\t\tvar p1 = this._pts[this._end];\n\t\t\tthis._env = new Envelope(p0, p1);\n\t\t}\n\t\treturn this._env;\n\t}\n\toverlaps(start0, end0, mc, start1, end1) {\n\t\treturn Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1]);\n\t}\n\tgetEndIndex() {\n\t\treturn this._end;\n\t}\n\tgetStartIndex() {\n\t\treturn this._start;\n\t}\n\tgetContext() {\n\t\treturn this._context;\n\t}\n\tgetId() {\n\t\treturn this._id;\n\t}\n\tgetClass() {\n\t\treturn MonotoneChain;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChain.constructor_ = function () {\n\tthis._pts = null;\n\tthis._start = null;\n\tthis._end = null;\n\tthis._env = null;\n\tthis._context = null;\n\tthis._id = null;\n\tlet pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3];\n\tthis._pts = pts;\n\tthis._start = start;\n\tthis._end = end;\n\tthis._context = context;\n};\n","import MonotoneChain from './MonotoneChain';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../../geomgraph/Quadrant';\nexport default class MonotoneChainBuilder {\n\tconstructor() {\n\t\tMonotoneChainBuilder.constructor_.apply(this, arguments);\n\t}\n\tstatic getChainStartIndices(pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t}\n\tstatic findChainEnd(pts, start) {\n\t\tvar safeStart = start;\n\t\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n\t\t\tsafeStart++;\n\t\t}\n\t\tif (safeStart >= pts.length - 1) {\n\t\t\treturn pts.length - 1;\n\t\t}\n\t\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tif (!pts[last - 1].equals2D(pts[last])) {\n\t\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\t\tif (quad !== chainQuad) break;\n\t\t\t}\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t}\n\tstatic getChains() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pts = arguments[0];\n\t\t\treturn MonotoneChainBuilder.getChains(pts, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet pts = arguments[0], context = arguments[1];\n\t\t\tvar mcList = new ArrayList();\n\t\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\n\t\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\t\tvar mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context);\n\t\t\t\tmcList.add(mc);\n\t\t\t}\n\t\t\treturn mcList;\n\t\t}\n\t}\n\tstatic toIntArray(list) {\n\t\tvar array = new Array(list.size()).fill(null);\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = list.get(i).intValue();\n\t\t}\n\t\treturn array;\n\t}\n\tgetClass() {\n\t\treturn MonotoneChainBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChainBuilder.constructor_ = function () {};\n","export default class Noder {\n\tconstructor() {\n\t\tNoder.constructor_.apply(this, arguments);\n\t}\n\tcomputeNodes(segStrings) {}\n\tgetNodedSubstrings() {}\n\tgetClass() {\n\t\treturn Noder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNoder.constructor_ = function () {};\n","import Noder from './Noder';\nexport default class SinglePassNoder {\n\tconstructor() {\n\t\tSinglePassNoder.constructor_.apply(this, arguments);\n\t}\n\tsetSegmentIntersector(segInt) {\n\t\tthis._segInt = segInt;\n\t}\n\tgetClass() {\n\t\treturn SinglePassNoder;\n\t}\n\tget interfaces_() {\n\t\treturn [Noder];\n\t}\n}\nSinglePassNoder.constructor_ = function () {\n\tthis._segInt = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet segInt = arguments[0];\n\t\tthis.setSegmentIntersector(segInt);\n\t}\n};\n","import STRtree from '../index/strtree/STRtree';\nimport NodedSegmentString from './NodedSegmentString';\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport SinglePassNoder from './SinglePassNoder';\nexport default class MCIndexNoder extends SinglePassNoder {\n\tconstructor() {\n\t\tsuper();\n\t\tMCIndexNoder.constructor_.apply(this, arguments);\n\t}\n\tgetMonotoneChains() {\n\t\treturn this._monoChains;\n\t}\n\tgetNodedSubstrings() {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t}\n\tgetIndex() {\n\t\treturn this._index;\n\t}\n\tadd(segStr) {\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\t\tfor (var i = segChains.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tmc.setId(this._idCounter++);\n\t\t\tthis._index.insert(mc.getEnvelope(), mc);\n\t\t\tthis._monoChains.add(mc);\n\t\t}\n\t}\n\tcomputeNodes(inputSegStrings) {\n\t\tthis._nodedSegStrings = inputSegStrings;\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t\tthis.intersectChains();\n\t}\n\tintersectChains() {\n\t\tvar overlapAction = new SegmentOverlapAction(this._segInt);\n\t\tfor (var i = this._monoChains.iterator(); i.hasNext(); ) {\n\t\t\tvar queryChain = i.next();\n\t\t\tvar overlapChains = this._index.query(queryChain.getEnvelope());\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext(); ) {\n\t\t\t\tvar testChain = j.next();\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\n\t\t\t\t\tthis._nOverlaps++;\n\t\t\t\t}\n\t\t\t\tif (this._segInt.isDone()) return null;\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MCIndexNoder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass SegmentOverlapAction extends MonotoneChainOverlapAction {\n\tconstructor() {\n\t\tsuper();\n\t\tSegmentOverlapAction.constructor_.apply(this, arguments);\n\t}\n\toverlap() {\n\t\tif (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tvar ss1 = mc1.getContext();\n\t\t\tvar ss2 = mc2.getContext();\n\t\t\tthis._si.processIntersections(ss1, start1, ss2, start2);\n\t\t} else return super.overlap.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn SegmentOverlapAction;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegmentOverlapAction.constructor_ = function () {\n\tthis._si = null;\n\tlet si = arguments[0];\n\tthis._si = si;\n};\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\nMCIndexNoder.constructor_ = function () {\n\tthis._monoChains = new ArrayList();\n\tthis._index = new STRtree();\n\tthis._idCounter = 0;\n\tthis._nodedSegStrings = null;\n\tthis._nOverlaps = 0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet si = arguments[0];\n\t\tSinglePassNoder.constructor_.call(this, si);\n\t}\n};\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Noder from './Noder';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport System from '../../../../java/lang/System';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class ScaledNoder {\n\tconstructor() {\n\t\tScaledNoder.constructor_.apply(this, arguments);\n\t}\n\trescale() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.rescale(ss.getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar p0 = null;\n\t\t\tvar p1 = null;\n\t\t\tif (pts.length === 2) {\n\t\t\t\tp0 = new Coordinate(pts[0]);\n\t\t\t\tp1 = new Coordinate(pts[1]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tpts[i].x = pts[i].x / this._scaleFactor + this._offsetX;\n\t\t\t\tpts[i].y = pts[i].y / this._scaleFactor + this._offsetY;\n\t\t\t}\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\n\t\t\t\tSystem.out.println(pts);\n\t\t\t}\n\t\t}\n\t}\n\tscale() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tvar nodedSegmentStrings = new ArrayList(segStrings.size());\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n\t\t\t}\n\t\t\treturn nodedSegmentStrings;\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].z);\n\t\t\t}\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n\t\t\treturn roundPtsNoDup;\n\t\t}\n\t}\n\tisIntegerPrecision() {\n\t\treturn this._scaleFactor === 1.0;\n\t}\n\tgetNodedSubstrings() {\n\t\tvar splitSS = this._noder.getNodedSubstrings();\n\t\tif (this._isScaled) this.rescale(splitSS);\n\t\treturn splitSS;\n\t}\n\tcomputeNodes(inputSegStrings) {\n\t\tvar intSegStrings = inputSegStrings;\n\t\tif (this._isScaled) intSegStrings = this.scale(inputSegStrings);\n\t\tthis._noder.computeNodes(intSegStrings);\n\t}\n\tgetClass() {\n\t\treturn ScaledNoder;\n\t}\n\tget interfaces_() {\n\t\treturn [Noder];\n\t}\n}\nScaledNoder.constructor_ = function () {\n\tthis._noder = null;\n\tthis._scaleFactor = null;\n\tthis._offsetX = null;\n\tthis._offsetY = null;\n\tthis._isScaled = false;\n\tif (arguments.length === 2) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1];\n\t\tScaledNoder.constructor_.call(this, noder, scaleFactor, 0, 0);\n\t} else if (arguments.length === 4) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3];\n\t\tthis._noder = noder;\n\t\tthis._scaleFactor = scaleFactor;\n\t\tthis._isScaled = !this.isIntegerPrecision();\n\t}\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport LineString from '../geom/LineString';\nimport hasInterface from '../../../../hasInterface';\nimport MultiPoint from '../geom/MultiPoint';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport Polygonal from '../geom/Polygonal';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default class IsSimpleOp {\n\tconstructor() {\n\t\tIsSimpleOp.constructor_.apply(this, arguments);\n\t}\n\tstatic isSimple() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geom = arguments[0];\n\t\t\tvar op = new IsSimpleOp(geom);\n\t\t\treturn op.isSimple();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\t\tvar op = new IsSimpleOp(geom, boundaryNodeRule);\n\t\t\treturn op.isSimple();\n\t\t}\n\t}\n\tisSimpleMultiPoint(mp) {\n\t\tif (mp.isEmpty()) return true;\n\t\tvar points = new TreeSet();\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar pt = mp.getGeometryN(i);\n\t\t\tvar p = pt.getCoordinate();\n\t\t\tif (points.contains(p)) {\n\t\t\t\tthis._nonSimpleLocation = p;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tpoints.add(p);\n\t\t}\n\t\treturn true;\n\t}\n\tisSimplePolygonal(geom) {\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = rings.iterator(); i.hasNext(); ) {\n\t\t\tvar ring = i.next();\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\thasClosedEndpointIntersection(graph) {\n\t\tvar endPoints = new TreeMap();\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tvar isClosed = e.isClosed();\n\t\t\tvar p0 = e.getCoordinate(0);\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\n\t\t}\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext(); ) {\n\t\t\tvar eiInfo = i.next();\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\n\t\t\t\tthis._nonSimpleLocation = eiInfo.getCoordinate();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetNonSimpleLocation() {\n\t\treturn this._nonSimpleLocation;\n\t}\n\tisSimpleLinearGeometry(geom) {\n\t\tif (geom.isEmpty()) return true;\n\t\tvar graph = new GeometryGraph(0, geom);\n\t\tvar li = new RobustLineIntersector();\n\t\tvar si = graph.computeSelfNodes(li, true);\n\t\tif (!si.hasIntersection()) return true;\n\t\tif (si.hasProperIntersection()) {\n\t\t\tthis._nonSimpleLocation = si.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\n\t\tif (this._isClosedEndpointsInInterior) {\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\thasNonEndpointIntersection(graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\n\t\t\t\t\tthis._nonSimpleLocation = ei.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\taddEndpoint(endPoints, p, isClosed) {\n\t\tvar eiInfo = endPoints.get(p);\n\t\tif (eiInfo === null) {\n\t\t\teiInfo = new EndpointInfo(p);\n\t\t\tendPoints.put(p, eiInfo);\n\t\t}\n\t\teiInfo.addEndpoint(isClosed);\n\t}\n\tcomputeSimple(geom) {\n\t\tthis._nonSimpleLocation = null;\n\t\tif (geom.isEmpty()) return true;\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n\t\treturn true;\n\t}\n\tisSimple() {\n\t\tthis._nonSimpleLocation = null;\n\t\treturn this.computeSimple(this._inputGeom);\n\t}\n\tisSimpleGeometryCollection(geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.computeSimple(comp)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn IsSimpleOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass EndpointInfo {\n\tconstructor() {\n\t\tEndpointInfo.constructor_.apply(this, arguments);\n\t}\n\taddEndpoint(isClosed) {\n\t\tthis.degree++;\n\t\tthis.isClosed |= isClosed;\n\t}\n\tgetCoordinate() {\n\t\treturn this.pt;\n\t}\n\tgetClass() {\n\t\treturn EndpointInfo;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEndpointInfo.constructor_ = function () {\n\tthis.pt = null;\n\tthis.isClosed = null;\n\tthis.degree = null;\n\tlet pt = arguments[0];\n\tthis.pt = pt;\n\tthis.isClosed = false;\n\tthis.degree = 0;\n};\nIsSimpleOp.EndpointInfo = EndpointInfo;\nIsSimpleOp.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._isClosedEndpointsInInterior = true;\n\tthis._nonSimpleLocation = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tthis._inputGeom = geom;\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\tthis._inputGeom = geom;\n\t\tthis._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n\t}\n};\n","export default class BufferParameters {\n\tconstructor() {\n\t\tBufferParameters.constructor_.apply(this, arguments);\n\t}\n\tstatic bufferDistanceError(quadSegs) {\n\t\tvar alpha = Math.PI / 2.0 / quadSegs;\n\t\treturn 1 - Math.cos(alpha / 2.0);\n\t}\n\tgetEndCapStyle() {\n\t\treturn this._endCapStyle;\n\t}\n\tisSingleSided() {\n\t\treturn this._isSingleSided;\n\t}\n\tsetQuadrantSegments(quadSegs) {\n\t\tthis._quadrantSegments = quadSegs;\n\t\tif (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL;\n\t\tif (this._quadrantSegments < 0) {\n\t\t\tthis._joinStyle = BufferParameters.JOIN_MITRE;\n\t\t\tthis._mitreLimit = Math.abs(this._quadrantSegments);\n\t\t}\n\t\tif (quadSegs <= 0) {\n\t\t\tthis._quadrantSegments = 1;\n\t\t}\n\t\tif (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n\t\t\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\t\t}\n\t}\n\tgetJoinStyle() {\n\t\treturn this._joinStyle;\n\t}\n\tsetJoinStyle(joinStyle) {\n\t\tthis._joinStyle = joinStyle;\n\t}\n\tsetSimplifyFactor(simplifyFactor) {\n\t\tthis._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n\t}\n\tgetSimplifyFactor() {\n\t\treturn this._simplifyFactor;\n\t}\n\tgetQuadrantSegments() {\n\t\treturn this._quadrantSegments;\n\t}\n\tsetEndCapStyle(endCapStyle) {\n\t\tthis._endCapStyle = endCapStyle;\n\t}\n\tgetMitreLimit() {\n\t\treturn this._mitreLimit;\n\t}\n\tsetMitreLimit(mitreLimit) {\n\t\tthis._mitreLimit = mitreLimit;\n\t}\n\tsetSingleSided(isSingleSided) {\n\t\tthis._isSingleSided = isSingleSided;\n\t}\n\tgetClass() {\n\t\treturn BufferParameters;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nBufferParameters.constructor_ = function () {\n\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\tthis._endCapStyle = BufferParameters.CAP_ROUND;\n\tthis._joinStyle = BufferParameters.JOIN_ROUND;\n\tthis._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n\tthis._isSingleSided = false;\n\tthis._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet quadrantSegments = arguments[0];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t} else if (arguments.length === 2) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t} else if (arguments.length === 4) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t\tthis.setJoinStyle(joinStyle);\n\t\tthis.setMitreLimit(mitreLimit);\n\t}\n};\nBufferParameters.CAP_ROUND = 1;\nBufferParameters.CAP_FLAT = 2;\nBufferParameters.CAP_SQUARE = 3;\nBufferParameters.JOIN_ROUND = 1;\nBufferParameters.JOIN_MITRE = 2;\nBufferParameters.JOIN_BEVEL = 3;\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n","import Position from '../../geomgraph/Position';\nimport Orientation from '../../algorithm/Orientation';\nimport Assert from '../../util/Assert';\nexport default class RightmostEdgeFinder {\n\tconstructor() {\n\t\tRightmostEdgeFinder.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinate() {\n\t\treturn this._minCoord;\n\t}\n\tgetRightmostSide(de, index) {\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\t\tif (side < 0) {\n\t\t\tthis._minCoord = null;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\treturn side;\n\t}\n\tfindRightmostEdgeAtVertex() {\n\t\tvar pts = this._minDe.getEdge().getCoordinates();\n\t\tAssert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n\t\tvar pPrev = pts[this._minIndex - 1];\n\t\tvar pNext = pts[this._minIndex + 1];\n\t\tvar orientation = Orientation.index(this._minCoord, pNext, pPrev);\n\t\tvar usePrev = false;\n\t\tif (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t} else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t}\n\t\tif (usePrev) {\n\t\t\tthis._minIndex = this._minIndex - 1;\n\t\t}\n\t}\n\tgetRightmostSideOfSegment(de, i) {\n\t\tvar e = de.getEdge();\n\t\tvar coord = e.getCoordinates();\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\n\t\tvar pos = Position.LEFT;\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n\t\treturn pos;\n\t}\n\tgetEdge() {\n\t\treturn this._orientedDe;\n\t}\n\tcheckForRightmostCoordinate(de) {\n\t\tvar coord = de.getEdge().getCoordinates();\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\n\t\t\tif (this._minCoord === null || coord[i].x > this._minCoord.x) {\n\t\t\t\tthis._minDe = de;\n\t\t\t\tthis._minIndex = i;\n\t\t\t\tthis._minCoord = coord[i];\n\t\t\t}\n\t\t}\n\t}\n\tfindRightmostEdgeAtNode() {\n\t\tvar node = this._minDe.getNode();\n\t\tvar star = node.getEdges();\n\t\tthis._minDe = star.getRightmostEdge();\n\t\tif (!this._minDe.isForward()) {\n\t\t\tthis._minDe = this._minDe.getSym();\n\t\t\tthis._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n\t\t}\n\t}\n\tfindEdge(dirEdgeList) {\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isForward()) continue;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\tAssert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\t\tif (this._minIndex === 0) {\n\t\t\tthis.findRightmostEdgeAtNode();\n\t\t} else {\n\t\t\tthis.findRightmostEdgeAtVertex();\n\t\t}\n\t\tthis._orientedDe = this._minDe;\n\t\tvar rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n\t\tif (rightmostSide === Position.LEFT) {\n\t\t\tthis._orientedDe = this._minDe.getSym();\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn RightmostEdgeFinder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRightmostEdgeFinder.constructor_ = function () {\n\tthis._minIndex = -1;\n\tthis._minCoord = null;\n\tthis._minDe = null;\n\tthis._orientedDe = null;\n};\n","export default function LinkedList () {\n  this.array_ = []\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e)\n}\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift()\n}\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n","import HashSet from '../../../../../java/util/HashSet';\nimport Position from '../../geomgraph/Position';\nimport Stack from '../../../../../java/util/Stack';\nimport RightmostEdgeFinder from './RightmostEdgeFinder';\nimport TopologyException from '../../geom/TopologyException';\nimport LinkedList from '../../../../../java/util/LinkedList';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default class BufferSubgraph {\n\tconstructor() {\n\t\tBufferSubgraph.constructor_.apply(this, arguments);\n\t}\n\tclearVisitedEdges() {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tde.setVisited(false);\n\t\t}\n\t}\n\tgetRightmostCoordinate() {\n\t\treturn this._rightMostCoord;\n\t}\n\tcomputeNodeDepth(n) {\n\t\tvar startEdge = null;\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\n\t\t\t\tstartEdge = de;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n\t\tn.getEdges().computeDepths(startEdge);\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tde.setVisited(true);\n\t\t\tthis.copySymDepths(de);\n\t\t}\n\t}\n\tcomputeDepth(outsideDepth) {\n\t\tthis.clearVisitedEdges();\n\t\tvar de = this._finder.getEdge();\n\t\tvar n = de.getNode();\n\t\tvar label = de.getLabel();\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\n\t\tthis.copySymDepths(de);\n\t\tthis.computeDepths(de);\n\t}\n\tcreate(node) {\n\t\tthis.addReachable(node);\n\t\tthis._finder.findEdge(this._dirEdgeList);\n\t\tthis._rightMostCoord = this._finder.getCoordinate();\n\t}\n\tfindResultEdges() {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t}\n\tcomputeDepths(startEdge) {\n\t\tvar nodesVisited = new HashSet();\n\t\tvar nodeQueue = new LinkedList();\n\t\tvar startNode = startEdge.getNode();\n\t\tnodeQueue.addLast(startNode);\n\t\tnodesVisited.add(startNode);\n\t\tstartEdge.setVisited(true);\n\t\twhile (!nodeQueue.isEmpty()) {\n\t\t\tvar n = nodeQueue.removeFirst();\n\t\t\tnodesVisited.add(n);\n\t\t\tthis.computeNodeDepth(n);\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym.isVisited()) continue;\n\t\t\t\tvar adjNode = sym.getNode();\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\n\t\t\t\t\tnodeQueue.addLast(adjNode);\n\t\t\t\t\tnodesVisited.add(adjNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcompareTo(o) {\n\t\tvar graph = o;\n\t\tif (this._rightMostCoord.x < graph._rightMostCoord.x) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this._rightMostCoord.x > graph._rightMostCoord.x) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tgetEnvelope() {\n\t\tif (this._env === null) {\n\t\t\tvar edgeEnv = new Envelope();\n\t\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\t\tvar dirEdge = it.next();\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._env = edgeEnv;\n\t\t}\n\t\treturn this._env;\n\t}\n\taddReachable(startNode) {\n\t\tvar nodeStack = new Stack();\n\t\tnodeStack.add(startNode);\n\t\twhile (!nodeStack.empty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tthis.add(node, nodeStack);\n\t\t}\n\t}\n\tcopySymDepths(de) {\n\t\tvar sym = de.getSym();\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n\t}\n\tadd(node, nodeStack) {\n\t\tnode.setVisited(true);\n\t\tthis._nodes.add(node);\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tthis._dirEdgeList.add(de);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar symNode = sym.getNode();\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\n\t\t}\n\t}\n\tgetNodes() {\n\t\treturn this._nodes;\n\t}\n\tgetDirectedEdges() {\n\t\treturn this._dirEdgeList;\n\t}\n\tgetClass() {\n\t\treturn BufferSubgraph;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nBufferSubgraph.constructor_ = function () {\n\tthis._finder = null;\n\tthis._dirEdgeList = new ArrayList();\n\tthis._nodes = new ArrayList();\n\tthis._rightMostCoord = null;\n\tthis._env = null;\n\tthis._finder = new RightmostEdgeFinder();\n};\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport PointLocation from '../algorithm/PointLocation';\nimport TopologyException from '../geom/TopologyException';\nimport Orientation from '../algorithm/Orientation';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nexport default class EdgeRing {\n\tconstructor() {\n\t\tEdgeRing.constructor_.apply(this, arguments);\n\t}\n\tcomputeRing() {\n\t\tif (this._ring !== null) return null;\n\t\tvar coord = new Array(this._pts.size()).fill(null);\n\t\tfor (var i = 0; i < this._pts.size(); i++) {\n\t\t\tcoord[i] = this._pts.get(i);\n\t\t}\n\t\tthis._ring = this._geometryFactory.createLinearRing(coord);\n\t\tthis._isHole = Orientation.isCCW(this._ring.getCoordinates());\n\t}\n\tisIsolated() {\n\t\treturn this._label.getGeometryCount() === 1;\n\t}\n\tcomputePoints(start) {\n\t\tthis._startDe = start;\n\t\tvar de = start;\n\t\tvar isFirstEdge = true;\n\t\tdo {\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\t\t\tthis._edges.add(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tAssert.isTrue(label.isArea());\n\t\t\tthis.mergeLabel(label);\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n\t\t\tisFirstEdge = false;\n\t\t\tthis.setEdgeRing(de, this);\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t}\n\tgetLinearRing() {\n\t\treturn this._ring;\n\t}\n\tgetCoordinate(i) {\n\t\treturn this._pts.get(i);\n\t}\n\tcomputeMaxNodeDegree() {\n\t\tthis._maxNodeDegree = 0;\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\n\t\t\tif (degree > this._maxNodeDegree) this._maxNodeDegree = degree;\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t\tthis._maxNodeDegree *= 2;\n\t}\n\taddPoints(edge, isForward, isFirstEdge) {\n\t\tvar edgePts = edge.getCoordinates();\n\t\tif (isForward) {\n\t\t\tvar startIndex = 1;\n\t\t\tif (isFirstEdge) startIndex = 0;\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tvar startIndex = edgePts.length - 2;\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t}\n\t}\n\tisHole() {\n\t\treturn this._isHole;\n\t}\n\tsetInResult() {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tde.getEdge().setInResult(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t}\n\tcontainsPoint(p) {\n\t\tvar shell = this.getLinearRing();\n\t\tvar env = shell.getEnvelopeInternal();\n\t\tif (!env.contains(p)) return false;\n\t\tif (!PointLocation.isInRing(p, shell.getCoordinates())) return false;\n\t\tfor (var i = this._holes.iterator(); i.hasNext(); ) {\n\t\t\tvar hole = i.next();\n\t\t\tif (hole.containsPoint(p)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\taddHole(ring) {\n\t\tthis._holes.add(ring);\n\t}\n\tisShell() {\n\t\treturn this._shell === null;\n\t}\n\tgetLabel() {\n\t\treturn this._label;\n\t}\n\tgetEdges() {\n\t\treturn this._edges;\n\t}\n\tgetMaxNodeDegree() {\n\t\tif (this._maxNodeDegree < 0) this.computeMaxNodeDegree();\n\t\treturn this._maxNodeDegree;\n\t}\n\tgetShell() {\n\t\treturn this._shell;\n\t}\n\tmergeLabel() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet deLabel = arguments[0];\n\t\t\tthis.mergeLabel(deLabel, 0);\n\t\t\tthis.mergeLabel(deLabel, 1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deLabel = arguments[0], geomIndex = arguments[1];\n\t\t\tvar loc = deLabel.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (loc === Location.NONE) return null;\n\t\t\tif (this._label.getLocation(geomIndex) === Location.NONE) {\n\t\t\t\tthis._label.setLocation(geomIndex, loc);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tsetShell(shell) {\n\t\tthis._shell = shell;\n\t\tif (shell !== null) shell.addHole(this);\n\t}\n\ttoPolygon(geometryFactory) {\n\t\tvar holeLR = new Array(this._holes.size()).fill(null);\n\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\tholeLR[i] = this._holes.get(i).getLinearRing();\n\t\t}\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n\t\treturn poly;\n\t}\n\tgetClass() {\n\t\treturn EdgeRing;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeRing.constructor_ = function () {\n\tthis._startDe = null;\n\tthis._maxNodeDegree = -1;\n\tthis._edges = new ArrayList();\n\tthis._pts = new ArrayList();\n\tthis._label = new Label(Location.NONE);\n\tthis._ring = null;\n\tthis._isHole = null;\n\tthis._shell = null;\n\tthis._holes = new ArrayList();\n\tthis._geometryFactory = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet start = arguments[0], geometryFactory = arguments[1];\n\t\tthis._geometryFactory = geometryFactory;\n\t\tthis.computePoints(start);\n\t\tthis.computeRing();\n\t}\n};\n","import EdgeRing from '../../geomgraph/EdgeRing';\nexport default class MinimalEdgeRing extends EdgeRing {\n\tconstructor() {\n\t\tsuper();\n\t\tMinimalEdgeRing.constructor_.apply(this, arguments);\n\t}\n\tsetEdgeRing(de, er) {\n\t\tde.setMinEdgeRing(er);\n\t}\n\tgetNext(de) {\n\t\treturn de.getNextMin();\n\t}\n\tgetClass() {\n\t\treturn MinimalEdgeRing;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMinimalEdgeRing.constructor_ = function () {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.constructor_.call(this, start, geometryFactory);\n};\n","import MinimalEdgeRing from './MinimalEdgeRing';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class MaximalEdgeRing extends EdgeRing {\n\tconstructor() {\n\t\tsuper();\n\t\tMaximalEdgeRing.constructor_.apply(this, arguments);\n\t}\n\tbuildMinimalRings() {\n\t\tvar minEdgeRings = new ArrayList();\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tif (de.getMinEdgeRing() === null) {\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this._geometryFactory);\n\t\t\t\tminEdgeRings.add(minEr);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t\treturn minEdgeRings;\n\t}\n\tsetEdgeRing(de, er) {\n\t\tde.setEdgeRing(er);\n\t}\n\tlinkDirectedEdgesForMinimalEdgeRings() {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t}\n\tgetNext(de) {\n\t\treturn de.getNext();\n\t}\n\tgetClass() {\n\t\treturn MaximalEdgeRing;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMaximalEdgeRing.constructor_ = function () {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.constructor_.call(this, start, geometryFactory);\n};\n","import PointLocation from '../../algorithm/PointLocation';\nimport TopologyException from '../../geom/TopologyException';\nimport MaximalEdgeRing from './MaximalEdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default class PolygonBuilder {\n\tconstructor() {\n\t\tPolygonBuilder.constructor_.apply(this, arguments);\n\t}\n\tsortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n\t\tfor (var it = edgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\tfreeHoleList.add(er);\n\t\t\t} else {\n\t\t\t\tshellList.add(er);\n\t\t\t}\n\t\t}\n\t}\n\tcomputePolygons(shellList) {\n\t\tvar resultPolyList = new ArrayList();\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tvar poly = er.toPolygon(this._geometryFactory);\n\t\t\tresultPolyList.add(poly);\n\t\t}\n\t\treturn resultPolyList;\n\t}\n\tplaceFreeHoles(shellList, freeHoleList) {\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext(); ) {\n\t\t\tvar hole = it.next();\n\t\t\tif (hole.getShell() === null) {\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n\t\t\t\thole.setShell(shell);\n\t\t\t}\n\t\t}\n\t}\n\tbuildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.getMaxNodeDegree() > 2) {\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\n\t\t\t\tif (shell !== null) {\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\n\t\t\t\t\tshellList.add(shell);\n\t\t\t\t} else {\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tedgeRings.add(er);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t}\n\tcontainsPoint(p) {\n\t\tfor (var it = this._shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.containsPoint(p)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tbuildMaximalEdgeRings(dirEdges) {\n\t\tvar maxEdgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\n\t\t\t\tif (de.getEdgeRing() === null) {\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\t\tmaxEdgeRings.add(er);\n\t\t\t\t\ter.setInResult();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxEdgeRings;\n\t}\n\tplacePolygonHoles(shell, minEdgeRings) {\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\ter.setShell(shell);\n\t\t\t}\n\t\t}\n\t}\n\tgetPolygons() {\n\t\tvar resultPolyList = this.computePolygons(this._shellList);\n\t\treturn resultPolyList;\n\t}\n\tfindEdgeRingContaining(testEr, shellList) {\n\t\tvar testRing = testEr.getLinearRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryRing = tryShell.getLinearRing();\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n\t\t\tvar isContained = false;\n\t\t\tif (tryEnv.contains(testEnv) && PointLocation.isInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t}\n\tfindShell(minEdgeRings) {\n\t\tvar shellCount = 0;\n\t\tvar shell = null;\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (!er.isHole()) {\n\t\t\t\tshell = er;\n\t\t\t\tshellCount++;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n\t\treturn shell;\n\t}\n\tadd() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet graph = arguments[0];\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet dirEdges = arguments[0], nodes = arguments[1];\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n\t\t\tvar freeHoleList = new ArrayList();\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n\t\t\tthis.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n\t\t\tthis.placeFreeHoles(this._shellList, freeHoleList);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn PolygonBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPolygonBuilder.constructor_ = function () {\n\tthis._geometryFactory = null;\n\tthis._shellList = new ArrayList();\n\tlet geometryFactory = arguments[0];\n\tthis._geometryFactory = geometryFactory;\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport Orientation from '../../algorithm/Orientation';\nimport Distance from '../../algorithm/Distance';\nexport default class BufferInputLineSimplifier {\n\tconstructor() {\n\t\tBufferInputLineSimplifier.constructor_.apply(this, arguments);\n\t}\n\tstatic simplify(inputLine, distanceTol) {\n\t\tvar simp = new BufferInputLineSimplifier(inputLine);\n\t\treturn simp.simplify(distanceTol);\n\t}\n\tisDeletable(i0, i1, i2, distanceTol) {\n\t\tvar p0 = this._inputLine[i0];\n\t\tvar p1 = this._inputLine[i1];\n\t\tvar p2 = this._inputLine[i2];\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n\t}\n\tdeleteShallowConcavities() {\n\t\tvar index = 1;\n\t\tvar maxIndex = this._inputLine.length - 1;\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\tvar isChanged = false;\n\t\twhile (lastIndex < this._inputLine.length) {\n\t\t\tvar isMiddleVertexDeleted = false;\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n\t\t\t\tthis._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n\t\t\t\tisMiddleVertexDeleted = true;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex; else index = midIndex;\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\t}\n\t\treturn isChanged;\n\t}\n\tisShallowConcavity(p0, p1, p2, distanceTol) {\n\t\tvar orientation = Orientation.index(p0, p1, p2);\n\t\tvar isAngleToSimplify = orientation === this._angleOrientation;\n\t\tif (!isAngleToSimplify) return false;\n\t\tvar dist = Distance.pointToSegment(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t}\n\tisShallowSampled(p0, p2, i0, i2, distanceTol) {\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n\t\tif (inc <= 0) inc = 1;\n\t\tfor (var i = i0; i < i2; i += inc) {\n\t\t\tif (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tisConcave(p0, p1, p2) {\n\t\tvar orientation = Orientation.index(p0, p1, p2);\n\t\tvar isConcave = orientation === this._angleOrientation;\n\t\treturn isConcave;\n\t}\n\tsimplify(distanceTol) {\n\t\tthis._distanceTol = Math.abs(distanceTol);\n\t\tif (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE;\n\t\tthis._isDeleted = new Array(this._inputLine.length).fill(null);\n\t\tvar isChanged = false;\n\t\tdo {\n\t\t\tisChanged = this.deleteShallowConcavities();\n\t\t} while (isChanged);\n\t\treturn this.collapseLine();\n\t}\n\tfindNextNonDeletedIndex(index) {\n\t\tvar next = index + 1;\n\t\twhile (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++;\n\t\treturn next;\n\t}\n\tisShallow(p0, p1, p2, distanceTol) {\n\t\tvar dist = Distance.pointToSegment(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t}\n\tcollapseLine() {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._inputLine.length; i++) {\n\t\t\tif (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i]);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t}\n\tgetClass() {\n\t\treturn BufferInputLineSimplifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nBufferInputLineSimplifier.constructor_ = function () {\n\tthis._inputLine = null;\n\tthis._distanceTol = null;\n\tthis._isDeleted = null;\n\tthis._angleOrientation = Orientation.COUNTERCLOCKWISE;\n\tlet inputLine = arguments[0];\n\tthis._inputLine = inputLine;\n};\nBufferInputLineSimplifier.INIT = 0;\nBufferInputLineSimplifier.DELETE = 1;\nBufferInputLineSimplifier.KEEP = 1;\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n","import GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class OffsetSegmentString {\n\tconstructor() {\n\t\tOffsetSegmentString.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinates() {\n\t\tvar coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\t\treturn coord;\n\t}\n\tsetPrecisionModel(precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t}\n\taddPt(pt) {\n\t\tvar bufPt = new Coordinate(pt);\n\t\tthis._precisionModel.makePrecise(bufPt);\n\t\tif (this.isRedundant(bufPt)) return null;\n\t\tthis._ptList.add(bufPt);\n\t}\n\treverse() {}\n\taddPts(pt, isForward) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t}\n\t}\n\tisRedundant(pt) {\n\t\tif (this._ptList.size() < 1) return false;\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar ptDist = pt.distance(lastPt);\n\t\tif (ptDist < this._minimimVertexDistance) return true;\n\t\treturn false;\n\t}\n\ttoString() {\n\t\tvar fact = new GeometryFactory();\n\t\tvar line = fact.createLineString(this.getCoordinates());\n\t\treturn line.toString();\n\t}\n\tcloseRing() {\n\t\tif (this._ptList.size() < 1) return null;\n\t\tvar startPt = new Coordinate(this._ptList.get(0));\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar last2Pt = null;\n\t\tif (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2);\n\t\tif (startPt.equals(lastPt)) return null;\n\t\tthis._ptList.add(startPt);\n\t}\n\tsetMinimumVertexDistance(minimimVertexDistance) {\n\t\tthis._minimimVertexDistance = minimimVertexDistance;\n\t}\n\tgetClass() {\n\t\treturn OffsetSegmentString;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOffsetSegmentString.constructor_ = function () {\n\tthis._ptList = null;\n\tthis._precisionModel = null;\n\tthis._minimimVertexDistance = 0.0;\n\tthis._ptList = new ArrayList();\n};\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n","import BufferParameters from './BufferParameters';\nimport NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport Orientation from '../../algorithm/Orientation';\nimport OffsetSegmentString from './OffsetSegmentString';\nimport LineSegment from '../../geom/LineSegment';\nimport Angle from '../../algorithm/Angle';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default class OffsetSegmentGenerator {\n\tconstructor() {\n\t\tOffsetSegmentGenerator.constructor_.apply(this, arguments);\n\t}\n\taddNextSegment(p, addStartPoint) {\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._s2 = p;\n\t\tthis._seg0.setCoordinates(this._s0, this._s1);\n\t\tthis.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n\t\tthis._seg1.setCoordinates(this._s1, this._s2);\n\t\tthis.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n\t\tif (this._s1.equals(this._s2)) return null;\n\t\tvar orientation = Orientation.index(this._s0, this._s1, this._s2);\n\t\tvar outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT;\n\t\tif (orientation === 0) {\n\t\t\tthis.addCollinear(addStartPoint);\n\t\t} else if (outsideTurn) {\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\n\t\t} else {\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\n\t\t}\n\t}\n\taddLineEndCap(p0, p1) {\n\t\tvar seg = new LineSegment(p0, p1);\n\t\tvar offsetL = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n\t\tvar offsetR = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tvar angle = Math.atan2(dy, dx);\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_FLAT:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\t\t\t\tthis._segList.addPt(squareCapLOffset);\n\t\t\t\tthis._segList.addPt(squareCapROffset);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tgetCoordinates() {\n\t\tvar pts = this._segList.getCoordinates();\n\t\treturn pts;\n\t}\n\taddMitreJoin(p, offset0, offset1, distance) {\n\t\tvar isMitreWithinLimit = true;\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n\t\t\tif (mitreRatio > this._bufParams.getMitreLimit()) isMitreWithinLimit = false;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {\n\t\t\t\tintPt = new Coordinate(0, 0);\n\t\t\t\tisMitreWithinLimit = false;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (isMitreWithinLimit) {\n\t\t\tthis._segList.addPt(intPt);\n\t\t} else {\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n\t\t}\n\t}\n\taddOutsideTurn(orientation, addStartPoint) {\n\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\tthis.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n\t\t} else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n\t\t\tthis.addBevelJoin(this._offset0, this._offset1);\n\t\t} else {\n\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\tthis.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t}\n\t}\n\tcreateSquare(p) {\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n\t\tthis._segList.closeRing();\n\t}\n\taddSegments(pt, isForward) {\n\t\tthis._segList.addPts(pt, isForward);\n\t}\n\taddFirstSegment() {\n\t\tthis._segList.addPt(this._offset1.p0);\n\t}\n\taddCornerFillet(p, p0, p1, direction, radius) {\n\t\tvar dx0 = p0.x - p.x;\n\t\tvar dy0 = p0.y - p.y;\n\t\tvar startAngle = Math.atan2(dy0, dx0);\n\t\tvar dx1 = p1.x - p.x;\n\t\tvar dy1 = p1.y - p.y;\n\t\tvar endAngle = Math.atan2(dy1, dx1);\n\t\tif (direction === Orientation.CLOCKWISE) {\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n\t\t} else {\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n\t\t}\n\t\tthis._segList.addPt(p0);\n\t\tthis.addDirectedFillet(p, startAngle, endAngle, direction, radius);\n\t\tthis._segList.addPt(p1);\n\t}\n\taddLastSegment() {\n\t\tthis._segList.addPt(this._offset1.p1);\n\t}\n\tinitSideSegments(s1, s2, side) {\n\t\tthis._s1 = s1;\n\t\tthis._s2 = s2;\n\t\tthis._side = side;\n\t\tthis._seg1.setCoordinates(s1, s2);\n\t\tthis.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n\t}\n\taddLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n\t\tvar basePt = this._seg0.p1;\n\t\tvar ang0 = Angle.angle(basePt, this._seg0.p0);\n\t\tvar ang1 = Angle.angle(basePt, this._seg1.p1);\n\t\tvar angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n\t\tvar angDiffHalf = angDiff / 2;\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\n\t\tvar mitreDist = mitreLimit * distance;\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n\t\tvar bevelHalfLen = distance - bevelDelta;\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\t\tif (this._side === Position.LEFT) {\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t} else {\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t}\n\t}\n\taddDirectedFillet(p, startAngle, endAngle, direction, radius) {\n\t\tvar directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1;\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\n\t\tvar nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n\t\tif (nSegs < 1) return null;\n\t\tvar initAngle = null, currAngleInc = null;\n\t\tinitAngle = 0.0;\n\t\tcurrAngleInc = totalAngle / nSegs;\n\t\tvar currAngle = initAngle;\n\t\tvar pt = new Coordinate();\n\t\twhile (currAngle < totalAngle) {\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\n\t\t\tthis._segList.addPt(pt);\n\t\t\tcurrAngle += currAngleInc;\n\t\t}\n\t}\n\tcomputeOffsetSegment(seg, side, distance, offset) {\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\n\t\tvar dx = seg.p1.x - seg.p0.x;\n\t\tvar dy = seg.p1.y - seg.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = sideSign * distance * dx / len;\n\t\tvar uy = sideSign * distance * dy / len;\n\t\toffset.p0.x = seg.p0.x - uy;\n\t\toffset.p0.y = seg.p0.y + ux;\n\t\toffset.p1.x = seg.p1.x - uy;\n\t\toffset.p1.y = seg.p1.y + ux;\n\t}\n\taddInsideTurn(orientation, addStartPoint) {\n\t\tthis._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis._segList.addPt(this._li.getIntersection(0));\n\t\t} else {\n\t\t\tthis._hasNarrowConcaveAngle = true;\n\t\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t} else {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t\tif (this._closingSegLengthFactor > 0) {\n\t\t\t\t\tvar mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid0);\n\t\t\t\t\tvar mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._segList.addPt(this._s1);\n\t\t\t\t}\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t}\n\t\t}\n\t}\n\tcreateCircle(p) {\n\t\tvar pt = new Coordinate(p.x + this._distance, p.y);\n\t\tthis._segList.addPt(pt);\n\t\tthis.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n\t\tthis._segList.closeRing();\n\t}\n\taddBevelJoin(offset0, offset1) {\n\t\tthis._segList.addPt(offset0.p1);\n\t\tthis._segList.addPt(offset1.p0);\n\t}\n\tinit(distance) {\n\t\tthis._distance = distance;\n\t\tthis._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n\t\tthis._segList = new OffsetSegmentString();\n\t\tthis._segList.setPrecisionModel(this._precisionModel);\n\t\tthis._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n\t}\n\taddCollinear(addStartPoint) {\n\t\tthis._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n\t\tvar numInt = this._li.getIntersectionNum();\n\t\tif (numInt >= 2) {\n\t\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t} else {\n\t\t\t\tthis.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance);\n\t\t\t}\n\t\t}\n\t}\n\tcloseRing() {\n\t\tthis._segList.closeRing();\n\t}\n\thasNarrowConcaveAngle() {\n\t\treturn this._hasNarrowConcaveAngle;\n\t}\n\tgetClass() {\n\t\treturn OffsetSegmentGenerator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOffsetSegmentGenerator.constructor_ = function () {\n\tthis._maxCurveSegmentError = 0.0;\n\tthis._filletAngleQuantum = null;\n\tthis._closingSegLengthFactor = 1;\n\tthis._segList = null;\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tthis._li = null;\n\tthis._s0 = null;\n\tthis._s1 = null;\n\tthis._s2 = null;\n\tthis._seg0 = new LineSegment();\n\tthis._seg1 = new LineSegment();\n\tthis._offset0 = new LineSegment();\n\tthis._offset1 = new LineSegment();\n\tthis._side = 0;\n\tthis._hasNarrowConcaveAngle = false;\n\tlet precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n\tthis._li = new RobustLineIntersector();\n\tthis._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n\tthis.init(distance);\n};\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n","import BufferParameters from './BufferParameters';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator';\nexport default class OffsetCurveBuilder {\n\tconstructor() {\n\t\tOffsetCurveBuilder.constructor_.apply(this, arguments);\n\t}\n\tstatic copyCoordinates(pts) {\n\t\tvar copy = new Array(pts.length).fill(null);\n\t\tfor (var i = 0; i < copy.length; i++) {\n\t\t\tcopy[i] = new Coordinate(pts[i]);\n\t\t}\n\t\treturn copy;\n\t}\n\tgetOffsetCurve(inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance === 0.0) return null;\n\t\tvar isRightSide = distance < 0.0;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\n\t\t}\n\t\tvar curvePts = segGen.getCoordinates();\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\n\t\treturn curvePts;\n\t}\n\tcomputeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tsegGen.addSegments(inputPts, true);\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tsegGen.addSegments(inputPts, false);\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.closeRing();\n\t}\n\tcomputeRingBufferCurve(inputPts, side, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (side === Position.RIGHT) distTol = -distTol;\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n = simp.length - 1;\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\n\t\tfor (var i = 1; i <= n; i++) {\n\t\t\tvar addStartPoint = i !== 1;\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\n\t\t}\n\t\tsegGen.closeRing();\n\t}\n\tcomputeLineBufferCurve(inputPts, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n1 = simp1.length - 1;\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\tvar n2 = simp2.length - 1;\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\n\t\tsegGen.closeRing();\n\t}\n\tcomputePointCurve(pt, segGen) {\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tsegGen.createCircle(pt);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tsegGen.createSquare(pt);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tgetLineCurve(inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance < 0.0 && !this._bufParams.isSingleSided()) return null;\n\t\tif (distance === 0.0) return null;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tif (this._bufParams.isSingleSided()) {\n\t\t\t\tvar isRightSide = distance < 0.0;\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\n\t\t}\n\t\tvar lineCoord = segGen.getCoordinates();\n\t\treturn lineCoord;\n\t}\n\tgetBufferParameters() {\n\t\treturn this._bufParams;\n\t}\n\tsimplifyTolerance(bufDistance) {\n\t\treturn bufDistance * this._bufParams.getSimplifyFactor();\n\t}\n\tgetRingCurve(inputPts, side, distance) {\n\t\tthis._distance = distance;\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\t\tif (distance === 0.0) {\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\n\t\t}\n\t\tvar segGen = this.getSegGen(distance);\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\n\t\treturn segGen.getCoordinates();\n\t}\n\tcomputeOffsetCurve(inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t}\n\tgetSegGen(distance) {\n\t\treturn new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance);\n\t}\n\tgetClass() {\n\t\treturn OffsetCurveBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOffsetCurveBuilder.constructor_ = function () {\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tlet precisionModel = arguments[0], bufParams = arguments[1];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport Orientation from '../../algorithm/Orientation';\nimport Collections from '../../../../../java/util/Collections';\nimport DirectedEdge from '../../geomgraph/DirectedEdge';\nimport LineSegment from '../../geom/LineSegment';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default class SubgraphDepthLocater {\n\tconstructor() {\n\t\tSubgraphDepthLocater.constructor_.apply(this, arguments);\n\t}\n\tfindStabbedSegments() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet stabbingRayLeftPt = arguments[0];\n\t\t\tvar stabbedSegments = new ArrayList();\n\t\t\tfor (var i = this._subgraphs.iterator(); i.hasNext(); ) {\n\t\t\t\tvar bsg = i.next();\n\t\t\t\tvar env = bsg.getEnvelope();\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n\t\t\t}\n\t\t\treturn stabbedSegments;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tthis._seg.p0 = pts[i];\n\t\t\t\t\tthis._seg.p1 = pts[i + 1];\n\t\t\t\t\tif (this._seg.p0.y > this._seg.p1.y) this._seg.reverse();\n\t\t\t\t\tvar maxx = Math.max(this._seg.p0.x, this._seg.p1.x);\n\t\t\t\t\tif (maxx < stabbingRayLeftPt.x) continue;\n\t\t\t\t\tif (this._seg.isHorizontal()) continue;\n\t\t\t\t\tif (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue;\n\t\t\t\t\tif (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue;\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\n\t\t\t\t\tif (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n\t\t\t\t\tvar ds = new DepthSegment(this._seg, depth);\n\t\t\t\t\tstabbedSegments.add(ds);\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\t\t\tvar de = i.next();\n\t\t\t\t\tif (!de.isForward()) continue;\n\t\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetDepth(p) {\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\n\t\tif (stabbedSegments.size() === 0) return 0;\n\t\tvar ds = Collections.min(stabbedSegments);\n\t\treturn ds._leftDepth;\n\t}\n\tgetClass() {\n\t\treturn SubgraphDepthLocater;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass DepthSegment {\n\tconstructor() {\n\t\tDepthSegment.constructor_.apply(this, arguments);\n\t}\n\tcompareTo(obj) {\n\t\tvar other = obj;\n\t\tif (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1;\n\t\tif (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1;\n\t\tvar orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\torientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\treturn this._upwardSeg.compareTo(other._upwardSeg);\n\t}\n\tcompareX(seg0, seg1) {\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\n\t\tif (compare0 !== 0) return compare0;\n\t\treturn seg0.p1.compareTo(seg1.p1);\n\t}\n\ttoString() {\n\t\treturn this._upwardSeg.toString();\n\t}\n\tgetClass() {\n\t\treturn DepthSegment;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nDepthSegment.constructor_ = function () {\n\tthis._upwardSeg = null;\n\tthis._leftDepth = null;\n\tlet seg = arguments[0], depth = arguments[1];\n\tthis._upwardSeg = new LineSegment(seg);\n\tthis._leftDepth = depth;\n};\nSubgraphDepthLocater.DepthSegment = DepthSegment;\nSubgraphDepthLocater.constructor_ = function () {\n\tthis._subgraphs = null;\n\tthis._seg = new LineSegment();\n\tlet subgraphs = arguments[0];\n\tthis._subgraphs = subgraphs;\n};\n","import Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport Position from '../../geomgraph/Position';\nimport Point from '../../geom/Point';\nimport NodedSegmentString from '../../noding/NodedSegmentString';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport LinearRing from '../../geom/LinearRing';\nimport Orientation from '../../algorithm/Orientation';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport Label from '../../geomgraph/Label';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Distance from '../../algorithm/Distance';\nimport MultiLineString from '../../geom/MultiLineString';\nimport Triangle from '../../geom/Triangle';\nexport default class OffsetCurveSetBuilder {\n\tconstructor() {\n\t\tOffsetCurveSetBuilder.constructor_.apply(this, arguments);\n\t}\n\taddPoint(p) {\n\t\tif (this._distance <= 0.0) return null;\n\t\tvar coord = p.getCoordinates();\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t}\n\taddPolygon(p) {\n\t\tvar offsetDistance = this._distance;\n\t\tvar offsetSide = Position.LEFT;\n\t\tif (this._distance < 0.0) {\n\t\t\toffsetDistance = -this._distance;\n\t\t\toffsetSide = Position.RIGHT;\n\t\t}\n\t\tvar shell = p.getExteriorRing();\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n\t\tif (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null;\n\t\tif (this._distance <= 0.0 && shellCoord.length < 3) return null;\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n\t\t\tif (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue;\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t}\n\tisTriangleErodedCompletely(triangleCoord, bufferDistance) {\n\t\tvar tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n\t\tvar inCentre = tri.inCentre();\n\t\tvar distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1);\n\t\treturn distToCentre < Math.abs(bufferDistance);\n\t}\n\taddLineString(line) {\n\t\tif (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t}\n\taddCurve(coord, leftLoc, rightLoc) {\n\t\tif (coord === null || coord.length < 2) return null;\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\t\tthis._curveList.add(e);\n\t}\n\tgetCurves() {\n\t\tthis.add(this._inputGeom);\n\t\treturn this._curveList;\n\t}\n\taddPolygonRing(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n\t\tvar leftLoc = cwLeftLoc;\n\t\tvar rightLoc = cwRightLoc;\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n\t\t\tleftLoc = cwRightLoc;\n\t\t\trightLoc = cwLeftLoc;\n\t\t\tside = Position.opposite(side);\n\t\t}\n\t\tvar curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\n\t}\n\tadd(g) {\n\t\tif (g.isEmpty()) return null;\n\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t}\n\tisErodedCompletely(ring, bufferDistance) {\n\t\tvar ringCoord = ring.getCoordinates();\n\t\tvar minDiam = 0.0;\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n\t\tvar env = ring.getEnvelopeInternal();\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n\t\treturn false;\n\t}\n\taddCollection(gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn OffsetCurveSetBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOffsetCurveSetBuilder.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._distance = null;\n\tthis._curveBuilder = null;\n\tthis._curveList = new ArrayList();\n\tlet inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2];\n\tthis._inputGeom = inputGeom;\n\tthis._distance = distance;\n\tthis._curveBuilder = curveBuilder;\n};\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport System from '../../../../java/lang/System';\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default class EdgeEndStar {\n\tconstructor() {\n\t\tEdgeEndStar.constructor_.apply(this, arguments);\n\t}\n\tgetNextCW(ee) {\n\t\tthis.getEdges();\n\t\tvar i = this._edgeList.indexOf(ee);\n\t\tvar iNextCW = i - 1;\n\t\tif (i === 0) iNextCW = this._edgeList.size() - 1;\n\t\treturn this._edgeList.get(iNextCW);\n\t}\n\tpropagateSideLabels(geomIndex) {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\t\t\tif (label.isArea(geomIndex)) {\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\t\tif (rightLoc !== Location.NONE) {\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\t\t\t\t\tif (leftLoc === Location.NONE) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tcurrLoc = leftLoc;\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinate() {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t}\n\tprint(out) {\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\te.print(out);\n\t\t}\n\t}\n\tisAreaLabelsConsistent(geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n\t\treturn this.checkAreaLabelsConsistent(0);\n\t}\n\tcheckAreaLabelsConsistent(geomIndex) {\n\t\tvar edges = this.getEdges();\n\t\tif (edges.size() <= 0) return true;\n\t\tvar lastEdgeIndex = edges.size() - 1;\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (leftLoc === rightLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rightLoc !== currLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrLoc = leftLoc;\n\t\t}\n\t\treturn true;\n\t}\n\tfindIndex(eSearch) {\n\t\tthis.iterator();\n\t\tfor (var i = 0; i < this._edgeList.size(); i++) {\n\t\t\tvar e = this._edgeList.get(i);\n\t\t\tif (e === eSearch) return i;\n\t\t}\n\t\treturn -1;\n\t}\n\titerator() {\n\t\treturn this.getEdges().iterator();\n\t}\n\tgetEdges() {\n\t\tif (this._edgeList === null) {\n\t\t\tthis._edgeList = new ArrayList(this._edgeMap.values());\n\t\t}\n\t\treturn this._edgeList;\n\t}\n\tgetLocation(geomIndex, p, geom) {\n\t\tif (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n\t\t\tthis._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n\t\t}\n\t\treturn this._ptInAreaLocation[geomIndex];\n\t}\n\ttoString() {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tbuf.append(\"\\n\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tbuf.append(e);\n\t\t\tbuf.append(\"\\n\");\n\t\t}\n\t\treturn buf.toString();\n\t}\n\tcomputeEdgeEndLabels(boundaryNodeRule) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.computeLabel(boundaryNodeRule);\n\t\t}\n\t}\n\tcomputeLabelling(geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n\t\tthis.propagateSideLabels(0);\n\t\tthis.propagateSideLabels(1);\n\t\tvar hasDimensionalCollapseEdge = [false, false];\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isAnyNull(geomi)) {\n\t\t\t\t\tvar loc = Location.NONE;\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\n\t\t\t\t\t\tloc = Location.EXTERIOR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p = e.getCoordinate();\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetDegree() {\n\t\treturn this._edgeMap.size();\n\t}\n\tinsertEdgeEnd(e, obj) {\n\t\tthis._edgeMap.put(e, obj);\n\t\tthis._edgeList = null;\n\t}\n\tgetClass() {\n\t\treturn EdgeEndStar;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeEndStar.constructor_ = function () {\n\tthis._edgeMap = new TreeMap();\n\tthis._edgeList = null;\n\tthis._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport EdgeEndStar from './EdgeEndStar';\nimport System from '../../../../java/lang/System';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nexport default class DirectedEdgeStar extends EdgeEndStar {\n\tconstructor() {\n\t\tsuper();\n\t\tDirectedEdgeStar.constructor_.apply(this, arguments);\n\t}\n\tlinkResultDirectedEdges() {\n\t\tthis.getResultAreaEdges();\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\n\t\t\t\t\tincoming.setNext(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNext(firstOut);\n\t\t}\n\t}\n\tinsert(ee) {\n\t\tvar de = ee;\n\t\tthis.insertEdgeEnd(de, de);\n\t}\n\tgetRightmostEdge() {\n\t\tvar edges = this.getEdges();\n\t\tvar size = edges.size();\n\t\tif (size < 1) return null;\n\t\tvar de0 = edges.get(0);\n\t\tif (size === 1) return de0;\n\t\tvar deLast = edges.get(size - 1);\n\t\tvar quad0 = de0.getQuadrant();\n\t\tvar quad1 = deLast.getQuadrant();\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0; else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast; else {\n\t\t\tvar nonHorizontalEdge = null;\n\t\t\tif (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n\t\treturn null;\n\t}\n\tprint(out) {\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tout.print(\"out \");\n\t\t\tde.print(out);\n\t\t\tout.println();\n\t\t\tout.print(\"in \");\n\t\t\tde.getSym().print(out);\n\t\t\tout.println();\n\t\t}\n\t}\n\tgetResultAreaEdges() {\n\t\tif (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList;\n\t\tthis._resultAreaEdgeList = new ArrayList();\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de);\n\t\t}\n\t\treturn this._resultAreaEdgeList;\n\t}\n\tupdateLabelling(nodeLabel) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n\t\t}\n\t}\n\tlinkAllDirectedEdges() {\n\t\tthis.getEdges();\n\t\tvar prevOut = null;\n\t\tvar firstIn = null;\n\t\tfor (var i = this._edgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._edgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstIn === null) firstIn = nextIn;\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\n\t\t\tprevOut = nextOut;\n\t\t}\n\t\tfirstIn.setNext(prevOut);\n\t}\n\tcomputeDepths() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar edgeIndex = this.findIndex(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2];\n\t\t\tvar currDepth = startDepth;\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tvar nextDe = this._edgeList.get(i);\n\t\t\t\tvar label = nextDe.getLabel();\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\n\t\t\t}\n\t\t\treturn currDepth;\n\t\t}\n\t}\n\tmergeSymLabels() {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.merge(de.getSym().getLabel());\n\t\t}\n\t}\n\tlinkMinimalDirectedEdges(er) {\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming.setNextMin(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNextMin(firstOut);\n\t\t}\n\t}\n\tgetOutgoingDegree() {\n\t\tif (arguments.length === 0) {\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.isInResult()) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet er = arguments[0];\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t}\n\t}\n\tgetLabel() {\n\t\treturn this._label;\n\t}\n\tfindCoveredLineEdges() {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.isLineEdge()) {\n\t\t\t\tif (nextOut.isInResult()) {\n\t\t\t\t\tstartLoc = Location.INTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (nextIn.isInResult()) {\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (nextOut.isLineEdge()) {\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n\t\t\t} else {\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\n\t\t\t}\n\t\t}\n\t}\n\tcomputeLabelling(geom) {\n\t\tsuper.computeLabelling.call(this, geom);\n\t\tthis._label = new Label(Location.NONE);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tvar e = ee.getEdge();\n\t\t\tvar eLabel = e.getLabel();\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR);\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn DirectedEdgeStar;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDirectedEdgeStar.constructor_ = function () {\n\tthis._resultAreaEdgeList = null;\n\tthis._label = null;\n\tthis._SCANNING_FOR_INCOMING = 1;\n\tthis._LINKING_TO_OUTGOING = 2;\n};\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar';\nimport Node from '../../geomgraph/Node';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default class OverlayNodeFactory extends NodeFactory {\n\tconstructor() {\n\t\tsuper();\n\t\tOverlayNodeFactory.constructor_.apply(this, arguments);\n\t}\n\tcreateNode(coord) {\n\t\treturn new Node(coord, new DirectedEdgeStar());\n\t}\n\tgetClass() {\n\t\treturn OverlayNodeFactory;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOverlayNodeFactory.constructor_ = function () {};\n","import Comparable from '../../../../java/lang/Comparable';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nexport default class OrientedCoordinateArray {\n\tconstructor() {\n\t\tOrientedCoordinateArray.constructor_.apply(this, arguments);\n\t}\n\tstatic orientation(pts) {\n\t\treturn CoordinateArrays.increasingDirection(pts) === 1;\n\t}\n\tstatic compareOriented(pts1, orientation1, pts2, orientation2) {\n\t\tvar dir1 = orientation1 ? 1 : -1;\n\t\tvar dir2 = orientation2 ? 1 : -1;\n\t\tvar limit1 = orientation1 ? pts1.length : -1;\n\t\tvar limit2 = orientation2 ? pts2.length : -1;\n\t\tvar i1 = orientation1 ? 0 : pts1.length - 1;\n\t\tvar i2 = orientation2 ? 0 : pts2.length - 1;\n\t\tvar comp = 0;\n\t\twhile (true) {\n\t\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (compPt !== 0) return compPt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t\tvar done1 = i1 === limit1;\n\t\t\tvar done2 = i2 === limit2;\n\t\t\tif (done1 && !done2) return -1;\n\t\t\tif (!done1 && done2) return 1;\n\t\t\tif (done1 && done2) return 0;\n\t\t}\n\t}\n\tcompareTo(o1) {\n\t\tvar oca = o1;\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n\t\treturn comp;\n\t}\n\tgetClass() {\n\t\treturn OrientedCoordinateArray;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nOrientedCoordinateArray.constructor_ = function () {\n\tthis._pts = null;\n\tthis._orientation = null;\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\n};\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default class EdgeList {\n\tconstructor() {\n\t\tEdgeList.constructor_.apply(this, arguments);\n\t}\n\tprint(out) {\n\t\tout.print(\"MULTILINESTRING ( \");\n\t\tfor (var j = 0; j < this._edges.size(); j++) {\n\t\t\tvar e = this._edges.get(j);\n\t\t\tif (j > 0) out.print(\",\");\n\t\t\tout.print(\"(\");\n\t\t\tvar pts = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tif (i > 0) out.print(\",\");\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\n\t\t\t}\n\t\t\tout.println(\")\");\n\t\t}\n\t\tout.print(\")  \");\n\t}\n\taddAll(edgeColl) {\n\t\tfor (var i = edgeColl.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t}\n\tfindEdgeIndex(e) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tif (this._edges.get(i).equals(e)) return i;\n\t\t}\n\t\treturn -1;\n\t}\n\titerator() {\n\t\treturn this._edges.iterator();\n\t}\n\tgetEdges() {\n\t\treturn this._edges;\n\t}\n\tget(i) {\n\t\treturn this._edges.get(i);\n\t}\n\tfindEqualEdge(e) {\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tvar matchEdge = this._ocaMap.get(oca);\n\t\treturn matchEdge;\n\t}\n\tadd(e) {\n\t\tthis._edges.add(e);\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tthis._ocaMap.put(oca, e);\n\t}\n\tgetClass() {\n\t\treturn EdgeList;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeList.constructor_ = function () {\n\tthis._edges = new ArrayList();\n\tthis._ocaMap = new TreeMap();\n};\n","export default class SegmentIntersector {\n\tconstructor() {\n\t\tSegmentIntersector.constructor_.apply(this, arguments);\n\t}\n\tprocessIntersections(e0, segIndex0, e1, segIndex1) {}\n\tisDone() {}\n\tgetClass() {\n\t\treturn SegmentIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegmentIntersector.constructor_ = function () {};\n","import SegmentIntersector from './SegmentIntersector';\nexport default class IntersectionAdder {\n\tconstructor() {\n\t\tIntersectionAdder.constructor_.apply(this, arguments);\n\t}\n\tstatic isAdjacentSegments(i1, i2) {\n\t\treturn Math.abs(i1 - i2) === 1;\n\t}\n\tisTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetProperIntersectionPoint() {\n\t\treturn this._properIntersectionPoint;\n\t}\n\thasProperInteriorIntersection() {\n\t\treturn this._hasProperInterior;\n\t}\n\tgetLineIntersector() {\n\t\treturn this._li;\n\t}\n\thasProperIntersection() {\n\t\treturn this._hasProper;\n\t}\n\tprocessIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis.numIntersections++;\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis.numInteriorIntersections++;\n\t\t\t\tthis._hasInterior = true;\n\t\t\t}\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis.numProperIntersections++;\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tthis._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thasIntersection() {\n\t\treturn this._hasIntersection;\n\t}\n\tisDone() {\n\t\treturn false;\n\t}\n\thasInteriorIntersection() {\n\t\treturn this._hasInterior;\n\t}\n\tgetClass() {\n\t\treturn IntersectionAdder;\n\t}\n\tget interfaces_() {\n\t\treturn [SegmentIntersector];\n\t}\n}\nIntersectionAdder.constructor_ = function () {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._hasInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numInteriorIntersections = 0;\n\tthis.numProperIntersections = 0;\n\tthis.numTests = 0;\n\tlet li = arguments[0];\n\tthis._li = li;\n};\n","import Location from '../../geom/Location';\nimport BufferSubgraph from './BufferSubgraph';\nimport PolygonBuilder from '../overlay/PolygonBuilder';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport MCIndexNoder from '../../noding/MCIndexNoder';\nimport OffsetCurveBuilder from './OffsetCurveBuilder';\nimport Collections from '../../../../../java/util/Collections';\nimport SubgraphDepthLocater from './SubgraphDepthLocater';\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport IntersectionAdder from '../../noding/IntersectionAdder';\nimport Edge from '../../geomgraph/Edge';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default class BufferBuilder {\n\tconstructor() {\n\t\tBufferBuilder.constructor_.apply(this, arguments);\n\t}\n\tstatic depthDelta(label) {\n\t\tvar lLoc = label.getLocation(0, Position.LEFT);\n\t\tvar rLoc = label.getLocation(0, Position.RIGHT);\n\t\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n\t\treturn 0;\n\t}\n\tstatic convertSegStrings(it) {\n\t\tvar fact = new GeometryFactory();\n\t\tvar lines = new ArrayList();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ss = it.next();\n\t\t\tvar line = fact.createLineString(ss.getCoordinates());\n\t\t\tlines.add(line);\n\t\t}\n\t\treturn fact.buildGeometry(lines);\n\t}\n\tsetWorkingPrecisionModel(pm) {\n\t\tthis._workingPrecisionModel = pm;\n\t}\n\tinsertUniqueEdge(e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\n\t\t\tvar newDelta = existingDelta + mergeDelta;\n\t\t\texistingEdge.setDepthDelta(newDelta);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n\t\t}\n\t}\n\tbuildSubgraphs(subgraphList, polyBuilder) {\n\t\tvar processedGraphs = new ArrayList();\n\t\tfor (var i = subgraphList.iterator(); i.hasNext(); ) {\n\t\t\tvar subgraph = i.next();\n\t\t\tvar p = subgraph.getRightmostCoordinate();\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\n\t\t\tvar outsideDepth = locater.getDepth(p);\n\t\t\tsubgraph.computeDepth(outsideDepth);\n\t\t\tsubgraph.findResultEdges();\n\t\t\tprocessedGraphs.add(subgraph);\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n\t\t}\n\t}\n\tcreateSubgraphs(graph) {\n\t\tvar subgraphList = new ArrayList();\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isVisited()) {\n\t\t\t\tvar subgraph = new BufferSubgraph();\n\t\t\t\tsubgraph.create(node);\n\t\t\t\tsubgraphList.add(subgraph);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\n\t\treturn subgraphList;\n\t}\n\tcreateEmptyResultGeometry() {\n\t\tvar emptyGeom = this._geomFact.createPolygon();\n\t\treturn emptyGeom;\n\t}\n\tgetNoder(precisionModel) {\n\t\tif (this._workingNoder !== null) return this._workingNoder;\n\t\tvar noder = new MCIndexNoder();\n\t\tvar li = new RobustLineIntersector();\n\t\tli.setPrecisionModel(precisionModel);\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\n\t\treturn noder;\n\t}\n\tbuffer(g, distance) {\n\t\tvar precisionModel = this._workingPrecisionModel;\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\n\t\tthis._geomFact = g.getFactory();\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\n\t\tif (bufferSegStrList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\n\t\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tvar subgraphList = this.createSubgraphs(this._graph);\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\n\t\tvar resultPolyList = polyBuilder.getPolygons();\n\t\tif (resultPolyList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tvar resultGeom = this._geomFact.buildGeometry(resultPolyList);\n\t\treturn resultGeom;\n\t}\n\tcomputeNodedEdges(bufferSegStrList, precisionModel) {\n\t\tvar noder = this.getNoder(precisionModel);\n\t\tnoder.computeNodes(bufferSegStrList);\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar segStr = i.next();\n\t\t\tvar pts = segStr.getCoordinates();\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n\t\t\tvar oldLabel = segStr.getData();\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n\t\t\tthis.insertUniqueEdge(edge);\n\t\t}\n\t}\n\tsetNoder(noder) {\n\t\tthis._workingNoder = noder;\n\t}\n\tgetClass() {\n\t\treturn BufferBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nBufferBuilder.constructor_ = function () {\n\tthis._bufParams = null;\n\tthis._workingPrecisionModel = null;\n\tthis._workingNoder = null;\n\tthis._geomFact = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tlet bufParams = arguments[0];\n\tthis._bufParams = bufParams;\n};\n","import GeometryFactory from '../geom/GeometryFactory';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nexport default class NodingValidator {\n\tconstructor() {\n\t\tNodingValidator.constructor_.apply(this, arguments);\n\t}\n\tcheckEndPtVertexIntersections() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this._segStrings);\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet testPt = arguments[0], segStrings = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcheckInteriorIntersections() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss0 = i.next();\n\t\t\t\tfor (var j = this._segStrings.iterator(); j.hasNext(); ) {\n\t\t\t\t\tvar ss1 = j.next();\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ss0 = arguments[0], ss1 = arguments[1];\n\t\t\tvar pts0 = ss0.getCoordinates();\n\t\t\tvar pts1 = ss1.getCoordinates();\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, i0, ss1, i1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3];\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\t\tif (this._li.hasIntersection()) {\n\t\t\t\tif (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcheckValid() {\n\t\tthis.checkEndPtVertexIntersections();\n\t\tthis.checkInteriorIntersections();\n\t\tthis.checkCollapses();\n\t}\n\tcheckCollapses() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.checkCollapses(ss);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet ss = arguments[0];\n\t\t\tvar pts = ss.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n\t\t\t}\n\t\t}\n\t}\n\thasInteriorIntersection(li, p0, p1) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tvar intPt = li.getIntersection(i);\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tcheckCollapse(p0, p1, p2) {\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n\t}\n\tgetClass() {\n\t\treturn NodingValidator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNodingValidator.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tlet segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n};\nNodingValidator.fact = new GeometryFactory();\n","import Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nexport default class HotPixel {\n\tconstructor() {\n\t\tHotPixel.constructor_.apply(this, arguments);\n\t}\n\tintersectsScaled(p0, p1) {\n\t\tvar segMinx = Math.min(p0.x, p1.x);\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\n\t\tvar segMiny = Math.min(p0.y, p1.y);\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\n\t\tvar isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n\t\tif (isOutsidePixelEnv) return false;\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n\t\treturn intersects;\n\t}\n\tinitCorners(pt) {\n\t\tvar tolerance = 0.5;\n\t\tthis._minx = pt.x - tolerance;\n\t\tthis._maxx = pt.x + tolerance;\n\t\tthis._miny = pt.y - tolerance;\n\t\tthis._maxy = pt.y + tolerance;\n\t\tthis._corner[0] = new Coordinate(this._maxx, this._maxy);\n\t\tthis._corner[1] = new Coordinate(this._minx, this._maxy);\n\t\tthis._corner[2] = new Coordinate(this._minx, this._miny);\n\t\tthis._corner[3] = new Coordinate(this._maxx, this._miny);\n\t}\n\tintersects(p0, p1) {\n\t\tif (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n\t\tthis.copyScaled(p0, this._p0Scaled);\n\t\tthis.copyScaled(p1, this._p1Scaled);\n\t\treturn this.intersectsScaled(this._p0Scaled, this._p1Scaled);\n\t}\n\tscale(val) {\n\t\treturn Math.round(val * this._scaleFactor);\n\t}\n\tgetCoordinate() {\n\t\treturn this._originalPt;\n\t}\n\tcopyScaled(p, pScaled) {\n\t\tpScaled.x = this.scale(p.x);\n\t\tpScaled.y = this.scale(p.y);\n\t}\n\tgetSafeEnvelope() {\n\t\tif (this._safeEnv === null) {\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n\t\t\tthis._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n\t\t}\n\t\treturn this._safeEnv;\n\t}\n\tintersectsPixelClosure(p0, p1) {\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t}\n\tintersectsToleranceSquare(p0, p1) {\n\t\tvar intersectsLeft = false;\n\t\tvar intersectsBottom = false;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.isProper()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsLeft = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsBottom = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (intersectsLeft && intersectsBottom) return true;\n\t\tif (p0.equals(this._pt)) return true;\n\t\tif (p1.equals(this._pt)) return true;\n\t\treturn false;\n\t}\n\taddSnappedNode(segStr, segIndex) {\n\t\tvar p0 = segStr.getCoordinate(segIndex);\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\n\t\tif (this.intersects(p0, p1)) {\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn HotPixel;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nHotPixel.constructor_ = function () {\n\tthis._li = null;\n\tthis._pt = null;\n\tthis._originalPt = null;\n\tthis._ptScaled = null;\n\tthis._p0Scaled = null;\n\tthis._p1Scaled = null;\n\tthis._scaleFactor = null;\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tthis._corner = new Array(4).fill(null);\n\tthis._safeEnv = null;\n\tlet pt = arguments[0], scaleFactor = arguments[1], li = arguments[2];\n\tthis._originalPt = pt;\n\tthis._pt = pt;\n\tthis._scaleFactor = scaleFactor;\n\tthis._li = li;\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\tif (scaleFactor !== 1.0) {\n\t\tthis._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n\t\tthis._p0Scaled = new Coordinate();\n\t\tthis._p1Scaled = new Coordinate();\n\t}\n\tthis.initCorners(this._pt);\n};\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n","import LineSegment from '../../geom/LineSegment';\nexport default class MonotoneChainSelectAction {\n\tconstructor() {\n\t\tMonotoneChainSelectAction.constructor_.apply(this, arguments);\n\t}\n\tselect() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet seg = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\n\t\t\tthis.select(this.selectedSegment);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MonotoneChainSelectAction;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMonotoneChainSelectAction.constructor_ = function () {\n\tthis.selectedSegment = new LineSegment();\n};\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction';\nimport MonotoneChain from '../../index/chain/MonotoneChain';\nimport ItemVisitor from '../../index/ItemVisitor';\nexport default class MCIndexPointSnapper {\n\tconstructor() {\n\t\tMCIndexPointSnapper.constructor_.apply(this, arguments);\n\t}\n\tsnap() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet hotPixel = arguments[0];\n\t\t\treturn this.snap(hotPixel, null, -1);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\t\t\tvar pixelEnv = hotPixel.getSafeEnvelope();\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\n\t\t\tthis._index.query(pixelEnv, new (class {\n\t\t\t\tget interfaces_() {\n\t\t\t\t\treturn [ItemVisitor];\n\t\t\t\t}\n\t\t\t\tvisitItem(item) {\n\t\t\t\t\tvar testChain = item;\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\n\t\t\t\t}\n\t\t\t})());\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MCIndexPointSnapper;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass HotPixelSnapAction extends MonotoneChainSelectAction {\n\tconstructor() {\n\t\tsuper();\n\t\tHotPixelSnapAction.constructor_.apply(this, arguments);\n\t}\n\tisNodeAdded() {\n\t\treturn this._isNodeAdded;\n\t}\n\tselect() {\n\t\tif (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tvar ss = mc.getContext();\n\t\t\tif (this._parentEdge !== null) {\n\t\t\t\tif (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) return null;\n\t\t\t}\n\t\t\tthis._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n\t\t} else return super.select.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn HotPixelSnapAction;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nHotPixelSnapAction.constructor_ = function () {\n\tthis._hotPixel = null;\n\tthis._parentEdge = null;\n\tthis._hotPixelVertexIndex = null;\n\tthis._isNodeAdded = false;\n\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\tthis._hotPixel = hotPixel;\n\tthis._parentEdge = parentEdge;\n\tthis._hotPixelVertexIndex = hotPixelVertexIndex;\n};\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\nMCIndexPointSnapper.constructor_ = function () {\n\tthis._index = null;\n\tlet index = arguments[0];\n\tthis._index = index;\n};\n","import SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class InteriorIntersectionFinderAdder {\n\tconstructor() {\n\t\tInteriorIntersectionFinderAdder.constructor_.apply(this, arguments);\n\t}\n\tprocessIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tfor (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n\t\t\t\t\tthis._interiorIntersections.add(this._li.getIntersection(intIndex));\n\t\t\t\t}\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t}\n\t\t}\n\t}\n\tisDone() {\n\t\treturn false;\n\t}\n\tgetInteriorIntersections() {\n\t\treturn this._interiorIntersections;\n\t}\n\tgetClass() {\n\t\treturn InteriorIntersectionFinderAdder;\n\t}\n\tget interfaces_() {\n\t\treturn [SegmentIntersector];\n\t}\n}\nInteriorIntersectionFinderAdder.constructor_ = function () {\n\tthis._li = null;\n\tthis._interiorIntersections = null;\n\tlet li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersections = new ArrayList();\n};\n","import NodingValidator from '../NodingValidator';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport Noder from '../Noder';\nimport MCIndexNoder from '../MCIndexNoder';\nimport NodedSegmentString from '../NodedSegmentString';\nimport HotPixel from './HotPixel';\nimport Exception from '../../../../../java/lang/Exception';\nimport MCIndexPointSnapper from './MCIndexPointSnapper';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder';\nexport default class MCIndexSnapRounder {\n\tconstructor() {\n\t\tMCIndexSnapRounder.constructor_.apply(this, arguments);\n\t}\n\tcheckCorrectness(inputSegmentStrings) {\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n\t\tvar nv = new NodingValidator(resultSegStrings);\n\t\ttry {\n\t\t\tnv.checkValid();\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tex.printStackTrace();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t}\n\tgetNodedSubstrings() {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t}\n\tsnapRound(segStrings, li) {\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\n\t\tthis.computeIntersectionSnaps(intersections);\n\t\tthis.computeVertexSnaps(segStrings);\n\t}\n\tfindInteriorIntersections(segStrings, li) {\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\t\tthis._noder.setSegmentIntersector(intFinderAdder);\n\t\tthis._noder.computeNodes(segStrings);\n\t\treturn intFinderAdder.getInteriorIntersections();\n\t}\n\tcomputeVertexSnaps() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext(); ) {\n\t\t\t\tvar edge0 = i0.next();\n\t\t\t\tthis.computeVertexSnaps(edge0);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\n\t\t\tlet e = arguments[0];\n\t\t\tvar pts0 = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li);\n\t\t\t\tvar isNodeAdded = this._pointSnapper.snap(hotPixel, e, i);\n\t\t\t\tif (isNodeAdded) {\n\t\t\t\t\te.addIntersection(pts0[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcomputeNodes(inputSegmentStrings) {\n\t\tthis._nodedSegStrings = inputSegmentStrings;\n\t\tthis._noder = new MCIndexNoder();\n\t\tthis._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n\t\tthis.snapRound(inputSegmentStrings, this._li);\n\t}\n\tcomputeIntersectionSnaps(snapPts) {\n\t\tfor (var it = snapPts.iterator(); it.hasNext(); ) {\n\t\t\tvar snapPt = it.next();\n\t\t\tvar hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li);\n\t\t\tthis._pointSnapper.snap(hotPixel);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn MCIndexSnapRounder;\n\t}\n\tget interfaces_() {\n\t\treturn [Noder];\n\t}\n}\nMCIndexSnapRounder.constructor_ = function () {\n\tthis._pm = null;\n\tthis._li = null;\n\tthis._scaleFactor = null;\n\tthis._noder = null;\n\tthis._pointSnapper = null;\n\tthis._nodedSegStrings = null;\n\tlet pm = arguments[0];\n\tthis._pm = pm;\n\tthis._li = new RobustLineIntersector();\n\tthis._li.setPrecisionModel(pm);\n\tthis._scaleFactor = pm.getScale();\n};\n","import BufferParameters from './BufferParameters';\nimport Geometry from '../../geom/Geometry';\nimport BufferBuilder from './BufferBuilder';\nimport ScaledNoder from '../../noding/ScaledNoder';\nimport TopologyException from '../../geom/TopologyException';\nimport MathUtil from '../../math/MathUtil';\nimport PrecisionModel from '../../geom/PrecisionModel';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder';\nexport default class BufferOp {\n\tconstructor() {\n\t\tBufferOp.constructor_.apply(this, arguments);\n\t}\n\tstatic bufferOp() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet g = arguments[0], distance = arguments[1];\n\t\t\tvar gBuf = new BufferOp(g);\n\t\t\tvar geomBuf = gBuf.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2];\n\t\t\t\tvar bufOp = new BufferOp(g);\n\t\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\t\treturn geomBuf;\n\t\t\t} else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\t\tlet g = arguments[0], distance = arguments[1], params = arguments[2];\n\t\t\t\tvar bufOp = new BufferOp(g, params);\n\t\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\t\treturn geomBuf;\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3];\n\t\t\tvar bufOp = new BufferOp(g);\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\tbufOp.setEndCapStyle(endCapStyle);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t}\n\t}\n\tstatic precisionScaleFactor(g, distance, maxPrecisionDigits) {\n\t\tvar env = g.getEnvelopeInternal();\n\t\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n\t\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\n\t\tvar bufEnvMax = envMax + 2 * expandByDistance;\n\t\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n\t\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n\t\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\n\t\treturn scaleFactor;\n\t}\n\tbufferFixedPrecision(fixedPM) {\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\n\t\tbufBuilder.setNoder(noder);\n\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t}\n\tbufferReducedPrecision() {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof TopologyException) {\n\t\t\t\t\t\tthis._saveException = ex;\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tif (this._resultGeometry !== null) return null;\n\t\t\t}\n\t\t\tthrow this._saveException;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet precisionDigits = arguments[0];\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n\t\t\tthis.bufferFixedPrecision(fixedPM);\n\t\t}\n\t}\n\tcomputeGeometry() {\n\t\tthis.bufferOriginalPrecision();\n\t\tif (this._resultGeometry !== null) return null;\n\t\tvar argPM = this._argGeom.getFactory().getPrecisionModel();\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision();\n\t}\n\tsetQuadrantSegments(quadrantSegments) {\n\t\tthis._bufParams.setQuadrantSegments(quadrantSegments);\n\t}\n\tbufferOriginalPrecision() {\n\t\ttry {\n\t\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tthis._saveException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t}\n\tgetResultGeometry(distance) {\n\t\tthis._distance = distance;\n\t\tthis.computeGeometry();\n\t\treturn this._resultGeometry;\n\t}\n\tsetEndCapStyle(endCapStyle) {\n\t\tthis._bufParams.setEndCapStyle(endCapStyle);\n\t}\n\tgetClass() {\n\t\treturn BufferOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nBufferOp.constructor_ = function () {\n\tthis._argGeom = null;\n\tthis._distance = null;\n\tthis._bufParams = new BufferParameters();\n\tthis._resultGeometry = null;\n\tthis._saveException = null;\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tthis._argGeom = g;\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bufParams = arguments[1];\n\t\tthis._argGeom = g;\n\t\tthis._bufParams = bufParams;\n\t}\n};\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\nBufferOp.MAX_PRECISION_DIGITS = 12;\n","import Polygon from '../Polygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default class PolygonExtracter {\n\tconstructor() {\n\t\tPolygonExtracter.constructor_.apply(this, arguments);\n\t}\n\tstatic getPolygons() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geom = arguments[0];\n\t\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geom = arguments[0], list = arguments[1];\n\t\t\tif (geom instanceof Polygon) {\n\t\t\t\tlist.add(geom);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tgeom.apply(new PolygonExtracter(list));\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\t}\n\tfilter(geom) {\n\t\tif (geom instanceof Polygon) this._comps.add(geom);\n\t}\n\tgetClass() {\n\t\treturn PolygonExtracter;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryFilter];\n\t}\n}\nPolygonExtracter.constructor_ = function () {\n\tthis._comps = null;\n\tlet comps = arguments[0];\n\tthis._comps = comps;\n};\n","export default class GeometryLocation {\n\tconstructor() {\n\t\tGeometryLocation.constructor_.apply(this, arguments);\n\t}\n\tisInsideArea() {\n\t\treturn this._segIndex === GeometryLocation.INSIDE_AREA;\n\t}\n\tgetCoordinate() {\n\t\treturn this._pt;\n\t}\n\tgetGeometryComponent() {\n\t\treturn this._component;\n\t}\n\tgetSegmentIndex() {\n\t\treturn this._segIndex;\n\t}\n\tgetClass() {\n\t\treturn GeometryLocation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryLocation.constructor_ = function () {\n\tthis._component = null;\n\tthis._segIndex = null;\n\tthis._pt = null;\n\tif (arguments.length === 2) {\n\t\tlet component = arguments[0], pt = arguments[1];\n\t\tGeometryLocation.constructor_.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n\t} else if (arguments.length === 3) {\n\t\tlet component = arguments[0], segIndex = arguments[1], pt = arguments[2];\n\t\tthis._component = component;\n\t\tthis._segIndex = segIndex;\n\t\tthis._pt = pt;\n\t}\n};\nGeometryLocation.INSIDE_AREA = -1;\n","import Point from '../Point';\nimport Collections from '../../../../../java/util/Collections';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default class PointExtracter {\n\tconstructor() {\n\t\tPointExtracter.constructor_.apply(this, arguments);\n\t}\n\tstatic getPoints() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\treturn Collections.singletonList(geom);\n\t\t\t}\n\t\t\treturn PointExtracter.getPoints(geom, new ArrayList());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geom = arguments[0], list = arguments[1];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tlist.add(geom);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tgeom.apply(new PointExtracter(list));\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\t}\n\tfilter(geom) {\n\t\tif (geom instanceof Point) this._pts.add(geom);\n\t}\n\tgetClass() {\n\t\treturn PointExtracter;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryFilter];\n\t}\n}\nPointExtracter.constructor_ = function () {\n\tthis._pts = null;\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n};\n","import LineString from '../../geom/LineString';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../../geom/GeometryFilter';\nexport default class ConnectedElementLocationFilter {\n\tconstructor() {\n\t\tConnectedElementLocationFilter.constructor_.apply(this, arguments);\n\t}\n\tstatic getLocations(geom) {\n\t\tvar locations = new ArrayList();\n\t\tgeom.apply(new ConnectedElementLocationFilter(locations));\n\t\treturn locations;\n\t}\n\tfilter(geom) {\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n\t}\n\tgetClass() {\n\t\treturn ConnectedElementLocationFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryFilter];\n\t}\n}\nConnectedElementLocationFilter.constructor_ = function () {\n\tthis._locations = null;\n\tlet locations = arguments[0];\n\tthis._locations = locations;\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport Double from '../../../../../java/lang/Double';\nimport PointExtracter from '../../geom/util/PointExtracter';\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter';\nimport LineSegment from '../../geom/LineSegment';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport List from '../../../../../java/util/List';\nimport Distance from '../../algorithm/Distance';\nexport default class DistanceOp {\n\tconstructor() {\n\t\tDistanceOp.constructor_.apply(this, arguments);\n\t}\n\tstatic distance(g0, g1) {\n\t\tvar distOp = new DistanceOp(g0, g1);\n\t\treturn distOp.distance();\n\t}\n\tstatic isWithinDistance(g0, g1, distance) {\n\t\tvar envDist = g0.getEnvelopeInternal().distance(g1.getEnvelopeInternal());\n\t\tif (envDist > distance) return false;\n\t\tvar distOp = new DistanceOp(g0, g1, distance);\n\t\treturn distOp.distance() <= distance;\n\t}\n\tstatic nearestPoints(g0, g1) {\n\t\tvar distOp = new DistanceOp(g0, g1);\n\t\treturn distOp.nearestPoints();\n\t}\n\tcomputeContainmentDistance() {\n\t\tif (arguments.length === 0) {\n\t\t\tvar locPtPoly = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet polyGeomIndex = arguments[0], locPtPoly = arguments[1];\n\t\t\tvar polyGeom = this._geom[polyGeomIndex];\n\t\t\tif (polyGeom.getDimension() < 2) return null;\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\n\t\t\tvar polys = PolygonExtracter.getPolygons(polyGeom);\n\t\t\tif (polys.size() > 0) {\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, locPtPoly);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) {\n\t\t\t\t\tthis._minDistanceLocation[locationsIndex] = locPtPoly[0];\n\t\t\t\t\tthis._minDistanceLocation[polyGeomIndex] = locPtPoly[1];\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet locs = arguments[0], polys = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\n\t\t\t\t\tvar loc = locs.get(i);\n\t\t\t\t\tfor (var j = 0; j < polys.size(); j++) {\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, polys.get(j), locPtPoly);\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n\t\t\t\tlet ptLoc = arguments[0], poly = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tvar pt = ptLoc.getCoordinate();\n\t\t\t\tif (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n\t\t\t\t\tthis._minDistance = 0.0;\n\t\t\t\t\tlocPtPoly[0] = ptLoc;\n\t\t\t\t\tlocPtPoly[1] = new GeometryLocation(poly, pt);\n\t\t\t\t\t;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcomputeMinDistanceLinesPoints(lines, points, locGeom) {\n\t\tfor (var i = 0; i < lines.size(); i++) {\n\t\t\tvar line = lines.get(i);\n\t\t\tfor (var j = 0; j < points.size(); j++) {\n\t\t\t\tvar pt = points.get(j);\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t}\n\tcomputeFacetDistance() {\n\t\tvar locGeom = new Array(2).fill(null);\n\t\tvar lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n\t\tvar lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n\t\tvar pts0 = PointExtracter.getPoints(this._geom[0]);\n\t\tvar pts1 = PointExtracter.getPoints(this._geom[1]);\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n\t\tthis.updateMinDistance(locGeom, true);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t}\n\tnearestLocations() {\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistanceLocation;\n\t}\n\tupdateMinDistance(locGeom, flip) {\n\t\tif (locGeom[0] === null) return null;\n\t\tif (flip) {\n\t\t\tthis._minDistanceLocation[0] = locGeom[1];\n\t\t\tthis._minDistanceLocation[1] = locGeom[0];\n\t\t} else {\n\t\t\tthis._minDistanceLocation[0] = locGeom[0];\n\t\t\tthis._minDistanceLocation[1] = locGeom[1];\n\t\t}\n\t}\n\tnearestPoints() {\n\t\tthis.computeMinDistance();\n\t\tvar nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n\t\treturn nearestPts;\n\t}\n\tcomputeMinDistance() {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._minDistanceLocation !== null) return null;\n\t\t\tthis._minDistanceLocation = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance();\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeFacetDistance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n\t\t\t\tlet line = arguments[0], pt = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line.getCoordinates();\n\t\t\t\tvar coord = pt.getCoordinate();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tvar dist = Distance.pointToSegment(coord, coord0[i], coord0[i + 1]);\n\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n\t\t\t\tlet line0 = arguments[0], line1 = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line0.getCoordinates();\n\t\t\t\tvar coord1 = line1.getCoordinates();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\n\t\t\t\t\t\tvar dist = Distance.segmentToSegment(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\t\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\n\t\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n\t\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcomputeMinDistancePoints(points0, points1, locGeom) {\n\t\tfor (var i = 0; i < points0.size(); i++) {\n\t\t\tvar pt0 = points0.get(i);\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\n\t\t\t\tvar pt1 = points1.get(j);\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n\t\t\t\t}\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t}\n\tdistance() {\n\t\tif (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n\t\tif (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0;\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistance;\n\t}\n\tcomputeMinDistanceLines(lines0, lines1, locGeom) {\n\t\tfor (var i = 0; i < lines0.size(); i++) {\n\t\t\tvar line0 = lines0.get(i);\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\n\t\t\t\tvar line1 = lines1.get(j);\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn DistanceOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDistanceOp.constructor_ = function () {\n\tthis._geom = null;\n\tthis._terminateDistance = 0.0;\n\tthis._ptLocator = new PointLocator();\n\tthis._minDistanceLocation = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tDistanceOp.constructor_.call(this, g0, g1, 0.0);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], terminateDistance = arguments[2];\n\t\tthis._geom = new Array(2).fill(null);\n\t\tthis._geom[0] = g0;\n\t\tthis._geom[1] = g1;\n\t\tthis._terminateDistance = terminateDistance;\n\t}\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class EdgeString {\n\tconstructor() {\n\t\tEdgeString.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinates() {\n\t\tif (this._coordinates === null) {\n\t\t\tvar forwardDirectedEdges = 0;\n\t\t\tvar reverseDirectedEdges = 0;\n\t\t\tvar coordinateList = new CoordinateList();\n\t\t\tfor (var i = this._directedEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar directedEdge = i.next();\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\n\t\t\t\t\tforwardDirectedEdges++;\n\t\t\t\t} else {\n\t\t\t\t\treverseDirectedEdges++;\n\t\t\t\t}\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n\t\t\t}\n\t\t\tthis._coordinates = coordinateList.toCoordinateArray();\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\n\t\t\t\tCoordinateArrays.reverse(this._coordinates);\n\t\t\t}\n\t\t}\n\t\treturn this._coordinates;\n\t}\n\ttoLineString() {\n\t\treturn this._factory.createLineString(this.getCoordinates());\n\t}\n\tadd(directedEdge) {\n\t\tthis._directedEdges.add(directedEdge);\n\t}\n\tgetClass() {\n\t\treturn EdgeString;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeString.constructor_ = function () {\n\tthis._factory = null;\n\tthis._directedEdges = new ArrayList();\n\tthis._coordinates = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n};\n","export default class GraphComponent {\n\tconstructor() {\n\t\tGraphComponent.constructor_.apply(this, arguments);\n\t}\n\tstatic getComponentWithVisitedState(i, visitedState) {\n\t\twhile (i.hasNext()) {\n\t\t\tvar comp = i.next();\n\t\t\tif (comp.isVisited() === visitedState) return comp;\n\t\t}\n\t\treturn null;\n\t}\n\tstatic setVisited(i, visited) {\n\t\twhile (i.hasNext()) {\n\t\t\tvar comp = i.next();\n\t\t\tcomp.setVisited(visited);\n\t\t}\n\t}\n\tstatic setMarked(i, marked) {\n\t\twhile (i.hasNext()) {\n\t\t\tvar comp = i.next();\n\t\t\tcomp.setMarked(marked);\n\t\t}\n\t}\n\tsetVisited(isVisited) {\n\t\tthis._isVisited = isVisited;\n\t}\n\tisMarked() {\n\t\treturn this._isMarked;\n\t}\n\tsetData(data) {\n\t\tthis._data = data;\n\t}\n\tgetData() {\n\t\treturn this._data;\n\t}\n\tsetMarked(isMarked) {\n\t\tthis._isMarked = isMarked;\n\t}\n\tgetContext() {\n\t\treturn this._data;\n\t}\n\tisVisited() {\n\t\treturn this._isVisited;\n\t}\n\tsetContext(data) {\n\t\tthis._data = data;\n\t}\n\tgetClass() {\n\t\treturn GraphComponent;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGraphComponent.constructor_ = function () {\n\tthis._isMarked = false;\n\tthis._isVisited = false;\n\tthis._data = null;\n};\n","import Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from '../geomgraph/Quadrant';\nimport GraphComponent from './GraphComponent';\nexport default class DirectedEdge extends GraphComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tDirectedEdge.constructor_.apply(this, arguments);\n\t}\n\tstatic toEdges(dirEdges) {\n\t\tvar edges = new ArrayList();\n\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tedges.add(i.next()._parentEdge);\n\t\t}\n\t\treturn edges;\n\t}\n\tisRemoved() {\n\t\treturn this._parentEdge === null;\n\t}\n\tcompareDirection(e) {\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn Orientation.index(e._p0, e._p1, this._p1);\n\t}\n\tgetCoordinate() {\n\t\treturn this._from.getCoordinate();\n\t}\n\tprint(out) {\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + this._angle);\n\t}\n\tgetDirectionPt() {\n\t\treturn this._p1;\n\t}\n\tgetAngle() {\n\t\treturn this._angle;\n\t}\n\tcompareTo(obj) {\n\t\tvar de = obj;\n\t\treturn this.compareDirection(de);\n\t}\n\tgetFromNode() {\n\t\treturn this._from;\n\t}\n\tgetSym() {\n\t\treturn this._sym;\n\t}\n\tsetEdge(parentEdge) {\n\t\tthis._parentEdge = parentEdge;\n\t}\n\tremove() {\n\t\tthis._sym = null;\n\t\tthis._parentEdge = null;\n\t}\n\tgetEdge() {\n\t\treturn this._parentEdge;\n\t}\n\tgetQuadrant() {\n\t\treturn this._quadrant;\n\t}\n\tsetSym(sym) {\n\t\tthis._sym = sym;\n\t}\n\tgetToNode() {\n\t\treturn this._to;\n\t}\n\tgetEdgeDirection() {\n\t\treturn this._edgeDirection;\n\t}\n\tgetClass() {\n\t\treturn DirectedEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nDirectedEdge.constructor_ = function () {\n\tthis._parentEdge = null;\n\tthis._from = null;\n\tthis._to = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._sym = null;\n\tthis._edgeDirection = null;\n\tthis._quadrant = null;\n\tthis._angle = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 4) {\n\t\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\t\tthis._from = from;\n\t\tthis._to = to;\n\t\tthis._edgeDirection = edgeDirection;\n\t\tthis._p0 = from.getCoordinate();\n\t\tthis._p1 = directionPt;\n\t\tvar dx = this._p1.x - this._p0.x;\n\t\tvar dy = this._p1.y - this._p0.y;\n\t\tthis._quadrant = Quadrant.quadrant(dx, dy);\n\t\tthis._angle = Math.atan2(dy, dx);\n\t}\n};\n","import DirectedEdge from '../../planargraph/DirectedEdge';\nimport Assert from '../../util/Assert';\nexport default class LineMergeDirectedEdge extends DirectedEdge {\n\tconstructor() {\n\t\tsuper();\n\t\tLineMergeDirectedEdge.constructor_.apply(this, arguments);\n\t}\n\tgetNext() {\n\t\tif (this.getToNode().getDegree() !== 2) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\n\t\t}\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\n\t}\n\tgetClass() {\n\t\treturn LineMergeDirectedEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineMergeDirectedEdge.constructor_ = function () {\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.constructor_.call(this, from, to, directionPt, edgeDirection);\n};\n","import Node from './Node';\nimport GraphComponent from './GraphComponent';\nexport default class Edge extends GraphComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tEdge.constructor_.apply(this, arguments);\n\t}\n\tisRemoved() {\n\t\treturn this._dirEdge === null;\n\t}\n\tsetDirectedEdges(de0, de1) {\n\t\tthis._dirEdge = [de0, de1];\n\t\tde0.setEdge(this);\n\t\tde1.setEdge(this);\n\t\tde0.setSym(de1);\n\t\tde1.setSym(de0);\n\t\tde0.getFromNode().addOutEdge(de0);\n\t\tde1.getFromNode().addOutEdge(de1);\n\t}\n\tgetDirEdge() {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._dirEdge[i];\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet fromNode = arguments[0];\n\t\t\tif (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0];\n\t\t\tif (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1];\n\t\t\treturn null;\n\t\t}\n\t}\n\tremove() {\n\t\tthis._dirEdge = null;\n\t}\n\tgetOppositeNode(node) {\n\t\tif (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode();\n\t\tif (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode();\n\t\treturn null;\n\t}\n\tgetClass() {\n\t\treturn Edge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdge.constructor_ = function () {\n\tthis._dirEdge = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet de0 = arguments[0], de1 = arguments[1];\n\t\tthis.setDirectedEdges(de0, de1);\n\t}\n};\n","import Collections from '../../../../java/util/Collections';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default class DirectedEdgeStar {\n\tconstructor() {\n\t\tDirectedEdgeStar.constructor_.apply(this, arguments);\n\t}\n\tgetNextEdge(dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i + 1));\n\t}\n\tgetCoordinate() {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t}\n\titerator() {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges.iterator();\n\t}\n\tsortEdges() {\n\t\tif (!this._sorted) {\n\t\t\tCollections.sort(this._outEdges);\n\t\t\tthis._sorted = true;\n\t\t}\n\t}\n\tremove(de) {\n\t\tthis._outEdges.remove(de);\n\t}\n\tgetEdges() {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges;\n\t}\n\tgetNextCWEdge(dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i - 1));\n\t}\n\tgetIndex() {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de.getEdge() === edge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de === dirEdge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\tvar modi = i % this._outEdges.size();\n\t\t\tif (modi < 0) modi += this._outEdges.size();\n\t\t\treturn modi;\n\t\t}\n\t}\n\tadd(de) {\n\t\tthis._outEdges.add(de);\n\t\tthis._sorted = false;\n\t}\n\tgetDegree() {\n\t\treturn this._outEdges.size();\n\t}\n\tgetClass() {\n\t\treturn DirectedEdgeStar;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDirectedEdgeStar.constructor_ = function () {\n\tthis._outEdges = new ArrayList();\n\tthis._sorted = false;\n};\n","import DirectedEdgeStar from './DirectedEdgeStar';\nimport HashSet from '../../../../java/util/HashSet';\nimport DirectedEdge from './DirectedEdge';\nimport GraphComponent from './GraphComponent';\nexport default class Node extends GraphComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tNode.constructor_.apply(this, arguments);\n\t}\n\tstatic getEdgesBetween(node0, node1) {\n\t\tvar edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges());\n\t\tvar commonEdges = new HashSet(edges0);\n\t\tvar edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges());\n\t\tcommonEdges.retainAll(edges1);\n\t\treturn commonEdges;\n\t}\n\tisRemoved() {\n\t\treturn this._pt === null;\n\t}\n\taddOutEdge(de) {\n\t\tthis._deStar.add(de);\n\t}\n\tgetCoordinate() {\n\t\treturn this._pt;\n\t}\n\tgetOutEdges() {\n\t\treturn this._deStar;\n\t}\n\tremove() {\n\t\tif (arguments.length === 0) {\n\t\t\tthis._pt = null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tthis._deStar.remove(de);\n\t\t}\n\t}\n\tgetIndex(edge) {\n\t\treturn this._deStar.getIndex(edge);\n\t}\n\tgetDegree() {\n\t\treturn this._deStar.getDegree();\n\t}\n\tgetClass() {\n\t\treturn Node;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNode.constructor_ = function () {\n\tthis._pt = null;\n\tthis._deStar = null;\n\tif (arguments.length === 1) {\n\t\tlet pt = arguments[0];\n\t\tNode.constructor_.call(this, pt, new DirectedEdgeStar());\n\t} else if (arguments.length === 2) {\n\t\tlet pt = arguments[0], deStar = arguments[1];\n\t\tthis._pt = pt;\n\t\tthis._deStar = deStar;\n\t}\n};\n","import Edge from '../../planargraph/Edge';\nexport default class LineMergeEdge extends Edge {\n\tconstructor() {\n\t\tsuper();\n\t\tLineMergeEdge.constructor_.apply(this, arguments);\n\t}\n\tgetLine() {\n\t\treturn this._line;\n\t}\n\tgetClass() {\n\t\treturn LineMergeEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineMergeEdge.constructor_ = function () {\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n};\n","import TreeMap from '../../../../java/util/TreeMap';\nexport default class NodeMap {\n\tconstructor() {\n\t\tNodeMap.constructor_.apply(this, arguments);\n\t}\n\tfind(coord) {\n\t\treturn this._nodeMap.get(coord);\n\t}\n\titerator() {\n\t\treturn this._nodeMap.values().iterator();\n\t}\n\tremove(pt) {\n\t\treturn this._nodeMap.remove(pt);\n\t}\n\tvalues() {\n\t\treturn this._nodeMap.values();\n\t}\n\tadd(n) {\n\t\tthis._nodeMap.put(n.getCoordinate(), n);\n\t\treturn n;\n\t}\n\tgetClass() {\n\t\treturn NodeMap;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nNodeMap.constructor_ = function () {\n\tthis._nodeMap = new TreeMap();\n};\n","import HashSet from '../../../../java/util/HashSet';\nimport Node from './Node';\nimport NodeMap from './NodeMap';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default class PlanarGraph {\n\tconstructor() {\n\t\tPlanarGraph.constructor_.apply(this, arguments);\n\t}\n\tfindNodesOfDegree(degree) {\n\t\tvar nodesFound = new ArrayList();\n\t\tfor (var i = this.nodeIterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\n\t\t}\n\t\treturn nodesFound;\n\t}\n\tdirEdgeIterator() {\n\t\treturn this._dirEdges.iterator();\n\t}\n\tedgeIterator() {\n\t\treturn this._edges.iterator();\n\t}\n\tremove() {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.remove(edge.getDirEdge(0));\n\t\t\tthis.remove(edge.getDirEdge(1));\n\t\t\tthis._edges.remove(edge);\n\t\t\tedge.remove();\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar sym = de.getSym();\n\t\t\tif (sym !== null) sym.setSym(null);\n\t\t\tde.getFromNode().remove(de);\n\t\t\tde.remove();\n\t\t\tthis._dirEdges.remove(de);\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) this.remove(sym);\n\t\t\t\tthis._dirEdges.remove(de);\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tif (edge !== null) {\n\t\t\t\t\tthis._edges.remove(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._nodeMap.remove(node.getCoordinate());\n\t\t\tnode.remove();\n\t\t}\n\t}\n\tfindNode(pt) {\n\t\treturn this._nodeMap.find(pt);\n\t}\n\tgetEdges() {\n\t\treturn this._edges;\n\t}\n\tnodeIterator() {\n\t\treturn this._nodeMap.iterator();\n\t}\n\tcontains() {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet e = arguments[0];\n\t\t\treturn this._edges.contains(e);\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\treturn this._dirEdges.contains(de);\n\t\t}\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tthis._nodeMap.add(node);\n\t\t} else if (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis._edges.add(edge);\n\t\t\tthis.add(edge.getDirEdge(0));\n\t\t\tthis.add(edge.getDirEdge(1));\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis._dirEdges.add(dirEdge);\n\t\t}\n\t}\n\tgetNodes() {\n\t\treturn this._nodeMap.values();\n\t}\n\tgetClass() {\n\t\treturn PlanarGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPlanarGraph.constructor_ = function () {\n\tthis._edges = new HashSet();\n\tthis._dirEdges = new HashSet();\n\tthis._nodeMap = new NodeMap();\n};\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge';\nimport Node from '../../planargraph/Node';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport LineMergeEdge from './LineMergeEdge';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default class LineMergeGraph extends PlanarGraph {\n\tconstructor() {\n\t\tsuper();\n\t\tLineMergeGraph.constructor_.apply(this, arguments);\n\t}\n\taddEdge(lineString) {\n\t\tif (lineString.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n\t\tif (coordinates.length <= 1) return null;\n\t\tvar startCoordinate = coordinates[0];\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\n\t\tvar startNode = this.getNode(startCoordinate);\n\t\tvar endNode = this.getNode(endCoordinate);\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n\t\tvar edge = new LineMergeEdge(lineString);\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\n\t\tthis.add(edge);\n\t}\n\tgetNode(coordinate) {\n\t\tvar node = this.findNode(coordinate);\n\t\tif (node === null) {\n\t\t\tnode = new Node(coordinate);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t}\n\tgetClass() {\n\t\treturn LineMergeGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineMergeGraph.constructor_ = function () {};\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport EdgeString from './EdgeString';\nimport LineMergeGraph from './LineMergeGraph';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport GraphComponent from '../../planargraph/GraphComponent';\nexport default class LineMerger {\n\tconstructor() {\n\t\tLineMerger.constructor_.apply(this, arguments);\n\t}\n\tbuildEdgeStringsForUnprocessedNodes() {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isMarked()) {\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t}\n\tbuildEdgeStringsForNonDegree2Nodes() {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() !== 2) {\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t}\n\tbuildEdgeStringsForObviousStartNodes() {\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\n\t}\n\tgetMergedLineStrings() {\n\t\tthis.merge();\n\t\treturn this._mergedLineStrings;\n\t}\n\tbuildEdgeStringsStartingAt(node) {\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar directedEdge = i.next();\n\t\t\tif (directedEdge.getEdge().isMarked()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n\t\t}\n\t}\n\tmerge() {\n\t\tif (this._mergedLineStrings !== null) {\n\t\t\treturn null;\n\t\t}\n\t\tGraphComponent.setMarked(this._graph.nodeIterator(), false);\n\t\tGraphComponent.setMarked(this._graph.edgeIterator(), false);\n\t\tthis._edgeStrings = new ArrayList();\n\t\tthis.buildEdgeStringsForObviousStartNodes();\n\t\tthis.buildEdgeStringsForIsolatedLoops();\n\t\tthis._mergedLineStrings = new ArrayList();\n\t\tfor (var i = this._edgeStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar edgeString = i.next();\n\t\t\tthis._mergedLineStrings.add(edgeString.toLineString());\n\t\t}\n\t}\n\tbuildEdgeStringStartingWith(start) {\n\t\tvar edgeString = new EdgeString(this._factory);\n\t\tvar current = start;\n\t\tdo {\n\t\t\tedgeString.add(current);\n\t\t\tcurrent.getEdge().setMarked(true);\n\t\t\tcurrent = current.getNext();\n\t\t} while (current !== null && current !== start);\n\t\treturn edgeString;\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply(new (class {\n\t\t\t\tget interfaces_() {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t}\n\t\t\t\tfilter(component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})());\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tthis._mergedLineStrings = null;\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tthis._graph.addEdge(lineString);\n\t\t}\n\t}\n\tbuildEdgeStringsForIsolatedLoops() {\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\n\t}\n\tgetClass() {\n\t\treturn LineMerger;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineMerger.constructor_ = function () {\n\tthis._graph = new LineMergeGraph();\n\tthis._mergedLineStrings = null;\n\tthis._factory = null;\n\tthis._edgeStrings = null;\n};\n","import WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Octant from './Octant';\nimport SegmentString from './SegmentString';\nexport default class BasicSegmentString {\n\tconstructor() {\n\t\tBasicSegmentString.constructor_.apply(this, arguments);\n\t}\n\tgetCoordinates() {\n\t\treturn this._pts;\n\t}\n\tsize() {\n\t\treturn this._pts.length;\n\t}\n\tgetCoordinate(i) {\n\t\treturn this._pts[i];\n\t}\n\tisClosed() {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t}\n\tgetSegmentOctant(index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t}\n\tsetData(data) {\n\t\tthis._data = data;\n\t}\n\tgetData() {\n\t\treturn this._data;\n\t}\n\ttoString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t}\n\tgetClass() {\n\t\treturn BasicSegmentString;\n\t}\n\tget interfaces_() {\n\t\treturn [SegmentString];\n\t}\n}\nBasicSegmentString.constructor_ = function () {\n\tthis._pts = null;\n\tthis._data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n};\n","import SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class InteriorIntersectionFinder {\n\tconstructor() {\n\t\tInteriorIntersectionFinder.constructor_.apply(this, arguments);\n\t}\n\tstatic createAllIntersectionsFinder(li) {\n\t\tvar finder = new InteriorIntersectionFinder(li);\n\t\tfinder.setFindAllIntersections(true);\n\t\treturn finder;\n\t}\n\tstatic createAnyIntersectionFinder(li) {\n\t\treturn new InteriorIntersectionFinder(li);\n\t}\n\tstatic createIntersectionCounter(li) {\n\t\tvar finder = new InteriorIntersectionFinder(li);\n\t\tfinder.setFindAllIntersections(true);\n\t\tfinder.setKeepIntersections(false);\n\t\treturn finder;\n\t}\n\tgetInteriorIntersection() {\n\t\treturn this._interiorIntersection;\n\t}\n\tsetCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n\t\tthis._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n\t}\n\tgetIntersectionSegments() {\n\t\treturn this._intSegments;\n\t}\n\tcount() {\n\t\treturn this._intersectionCount;\n\t}\n\tgetIntersections() {\n\t\treturn this._intersections;\n\t}\n\tsetFindAllIntersections(findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t}\n\tsetKeepIntersections(keepIntersections) {\n\t\tthis._keepIntersections = keepIntersections;\n\t}\n\tprocessIntersections(e0, segIndex0, e1, segIndex1) {\n\t\tif (!this._findAllIntersections && this.hasIntersection()) return null;\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tif (this._isCheckEndSegmentsOnly) {\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n\t\t\tif (!isEndSegPresent) return null;\n\t\t}\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis._intSegments = new Array(4).fill(null);\n\t\t\t\tthis._intSegments[0] = p00;\n\t\t\t\tthis._intSegments[1] = p01;\n\t\t\t\tthis._intSegments[2] = p10;\n\t\t\t\tthis._intSegments[3] = p11;\n\t\t\t\tthis._interiorIntersection = this._li.getIntersection(0);\n\t\t\t\tif (this._keepIntersections) this._intersections.add(this._interiorIntersection);\n\t\t\t\tthis._intersectionCount++;\n\t\t\t}\n\t\t}\n\t}\n\tisEndSegment(segStr, index) {\n\t\tif (index === 0) return true;\n\t\tif (index >= segStr.size() - 2) return true;\n\t\treturn false;\n\t}\n\thasIntersection() {\n\t\treturn this._interiorIntersection !== null;\n\t}\n\tisDone() {\n\t\tif (this._findAllIntersections) return false;\n\t\treturn this._interiorIntersection !== null;\n\t}\n\tgetClass() {\n\t\treturn InteriorIntersectionFinder;\n\t}\n\tget interfaces_() {\n\t\treturn [SegmentIntersector];\n\t}\n}\nInteriorIntersectionFinder.constructor_ = function () {\n\tthis._findAllIntersections = false;\n\tthis._isCheckEndSegmentsOnly = false;\n\tthis._li = null;\n\tthis._interiorIntersection = null;\n\tthis._intSegments = null;\n\tthis._intersections = new ArrayList();\n\tthis._intersectionCount = 0;\n\tthis._keepIntersections = true;\n\tlet li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersection = null;\n};\n","import WKTWriter from '../io/WKTWriter';\nimport MCIndexNoder from './MCIndexNoder';\nimport TopologyException from '../geom/TopologyException';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinder from './InteriorIntersectionFinder';\nexport default class FastNodingValidator {\n\tconstructor() {\n\t\tFastNodingValidator.constructor_.apply(this, arguments);\n\t}\n\tstatic computeIntersections(segStrings) {\n\t\tvar nv = new FastNodingValidator(segStrings);\n\t\tnv.setFindAllIntersections(true);\n\t\tnv.isValid();\n\t\treturn nv.getIntersections();\n\t}\n\texecute() {\n\t\tif (this._segInt !== null) return null;\n\t\tthis.checkInteriorIntersections();\n\t}\n\tgetIntersections() {\n\t\treturn this._segInt.getIntersections();\n\t}\n\tisValid() {\n\t\tthis.execute();\n\t\treturn this._isValid;\n\t}\n\tsetFindAllIntersections(findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t}\n\tcheckInteriorIntersections() {\n\t\tthis._isValid = true;\n\t\tthis._segInt = new InteriorIntersectionFinder(this._li);\n\t\tthis._segInt.setFindAllIntersections(this._findAllIntersections);\n\t\tvar noder = new MCIndexNoder();\n\t\tnoder.setSegmentIntersector(this._segInt);\n\t\tnoder.computeNodes(this._segStrings);\n\t\tif (this._segInt.hasIntersection()) {\n\t\t\tthis._isValid = false;\n\t\t\treturn null;\n\t\t}\n\t}\n\tcheckValid() {\n\t\tthis.execute();\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection());\n\t}\n\tgetErrorMessage() {\n\t\tif (this._isValid) return \"no intersections found\";\n\t\tvar intSegs = this._segInt.getIntersectionSegments();\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n\t}\n\tgetClass() {\n\t\treturn FastNodingValidator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nFastNodingValidator.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tthis._findAllIntersections = false;\n\tthis._segInt = null;\n\tthis._isValid = true;\n\tlet segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n};\n","import BasicSegmentString from '../noding/BasicSegmentString';\nimport FastNodingValidator from '../noding/FastNodingValidator';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class EdgeNodingValidator {\n\tconstructor() {\n\t\tEdgeNodingValidator.constructor_.apply(this, arguments);\n\t}\n\tstatic toSegmentStrings(edges) {\n\t\tvar segStrings = new ArrayList();\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n\t\t}\n\t\treturn segStrings;\n\t}\n\tstatic checkValid(edges) {\n\t\tvar validator = new EdgeNodingValidator(edges);\n\t\tvalidator.checkValid();\n\t}\n\tcheckValid() {\n\t\tthis._nv.checkValid();\n\t}\n\tgetClass() {\n\t\treturn EdgeNodingValidator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeNodingValidator.constructor_ = function () {\n\tthis._nv = null;\n\tlet edges = arguments[0];\n\tthis._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\n","import GeometryFactory from '../GeometryFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class GeometryCollectionMapper {\n\tconstructor() {\n\t\tGeometryCollectionMapper.constructor_.apply(this, arguments);\n\t}\n\tstatic map(gc, op) {\n\t\tvar mapper = new GeometryCollectionMapper(op);\n\t\treturn mapper.map(gc);\n\t}\n\tmap(gc) {\n\t\tvar mapped = new ArrayList();\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = this._mapOp.map(gc.getGeometryN(i));\n\t\t\tif (!g.isEmpty()) mapped.add(g);\n\t\t}\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n\t}\n\tgetClass() {\n\t\treturn GeometryCollectionMapper;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryCollectionMapper.constructor_ = function () {\n\tthis._mapOp = null;\n\tlet mapOp = arguments[0];\n\tthis._mapOp = mapOp;\n};\n","export default class MapOp {\n\tconstructor() {\n\t\tMapOp.constructor_.apply(this, arguments);\n\t}\n\tmap(g) {}\n\tgetClass() {\n\t\treturn MapOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nMapOp.constructor_ = function () {};\n","import ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport OverlayOp from './OverlayOp';\nexport default class LineBuilder {\n\tconstructor() {\n\t\tLineBuilder.constructor_.apply(this, arguments);\n\t}\n\tcollectLines(opCode) {\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tthis.collectLineEdge(de, opCode, this._lineEdgesList);\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList);\n\t\t}\n\t}\n\tlabelIsolatedLine(e, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n\t\te.getLabel().setLocation(targetIndex, loc);\n\t}\n\tbuild(opCode) {\n\t\tthis.findCoveredLineEdges();\n\t\tthis.collectLines(opCode);\n\t\tthis.buildLines(opCode);\n\t\treturn this._resultLineList;\n\t}\n\tcollectLineEdge(de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tvar e = de.getEdge();\n\t\tif (de.isLineEdge()) {\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n\t\t\t\tedges.add(e);\n\t\t\t\tde.setVisitedEdge(true);\n\t\t\t}\n\t\t}\n\t}\n\tfindCoveredLineEdges() {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().findCoveredLineEdges();\n\t\t}\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar e = de.getEdge();\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\n\t\t\t\tvar isCovered = this._op.isCoveredByA(de.getCoordinate());\n\t\t\t\te.setCovered(isCovered);\n\t\t\t}\n\t\t}\n\t}\n\tlabelIsolatedLines(edgesList) {\n\t\tfor (var it = edgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1);\n\t\t\t}\n\t\t}\n\t}\n\tbuildLines(opCode) {\n\t\tfor (var it = this._lineEdgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tvar line = this._geometryFactory.createLineString(e.getCoordinates());\n\t\t\tthis._resultLineList.add(line);\n\t\t\te.setInResult(true);\n\t\t}\n\t}\n\tcollectBoundaryTouchEdge(de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tif (de.isLineEdge()) return null;\n\t\tif (de.isVisited()) return null;\n\t\tif (de.isInteriorAreaEdge()) return null;\n\t\tif (de.getEdge().isInResult()) return null;\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n\t\t\tedges.add(de.getEdge());\n\t\t\tde.setVisitedEdge(true);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn LineBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineBuilder.constructor_ = function () {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._ptLocator = null;\n\tthis._lineEdgesList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n\tthis._ptLocator = ptLocator;\n};\n","import ArrayList from '../../../../../java/util/ArrayList';\nimport OverlayOp from './OverlayOp';\nexport default class PointBuilder {\n\tconstructor() {\n\t\tPointBuilder.constructor_.apply(this, arguments);\n\t}\n\tfilterCoveredNodeToPoint(n) {\n\t\tvar coord = n.getCoordinate();\n\t\tif (!this._op.isCoveredByLA(coord)) {\n\t\t\tvar pt = this._geometryFactory.createPoint(coord);\n\t\t\tthis._resultPointList.add(pt);\n\t\t}\n\t}\n\textractNonCoveredResultNodes(opCode) {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar n = nodeit.next();\n\t\t\tif (n.isInResult()) continue;\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n\t\t\t\tvar label = n.getLabel();\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbuild(opCode) {\n\t\tthis.extractNonCoveredResultNodes(opCode);\n\t\treturn this._resultPointList;\n\t}\n\tgetClass() {\n\t\treturn PointBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPointBuilder.constructor_ = function () {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._resultPointList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n};\n","import LineString from '../../../geom/LineString';\nimport CoordinateList from '../../../geom/CoordinateList';\nimport Coordinate from '../../../geom/Coordinate';\nimport Double from '../../../../../../java/lang/Double';\nimport LineSegment from '../../../geom/LineSegment';\nexport default class LineStringSnapper {\n\tconstructor() {\n\t\tLineStringSnapper.constructor_.apply(this, arguments);\n\t}\n\tstatic isClosed(pts) {\n\t\tif (pts.length <= 1) return false;\n\t\treturn pts[0].equals2D(pts[pts.length - 1]);\n\t}\n\tsnapVertices(srcCoords, snapPts) {\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar srcPt = srcCoords.get(i);\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\n\t\t\tif (snapVert !== null) {\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n\t\t\t}\n\t\t}\n\t}\n\tfindSnapForVertex(pt, snapPts) {\n\t\tfor (var i = 0; i < snapPts.length; i++) {\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\n\t\t\tif (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i];\n\t\t}\n\t\treturn null;\n\t}\n\tsnapTo(snapPts) {\n\t\tvar coordList = new CoordinateList(this._srcPts);\n\t\tthis.snapVertices(coordList, snapPts);\n\t\tthis.snapSegments(coordList, snapPts);\n\t\tvar newPts = coordList.toCoordinateArray();\n\t\treturn newPts;\n\t}\n\tsnapSegments(srcCoords, snapPts) {\n\t\tif (snapPts.length === 0) return null;\n\t\tvar distinctPtCount = snapPts.length;\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\n\t\t\tvar snapPt = snapPts[i];\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\t\t\tif (index >= 0) {\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\n\t\t\t}\n\t\t}\n\t}\n\tfindSegmentIndexToSnap(snapPt, srcCoords) {\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tvar snapIndex = -1;\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\n\t\t\tthis._seg.p0 = srcCoords.get(i);\n\t\t\tthis._seg.p1 = srcCoords.get(i + 1);\n\t\t\tif (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) {\n\t\t\t\tif (this._allowSnappingToSourceVertices) continue; else return -1;\n\t\t\t}\n\t\t\tvar dist = this._seg.distance(snapPt);\n\t\t\tif (dist < this._snapTolerance && dist < minDist) {\n\t\t\t\tminDist = dist;\n\t\t\t\tsnapIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn snapIndex;\n\t}\n\tsetAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n\t\tthis._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n\t}\n\tgetClass() {\n\t\treturn LineStringSnapper;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineStringSnapper.constructor_ = function () {\n\tthis._snapTolerance = 0.0;\n\tthis._srcPts = null;\n\tthis._seg = new LineSegment();\n\tthis._allowSnappingToSourceVertices = false;\n\tthis._isClosed = false;\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n\t\tlet srcLine = arguments[0], snapTolerance = arguments[1];\n\t\tLineStringSnapper.constructor_.call(this, srcLine.getCoordinates(), snapTolerance);\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n\t\tlet srcPts = arguments[0], snapTolerance = arguments[1];\n\t\tthis._srcPts = srcPts;\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\n\t\tthis._snapTolerance = snapTolerance;\n\t}\n};\n","import TreeSet from '../../../../../../java/util/TreeSet';\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer';\nimport hasInterface from '../../../../../../hasInterface';\nimport Double from '../../../../../../java/lang/Double';\nimport LineStringSnapper from './LineStringSnapper';\nimport PrecisionModel from '../../../geom/PrecisionModel';\nimport Polygonal from '../../../geom/Polygonal';\nexport default class GeometrySnapper {\n\tconstructor() {\n\t\tGeometrySnapper.constructor_.apply(this, arguments);\n\t}\n\tstatic snap(g0, g1, snapTolerance) {\n\t\tvar snapGeom = new Array(2).fill(null);\n\t\tvar snapper0 = new GeometrySnapper(g0);\n\t\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n\t\tvar snapper1 = new GeometrySnapper(g1);\n\t\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n\t\treturn snapGeom;\n\t}\n\tstatic computeOverlaySnapTolerance() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet g = arguments[0];\n\t\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n\t\t\tvar pm = g.getPrecisionModel();\n\t\t\tif (pm.getType() === PrecisionModel.FIXED) {\n\t\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n\t\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n\t\t\t}\n\t\t\treturn snapTolerance;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n\t\t}\n\t}\n\tstatic computeSizeBasedSnapTolerance(g) {\n\t\tvar env = g.getEnvelopeInternal();\n\t\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n\t\treturn snapTol;\n\t}\n\tstatic snapToSelf(geom, snapTolerance, cleanResult) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\n\t}\n\tsnapTo(snapGeom, snapTolerance) {\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\n\t\treturn snapTrans.transform(this._srcGeom);\n\t}\n\tsnapToSelf(snapTolerance, cleanResult) {\n\t\tvar snapPts = this.extractTargetCoordinates(this._srcGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n\t\tvar snappedGeom = snapTrans.transform(this._srcGeom);\n\t\tvar result = snappedGeom;\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\n\t\t\tresult = snappedGeom.buffer(0);\n\t\t}\n\t\treturn result;\n\t}\n\tcomputeSnapTolerance(ringPts) {\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\n\t\tvar snapTol = minSegLen / 10;\n\t\treturn snapTol;\n\t}\n\textractTargetCoordinates(g) {\n\t\tvar ptSet = new TreeSet();\n\t\tvar pts = g.getCoordinates();\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tptSet.add(pts[i]);\n\t\t}\n\t\treturn ptSet.toArray(new Array(0).fill(null));\n\t}\n\tcomputeMinimumSegmentLength(pts) {\n\t\tvar minSegLen = Double.MAX_VALUE;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\n\t\t}\n\t\treturn minSegLen;\n\t}\n\tgetClass() {\n\t\treturn GeometrySnapper;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometrySnapper.constructor_ = function () {\n\tthis._srcGeom = null;\n\tlet srcGeom = arguments[0];\n\tthis._srcGeom = srcGeom;\n};\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\nclass SnapTransformer extends GeometryTransformer {\n\tconstructor() {\n\t\tsuper();\n\t\tSnapTransformer.constructor_.apply(this, arguments);\n\t}\n\tsnapLine(srcPts, snapPts) {\n\t\tvar snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n\t\tsnapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n\t\treturn snapper.snapTo(snapPts);\n\t}\n\ttransformCoordinates(coords, parent) {\n\t\tvar srcPts = coords.toCoordinateArray();\n\t\tvar newPts = this.snapLine(srcPts, this._snapPts);\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t}\n\tgetClass() {\n\t\treturn SnapTransformer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSnapTransformer.constructor_ = function () {\n\tthis._snapTolerance = null;\n\tthis._snapPts = null;\n\tthis._isSelfSnap = false;\n\tif (arguments.length === 2) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t} else if (arguments.length === 3) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t\tthis._isSelfSnap = isSelfSnap;\n\t}\n};\n","import Double from '../../../../java/lang/Double';\nimport Long from '../../../../java/lang/Long';\nexport default class CommonBits {\n\tconstructor() {\n\t\tthis._isFirst = true;\n\t\tthis._commonMantissaBitsCount = 53;\n\t\tthis._commonBits = new Long();\n\t\tthis._commonSignExp = null;\n\t}\n\tgetCommon() {\n\t\treturn Double.longBitsToDouble(this._commonBits);\n\t}\n\tadd(num) {\n\t\tvar numBits = Double.doubleToLongBits(num);\n\t\tif (this._isFirst) {\n\t\t\tthis._commonBits = numBits;\n\t\t\tthis._commonSignExp = CommonBits.signExpBits(this._commonBits);\n\t\t\tthis._isFirst = false;\n\t\t\treturn null;\n\t\t}\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\n\t\tif (numSignExp !== this._commonSignExp) {\n\t\t\tthis._commonBits.high = 0 | 0;\n\t\t\tthis._commonBits.low = 0 | 0;\n\t\t\treturn null;\n\t\t}\n\t\tthis._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n\t\tthis._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n\t}\n\ttoString() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet bits = arguments[0];\n\t\t\tvar x = Double.longBitsToDouble(bits);\n\t\t\tvar numStr = Long.toBinaryString(bits);\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n\t\t\treturn str;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn CommonBits;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n\tstatic getBit(bits, i) {\n\t\tvar mask = (1 << (i % 32));\n\t\tif (i < 32) {\n\t\t\treturn (bits.low & mask) != 0 ? 1 : 0;\n\t\t}\n\t\treturn (bits.high & mask) != 0 ? 1 : 0;\n\t}\n\tstatic signExpBits(num) {\n\t\treturn num.high >>> 20;\n\t}\n\tstatic zeroLowerBits(bits, nBits) {\n\t\tvar prop = 'low';\n\t\tif (nBits > 32) {\n\t\t\tbits.low = 0 | 0;\n\t\t\tnBits %= 32;\n\t\t\tprop = 'high';\n\t\t}\n\t\tif (nBits > 0) {\n\t\t\tvar mask = (nBits < 32) ? (~((1 << nBits) - 1)) : 0;\n\t\t\tbits[prop] &= mask;\n\t\t}\n\t\treturn bits;\n\t}\n\tstatic numCommonMostSigMantissaBits (num1, num2) {\n\t\tvar count = 0;\n\t\tfor (var i = 52; i >= 0; i--) {\n\t\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n\t\t\tcount++;\n\t\t}\n\t\treturn 52;\n\t}\n}\n\n","import CommonBits from './CommonBits';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport Coordinate from '../geom/Coordinate';\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter';\nexport default class CommonBitsRemover {\n\tconstructor() {\n\t\tCommonBitsRemover.constructor_.apply(this, arguments);\n\t}\n\taddCommonBits(geom) {\n\t\tvar trans = new Translater(this._commonCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t}\n\tremoveCommonBits(geom) {\n\t\tif (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom;\n\t\tvar invCoord = new Coordinate(this._commonCoord);\n\t\tinvCoord.x = -invCoord.x;\n\t\tinvCoord.y = -invCoord.y;\n\t\tvar trans = new Translater(invCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t\treturn geom;\n\t}\n\tgetCommonCoordinate() {\n\t\treturn this._commonCoord;\n\t}\n\tadd(geom) {\n\t\tgeom.apply(this._ccFilter);\n\t\tthis._commonCoord = this._ccFilter.getCommonCoordinate();\n\t}\n\tgetClass() {\n\t\treturn CommonBitsRemover;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass CommonCoordinateFilter {\n\tconstructor() {\n\t\tCommonCoordinateFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(coord) {\n\t\tthis._commonBitsX.add(coord.x);\n\t\tthis._commonBitsY.add(coord.y);\n\t}\n\tgetCommonCoordinate() {\n\t\treturn new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon());\n\t}\n\tgetClass() {\n\t\treturn CommonCoordinateFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateFilter];\n\t}\n}\nCommonCoordinateFilter.constructor_ = function () {\n\tthis._commonBitsX = new CommonBits();\n\tthis._commonBitsY = new CommonBits();\n};\nclass Translater {\n\tconstructor() {\n\t\tTranslater.constructor_.apply(this, arguments);\n\t}\n\tfilter(seq, i) {\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\n\t\tseq.setOrdinate(i, 0, xp);\n\t\tseq.setOrdinate(i, 1, yp);\n\t}\n\tisDone() {\n\t\treturn false;\n\t}\n\tisGeometryChanged() {\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn Translater;\n\t}\n\tget interfaces_() {\n\t\treturn [CoordinateSequenceFilter];\n\t}\n}\nTranslater.constructor_ = function () {\n\tthis.trans = null;\n\tlet trans = arguments[0];\n\tthis.trans = trans;\n};\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\nCommonBitsRemover.Translater = Translater;\nCommonBitsRemover.constructor_ = function () {\n\tthis._commonCoord = null;\n\tthis._ccFilter = new CommonCoordinateFilter();\n};\n","import GeometrySnapper from './GeometrySnapper';\nimport System from '../../../../../../java/lang/System';\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover';\nimport OverlayOp from '../OverlayOp';\nexport default class SnapOverlayOp {\n\tconstructor() {\n\t\tSnapOverlayOp.constructor_.apply(this, arguments);\n\t}\n\tstatic overlayOp(g0, g1, opCode) {\n\t\tvar op = new SnapOverlayOp(g0, g1);\n\t\treturn op.getResultGeometry(opCode);\n\t}\n\tstatic union(g0, g1) {\n\t\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n\t}\n\tstatic intersection(g0, g1) {\n\t\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n\t}\n\tstatic symDifference(g0, g1) {\n\t\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n\t}\n\tstatic difference(g0, g1) {\n\t\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n\t}\n\tselfSnap(geom) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\tvar snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n\t\treturn snapGeom;\n\t}\n\tremoveCommonBits(geom) {\n\t\tthis._cbr = new CommonBitsRemover();\n\t\tthis._cbr.add(geom[0]);\n\t\tthis._cbr.add(geom[1]);\n\t\tvar remGeom = new Array(2).fill(null);\n\t\tremGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n\t\tremGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n\t\treturn remGeom;\n\t}\n\tprepareResult(geom) {\n\t\tthis._cbr.addCommonBits(geom);\n\t\treturn geom;\n\t}\n\tgetResultGeometry(opCode) {\n\t\tvar prepGeom = this.snap(this._geom);\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n\t\treturn this.prepareResult(result);\n\t}\n\tcheckValid(g) {\n\t\tif (!g.isValid()) {\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\n\t\t}\n\t}\n\tcomputeSnapTolerance() {\n\t\tthis._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n\t}\n\tsnap(geom) {\n\t\tvar remGeom = this.removeCommonBits(geom);\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n\t\treturn snapGeom;\n\t}\n\tgetClass() {\n\t\treturn SnapOverlayOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSnapOverlayOp.constructor_ = function () {\n\tthis._geom = new Array(2).fill(null);\n\tthis._snapTolerance = null;\n\tthis._cbr = null;\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n\tthis.computeSnapTolerance();\n};\n","import SnapOverlayOp from './SnapOverlayOp';\nimport RuntimeException from '../../../../../../java/lang/RuntimeException';\nimport OverlayOp from '../OverlayOp';\nexport default class SnapIfNeededOverlayOp {\n\tconstructor() {\n\t\tSnapIfNeededOverlayOp.constructor_.apply(this, arguments);\n\t}\n\tstatic overlayOp(g0, g1, opCode) {\n\t\tvar op = new SnapIfNeededOverlayOp(g0, g1);\n\t\treturn op.getResultGeometry(opCode);\n\t}\n\tstatic union(g0, g1) {\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n\t}\n\tstatic intersection(g0, g1) {\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n\t}\n\tstatic symDifference(g0, g1) {\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n\t}\n\tstatic difference(g0, g1) {\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n\t}\n\tgetResultGeometry(opCode) {\n\t\tvar result = null;\n\t\tvar isSuccess = false;\n\t\tvar savedException = null;\n\t\ttry {\n\t\t\tresult = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\tvar isValid = true;\n\t\t\tif (isValid) isSuccess = true;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tsavedException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (!isSuccess) {\n\t\t\ttry {\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\t\tthrow savedException;\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t}\n\t\treturn result;\n\t}\n\tgetClass() {\n\t\treturn SnapIfNeededOverlayOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSnapIfNeededOverlayOp.constructor_ = function () {\n\tthis._geom = new Array(2).fill(null);\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n};\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default class GeometryGraphOperation {\n\tconstructor() {\n\t\tGeometryGraphOperation.constructor_.apply(this, arguments);\n\t}\n\tgetArgGeometry(i) {\n\t\treturn this._arg[i].getGeometry();\n\t}\n\tsetComputationPrecision(pm) {\n\t\tthis._resultPrecisionModel = pm;\n\t\tthis._li.setPrecisionModel(this._resultPrecisionModel);\n\t}\n\tgetClass() {\n\t\treturn GeometryGraphOperation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryGraphOperation.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._resultPrecisionModel = null;\n\tthis._arg = null;\n\tif (arguments.length === 1) {\n\t\tlet g0 = arguments[0];\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\n\t\tthis._arg = new Array(1).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0);\n\t\t;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.constructor_.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tif (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel());\n\t\tthis._arg = new Array(2).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\n\t\tthis._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n\t}\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator';\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper';\nimport PolygonBuilder from './PolygonBuilder';\nimport Position from '../../geomgraph/Position';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport MapOp from '../../geom/util/MapOp';\nimport LineBuilder from './LineBuilder';\nimport PointBuilder from './PointBuilder';\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from './OverlayNodeFactory';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default class OverlayOp extends GeometryGraphOperation {\n\tconstructor() {\n\t\tsuper();\n\t\tOverlayOp.constructor_.apply(this, arguments);\n\t}\n\tstatic overlayOp(geom0, geom1, opCode) {\n\t\tvar gov = new OverlayOp(geom0, geom1);\n\t\tvar geomOv = gov.getResultGeometry(opCode);\n\t\treturn geomOv;\n\t}\n\tstatic union(geom, other) {\n\t\tif (geom.isEmpty() || other.isEmpty()) {\n\t\t\tif (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory());\n\t\t\tif (geom.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return geom.copy();\n\t\t}\n\t\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION);\n\t}\n\tstatic intersection(geom, other) {\n\t\tif (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory());\n\t\tif (geom.isGeometryCollection()) {\n\t\t\tvar g2 = other;\n\t\t\treturn GeometryCollectionMapper.map(geom, new (class {\n\t\t\t\tget interfaces_() {\n\t\t\t\t\treturn [MapOp];\n\t\t\t\t}\n\t\t\t\tmap(g) {\n\t\t\t\t\treturn OverlayOp.intersection(g, g2);\n\t\t\t\t}\n\t\t\t})());\n\t\t}\n\t\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION);\n\t}\n\tstatic symDifference(geom, other) {\n\t\tif (geom.isEmpty() || other.isEmpty()) {\n\t\t\tif (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory());\n\t\t\tif (geom.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return geom.copy();\n\t\t}\n\t\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE);\n\t}\n\tstatic resultDimension(opCode, g0, g1) {\n\t\tvar dim0 = g0.getDimension();\n\t\tvar dim1 = g1.getDimension();\n\t\tvar resultDimension = -1;\n\t\tswitch (opCode) {\n\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\tresultDimension = Math.min(dim0, dim1);\n\t\t\t\tbreak;\n\t\t\tcase OverlayOp.UNION:\n\t\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\t\tbreak;\n\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\tresultDimension = dim0;\n\t\t\t\tbreak;\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn resultDimension;\n\t}\n\tstatic createEmptyResult(overlayOpCode, a, b, geomFact) {\n\t\tvar result = null;\n\t\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n\t\t\tcase -1:\n\t\t\t\tresult = geomFact.createGeometryCollection();\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tresult = geomFact.createPoint();\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tresult = geomFact.createLineString();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tresult = geomFact.createPolygon();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn result;\n\t}\n\tstatic difference(geom, other) {\n\t\tif (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory());\n\t\tif (other.isEmpty()) return geom.copy();\n\t\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE);\n\t}\n\tstatic isResultOfOp() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet label = arguments[0], opCode = arguments[1];\n\t\t\tvar loc0 = label.getLocation(0);\n\t\t\tvar loc1 = label.getLocation(1);\n\t\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2];\n\t\t\tif (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\n\t\t\tif (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\n\t\t\tswitch (overlayOpCode) {\n\t\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\t\treturn loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t\t\tcase OverlayOp.UNION:\n\t\t\t\t\treturn loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\n\t\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\n\t\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tinsertUniqueEdge(e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\tvar depth = existingEdge.getDepth();\n\t\t\tif (depth.isNull()) {\n\t\t\t\tdepth.add(existingLabel);\n\t\t\t}\n\t\t\tdepth.add(labelToMerge);\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t}\n\t}\n\tgetGraph() {\n\t\treturn this._graph;\n\t}\n\tcancelDuplicateResultEdges() {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.isInResult() && sym.isInResult()) {\n\t\t\t\tde.setInResult(false);\n\t\t\t\tsym.setInResult(false);\n\t\t\t}\n\t\t}\n\t}\n\tisCoveredByLA(coord) {\n\t\tif (this.isCovered(coord, this._resultLineList)) return true;\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t}\n\tcomputeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n\t\tvar geomList = new ArrayList();\n\t\tgeomList.addAll(resultPointList);\n\t\tgeomList.addAll(resultLineList);\n\t\tgeomList.addAll(resultPolyList);\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact);\n\t\treturn this._geomFact.buildGeometry(geomList);\n\t}\n\tmergeSymLabels() {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().mergeSymLabels();\n\t\t}\n\t}\n\tisCovered(coord, geomList) {\n\t\tfor (var it = geomList.iterator(); it.hasNext(); ) {\n\t\t\tvar geom = it.next();\n\t\t\tvar loc = this._ptLocator.locate(coord, geom);\n\t\t\tif (loc !== Location.EXTERIOR) return true;\n\t\t}\n\t\treturn false;\n\t}\n\treplaceCollapsedEdges() {\n\t\tvar newEdges = new ArrayList();\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.isCollapsed()) {\n\t\t\t\tit.remove();\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\n\t\t\t}\n\t\t}\n\t\tthis._edgeList.addAll(newEdges);\n\t}\n\tupdateNodeLabelling() {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tvar lbl = node.getEdges().getLabel();\n\t\t\tnode.getLabel().merge(lbl);\n\t\t}\n\t}\n\tgetResultGeometry(overlayOpCode) {\n\t\tthis.computeOverlay(overlayOpCode);\n\t\treturn this._resultGeom;\n\t}\n\tinsertUniqueEdges(edges) {\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.insertUniqueEdge(e);\n\t\t}\n\t}\n\tcomputeOverlay(opCode) {\n\t\tthis.copyPoints(0);\n\t\tthis.copyPoints(1);\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tthis._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n\t\tvar baseSplitEdges = new ArrayList();\n\t\tthis._arg[0].computeSplitEdges(baseSplitEdges);\n\t\tthis._arg[1].computeSplitEdges(baseSplitEdges);\n\t\tvar splitEdges = baseSplitEdges;\n\t\tthis.insertUniqueEdges(baseSplitEdges);\n\t\tthis.computeLabelsFromDepths();\n\t\tthis.replaceCollapsedEdges();\n\t\tEdgeNodingValidator.checkValid(this._edgeList.getEdges());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tthis.computeLabelling();\n\t\tthis.labelIncompleteNodes();\n\t\tthis.findResultAreaEdges(opCode);\n\t\tthis.cancelDuplicateResultEdges();\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tpolyBuilder.add(this._graph);\n\t\tthis._resultPolyList = polyBuilder.getPolygons();\n\t\tvar lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultLineList = lineBuilder.build(opCode);\n\t\tvar pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultPointList = pointBuilder.build(opCode);\n\t\tthis._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n\t}\n\tlabelIncompleteNode(n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setLocation(targetIndex, loc);\n\t}\n\tcopyPoints(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._graph.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t}\n\tfindResultAreaEdges(opCode) {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t}\n\tcomputeLabelsFromDepths() {\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar lbl = e.getLabel();\n\t\t\tvar depth = e.getDepth();\n\t\t\tif (!depth.isNull()) {\n\t\t\t\tdepth.normalize();\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\n\t\t\t\t\t\t\tlbl.toLine(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcomputeLabelling() {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t\tthis.mergeSymLabels();\n\t\tthis.updateNodeLabelling();\n\t}\n\tlabelIncompleteNodes() {\n\t\tvar nodeCount = 0;\n\t\tfor (var ni = this._graph.getNodes().iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tnodeCount++;\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1);\n\t\t\t}\n\t\t\tn.getEdges().updateLabelling(label);\n\t\t}\n\t}\n\tisCoveredByA(coord) {\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn OverlayOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nOverlayOp.constructor_ = function () {\n\tthis._ptLocator = new PointLocator();\n\tthis._geomFact = null;\n\tthis._resultGeom = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tthis._resultPolyList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tthis._resultPointList = new ArrayList();\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tGeometryGraphOperation.constructor_.call(this, g0, g1);\n\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\tthis._geomFact = g0.getFactory();\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n","import DirectedEdge from '../../planargraph/DirectedEdge';\nexport default class PolygonizeDirectedEdge extends DirectedEdge {\n\tconstructor() {\n\t\tsuper();\n\t\tPolygonizeDirectedEdge.constructor_.apply(this, arguments);\n\t}\n\tgetNext() {\n\t\treturn this._next;\n\t}\n\tisInRing() {\n\t\treturn this._edgeRing !== null;\n\t}\n\tsetRing(edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t}\n\tsetLabel(label) {\n\t\tthis._label = label;\n\t}\n\tgetLabel() {\n\t\treturn this._label;\n\t}\n\tsetNext(next) {\n\t\tthis._next = next;\n\t}\n\tgetRing() {\n\t\treturn this._edgeRing;\n\t}\n\tgetClass() {\n\t\treturn PolygonizeDirectedEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPolygonizeDirectedEdge.constructor_ = function () {\n\tthis._edgeRing = null;\n\tthis._next = null;\n\tthis._label = -1;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.constructor_.call(this, from, to, directionPt, edgeDirection);\n};\n","import Edge from '../../planargraph/Edge';\nexport default class PolygonizeEdge extends Edge {\n\tconstructor() {\n\t\tsuper();\n\t\tPolygonizeEdge.constructor_.apply(this, arguments);\n\t}\n\tgetLine() {\n\t\treturn this._line;\n\t}\n\tgetClass() {\n\t\treturn PolygonizeEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPolygonizeEdge.constructor_ = function () {\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport PointLocation from '../../algorithm/PointLocation';\nimport LinearRing from '../../geom/LinearRing';\nimport Exception from '../../../../../java/lang/Exception';\nimport Orientation from '../../algorithm/Orientation';\nimport System from '../../../../../java/lang/System';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Assert from '../../util/Assert';\nexport default class EdgeRing {\n\tconstructor() {\n\t\tEdgeRing.constructor_.apply(this, arguments);\n\t}\n\tstatic findDirEdgesInRing(startDE) {\n\t\tvar de = startDE;\n\t\tvar edges = new ArrayList();\n\t\tdo {\n\t\t\tedges.add(de);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t\treturn edges;\n\t}\n\tstatic addEdge(coords, isForward, coordList) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tcoordList.add(coords[i], false);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = coords.length - 1; i >= 0; i--) {\n\t\t\t\tcoordList.add(coords[i], false);\n\t\t\t}\n\t\t}\n\t}\n\tstatic findEdgeRingContaining(testEr, shellList) {\n\t\tvar testRing = testEr.getRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minShellEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryShellRing = tryShell.getRing();\n\t\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\n\t\t\tif (tryShellEnv.equals(testEnv)) continue;\n\t\t\tif (!tryShellEnv.contains(testEnv)) continue;\n\t\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n\t\t\tvar isContained = false;\n\t\t\tif (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t}\n\tisIncluded() {\n\t\treturn this._isIncluded;\n\t}\n\tgetCoordinates() {\n\t\tif (this._ringPts === null) {\n\t\t\tvar coordList = new CoordinateList();\n\t\t\tfor (var i = this._deList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tEdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n\t\t\t}\n\t\t\tthis._ringPts = coordList.toCoordinateArray();\n\t\t}\n\t\treturn this._ringPts;\n\t}\n\tisIncludedSet() {\n\t\treturn this._isIncludedSet;\n\t}\n\tisValid() {\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length <= 3) return false;\n\t\tthis.getRing();\n\t\treturn this._ring.isValid();\n\t}\n\tbuild(startDE) {\n\t\tvar de = startDE;\n\t\tdo {\n\t\t\tthis.add(de);\n\t\t\tde.setRing(this);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t}\n\tisOuterHole() {\n\t\tif (!this._isHole) return false;\n\t\treturn !this.hasShell();\n\t}\n\tgetPolygon() {\n\t\tvar holeLR = null;\n\t\tif (this._holes !== null) {\n\t\t\tholeLR = new Array(this._holes.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\t\tholeLR[i] = this._holes.get(i);\n\t\t\t}\n\t\t}\n\t\tvar poly = this._factory.createPolygon(this._ring, holeLR);\n\t\treturn poly;\n\t}\n\tisHole() {\n\t\treturn this._isHole;\n\t}\n\tisProcessed() {\n\t\treturn this._isProcessed;\n\t}\n\taddHole() {\n\t\tif (arguments[0] instanceof LinearRing) {\n\t\t\tlet hole = arguments[0];\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t} else if (arguments[0] instanceof EdgeRing) {\n\t\t\tlet holeER = arguments[0];\n\t\t\tholeER.setShell(this);\n\t\t\tvar hole = holeER.getRing();\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t}\n\t}\n\tsetIncluded(isIncluded) {\n\t\tthis._isIncluded = isIncluded;\n\t\tthis._isIncludedSet = true;\n\t}\n\tgetOuterHole() {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjRing = de.getSym().getRing();\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\n\t\t}\n\t\treturn null;\n\t}\n\tcomputeHole() {\n\t\tvar ring = this.getRing();\n\t\tthis._isHole = Orientation.isCCW(ring.getCoordinates());\n\t}\n\thasShell() {\n\t\treturn this._shell !== null;\n\t}\n\tisOuterShell() {\n\t\treturn this.getOuterHole() !== null;\n\t}\n\tgetLineString() {\n\t\tthis.getCoordinates();\n\t\treturn this._factory.createLineString(this._ringPts);\n\t}\n\ttoString() {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n\t}\n\tgetShell() {\n\t\tif (this.isHole()) return this._shell;\n\t\treturn this;\n\t}\n\tadd(de) {\n\t\tthis._deList.add(de);\n\t}\n\tgetRing() {\n\t\tif (this._ring !== null) return this._ring;\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length < 3) System.out.println(this._ringPts);\n\t\ttry {\n\t\t\tthis._ring = this._factory.createLinearRing(this._ringPts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tSystem.out.println(this._ringPts);\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn this._ring;\n\t}\n\tupdateIncluded() {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tsetShell(shell) {\n\t\tthis._shell = shell;\n\t}\n\tsetProcessed(isProcessed) {\n\t\tthis._isProcessed = isProcessed;\n\t}\n\tgetClass() {\n\t\treturn EdgeRing;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass EnvelopeComparator {\n\tconstructor() {\n\t\tEnvelopeComparator.constructor_.apply(this, arguments);\n\t}\n\tcompare(obj0, obj1) {\n\t\tvar r0 = obj0;\n\t\tvar r1 = obj1;\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n\t}\n\tgetClass() {\n\t\treturn EnvelopeComparator;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparator];\n\t}\n}\nEnvelopeComparator.constructor_ = function () {};\nEdgeRing.EnvelopeComparator = EnvelopeComparator;\nEdgeRing.constructor_ = function () {\n\tthis._factory = null;\n\tthis._deList = new ArrayList();\n\tthis._lowestEdge = null;\n\tthis._ring = null;\n\tthis._ringPts = null;\n\tthis._holes = null;\n\tthis._shell = null;\n\tthis._isHole = null;\n\tthis._isProcessed = false;\n\tthis._isIncludedSet = false;\n\tthis._isIncluded = false;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n};\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge';\nimport HashSet from '../../../../../java/util/HashSet';\nimport Stack from '../../../../../java/util/Stack';\nimport Node from '../../planargraph/Node';\nimport PolygonizeEdge from './PolygonizeEdge';\nimport EdgeRing from './EdgeRing';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default class PolygonizeGraph extends PlanarGraph {\n\tconstructor() {\n\t\tsuper();\n\t\tPolygonizeGraph.constructor_.apply(this, arguments);\n\t}\n\tstatic findLabeledEdgeRings(dirEdges) {\n\t\tvar edgeRingStarts = new ArrayList();\n\t\tvar currLabel = 1;\n\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.getLabel() >= 0) continue;\n\t\t\tedgeRingStarts.add(de);\n\t\t\tvar edges = EdgeRing.findDirEdgesInRing(de);\n\t\t\tPolygonizeGraph.label(edges, currLabel);\n\t\t\tcurrLabel++;\n\t\t}\n\t\treturn edgeRingStarts;\n\t}\n\tstatic getDegreeNonDeleted(node) {\n\t\tvar edges = node.getOutEdges().getEdges();\n\t\tvar degree = 0;\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isMarked()) degree++;\n\t\t}\n\t\treturn degree;\n\t}\n\tstatic deleteAllEdges(node) {\n\t\tvar edges = node.getOutEdges().getEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tde.setMarked(true);\n\t\t\tvar sym = de.getSym();\n\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t}\n\t}\n\tstatic label(dirEdges, label) {\n\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tde.setLabel(label);\n\t\t}\n\t}\n\tstatic computeNextCWEdges(node) {\n\t\tvar deStar = node.getOutEdges();\n\t\tvar startDE = null;\n\t\tvar prevDE = null;\n\t\tfor (var i = deStar.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar outDE = i.next();\n\t\t\tif (outDE.isMarked()) continue;\n\t\t\tif (startDE === null) startDE = outDE;\n\t\t\tif (prevDE !== null) {\n\t\t\t\tvar sym = prevDE.getSym();\n\t\t\t\tsym.setNext(outDE);\n\t\t\t}\n\t\t\tprevDE = outDE;\n\t\t}\n\t\tif (prevDE !== null) {\n\t\t\tvar sym = prevDE.getSym();\n\t\t\tsym.setNext(startDE);\n\t\t}\n\t}\n\tstatic computeNextCCWEdges(node, label) {\n\t\tvar deStar = node.getOutEdges();\n\t\tvar firstOutDE = null;\n\t\tvar prevInDE = null;\n\t\tvar edges = deStar.getEdges();\n\t\tfor (var i = edges.size() - 1; i >= 0; i--) {\n\t\t\tvar de = edges.get(i);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar outDE = null;\n\t\t\tif (de.getLabel() === label) outDE = de;\n\t\t\tvar inDE = null;\n\t\t\tif (sym.getLabel() === label) inDE = sym;\n\t\t\tif (outDE === null && inDE === null) continue;\n\t\t\tif (inDE !== null) {\n\t\t\t\tprevInDE = inDE;\n\t\t\t}\n\t\t\tif (outDE !== null) {\n\t\t\t\tif (prevInDE !== null) {\n\t\t\t\t\tprevInDE.setNext(outDE);\n\t\t\t\t\tprevInDE = null;\n\t\t\t\t}\n\t\t\t\tif (firstOutDE === null) firstOutDE = outDE;\n\t\t\t}\n\t\t}\n\t\tif (prevInDE !== null) {\n\t\t\tAssert.isTrue(firstOutDE !== null);\n\t\t\tprevInDE.setNext(firstOutDE);\n\t\t}\n\t}\n\tstatic getDegree(node, label) {\n\t\tvar edges = node.getOutEdges().getEdges();\n\t\tvar degree = 0;\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.getLabel() === label) degree++;\n\t\t}\n\t\treturn degree;\n\t}\n\tstatic findIntersectionNodes(startDE, label) {\n\t\tvar de = startDE;\n\t\tvar intNodes = null;\n\t\tdo {\n\t\t\tvar node = de.getFromNode();\n\t\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\n\t\t\t\tif (intNodes === null) intNodes = new ArrayList();\n\t\t\t\tintNodes.add(node);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t\treturn intNodes;\n\t}\n\tfindEdgeRing(startDE) {\n\t\tvar er = new EdgeRing(this._factory);\n\t\ter.build(startDE);\n\t\treturn er;\n\t}\n\tcomputeDepthParity() {\n\t\tif (arguments.length === 0) {\n\t\t\twhile (true) {\n\t\t\t\tvar de = null;\n\t\t\t\tif (de === null) return null;\n\t\t\t\tthis.computeDepthParity(de);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t}\n\t}\n\tcomputeNextCWEdges() {\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext(); ) {\n\t\t\tvar node = iNode.next();\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\n\t\t}\n\t}\n\taddEdge(line) {\n\t\tif (line.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (linePts.length < 2) {\n\t\t\treturn null;\n\t\t}\n\t\tvar startPt = linePts[0];\n\t\tvar endPt = linePts[linePts.length - 1];\n\t\tvar nStart = this.getNode(startPt);\n\t\tvar nEnd = this.getNode(endPt);\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n\t\tvar edge = new PolygonizeEdge(line);\n\t\tedge.setDirectedEdges(de0, de1);\n\t\tthis.add(edge);\n\t}\n\tdeleteCutEdges() {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tvar cutLines = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.getLabel() === sym.getLabel()) {\n\t\t\t\tde.setMarked(true);\n\t\t\t\tsym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tcutLines.add(e.getLine());\n\t\t\t}\n\t\t}\n\t\treturn cutLines;\n\t}\n\tgetEdgeRings() {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.label(this._dirEdges, -1);\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\n\t\tvar edgeRingList = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.isInRing()) continue;\n\t\t\tvar er = this.findEdgeRing(de);\n\t\t\tedgeRingList.add(er);\n\t\t}\n\t\treturn edgeRingList;\n\t}\n\tgetNode(pt) {\n\t\tvar node = this.findNode(pt);\n\t\tif (node === null) {\n\t\t\tnode = new Node(pt);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t}\n\tconvertMaximalToMinimalEdgeRings(ringEdges) {\n\t\tfor (var i = ringEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n\t\t\tif (intNodes === null) continue;\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext(); ) {\n\t\t\t\tvar node = iNode.next();\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\n\t\t\t}\n\t\t}\n\t}\n\tdeleteDangles() {\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\n\t\tvar dangleLines = new HashSet();\n\t\tvar nodeStack = new Stack();\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext(); ) {\n\t\t\tnodeStack.push(i.next());\n\t\t}\n\t\twhile (!nodeStack.isEmpty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tde.setMarked(true);\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tdangleLines.add(e.getLine());\n\t\t\t\tvar toNode = de.getToNode();\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n\t\t\t}\n\t\t}\n\t\treturn dangleLines;\n\t}\n\tgetClass() {\n\t\treturn PolygonizeGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPolygonizeGraph.constructor_ = function () {\n\tthis._factory = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n};\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport PolygonizeGraph from './PolygonizeGraph';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Collection from '../../../../../java/util/Collection';\nimport Collections from '../../../../../java/util/Collections';\nimport EdgeRing from './EdgeRing';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class Polygonizer {\n\tconstructor() {\n\t\tPolygonizer.constructor_.apply(this, arguments);\n\t}\n\tstatic findOuterShells(shellList) {\n\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tvar outerHoleER = er.getOuterHole();\n\t\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\n\t\t\t\ter.setIncluded(true);\n\t\t\t\touterHoleER.setProcessed(true);\n\t\t\t}\n\t\t}\n\t}\n\tstatic extractPolygons(shellList, includeAll) {\n\t\tvar polyList = new ArrayList();\n\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (includeAll || er.isIncluded()) {\n\t\t\t\tpolyList.add(er.getPolygon());\n\t\t\t}\n\t\t}\n\t\treturn polyList;\n\t}\n\tstatic assignHolesToShells(holeList, shellList) {\n\t\tfor (var i = holeList.iterator(); i.hasNext(); ) {\n\t\t\tvar holeER = i.next();\n\t\t\tPolygonizer.assignHoleToShell(holeER, shellList);\n\t\t}\n\t}\n\tstatic assignHoleToShell(holeER, shellList) {\n\t\tvar shell = EdgeRing.findEdgeRingContaining(holeER, shellList);\n\t\tif (shell !== null) {\n\t\t\tshell.addHole(holeER);\n\t\t}\n\t}\n\tstatic findDisjointShells(shellList) {\n\t\tPolygonizer.findOuterShells(shellList);\n\t\tvar isMoreToScan = null;\n\t\tdo {\n\t\t\tisMoreToScan = false;\n\t\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar er = i.next();\n\t\t\t\tif (er.isIncludedSet()) continue;\n\t\t\t\ter.updateIncluded();\n\t\t\t\tif (!er.isIncludedSet()) {\n\t\t\t\t\tisMoreToScan = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (isMoreToScan);\n\t}\n\tgetGeometry() {\n\t\tif (this._geomFactory === null) this._geomFactory = new GeometryFactory();\n\t\tthis.polygonize();\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\treturn this._geomFactory.buildGeometry(this._polyList);\n\t\t}\n\t\treturn this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList));\n\t}\n\tgetInvalidRingLines() {\n\t\tthis.polygonize();\n\t\treturn this._invalidRingLines;\n\t}\n\tfindValidRings(edgeRingList, validEdgeRingList, invalidRingList) {\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString());\n\t\t}\n\t}\n\tpolygonize() {\n\t\tif (this._polyList !== null) return null;\n\t\tthis._polyList = new ArrayList();\n\t\tif (this._graph === null) return null;\n\t\tthis._dangles = this._graph.deleteDangles();\n\t\tthis._cutEdges = this._graph.deleteCutEdges();\n\t\tvar edgeRingList = this._graph.getEdgeRings();\n\t\tvar validEdgeRingList = new ArrayList();\n\t\tthis._invalidRingLines = new ArrayList();\n\t\tif (this._isCheckingRingsValid) {\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines);\n\t\t} else {\n\t\t\tvalidEdgeRingList = edgeRingList;\n\t\t}\n\t\tthis.findShellsAndHoles(validEdgeRingList);\n\t\tPolygonizer.assignHolesToShells(this._holeList, this._shellList);\n\t\tCollections.sort(this._shellList, new EdgeRing.EnvelopeComparator());\n\t\tvar includeAll = true;\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\tPolygonizer.findDisjointShells(this._shellList);\n\t\t\tincludeAll = false;\n\t\t}\n\t\tthis._polyList = Polygonizer.extractPolygons(this._shellList, includeAll);\n\t}\n\tgetDangles() {\n\t\tthis.polygonize();\n\t\treturn this._dangles;\n\t}\n\tgetCutEdges() {\n\t\tthis.polygonize();\n\t\treturn this._cutEdges;\n\t}\n\tgetPolygons() {\n\t\tthis.polygonize();\n\t\treturn this._polyList;\n\t}\n\tadd() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geomList = arguments[0];\n\t\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tthis._geomFactory = line.getFactory();\n\t\t\tif (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory);\n\t\t\tthis._graph.addEdge(line);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tg.apply(this._lineStringAdder);\n\t\t}\n\t}\n\tsetCheckRingsValid(isCheckingRingsValid) {\n\t\tthis._isCheckingRingsValid = isCheckingRingsValid;\n\t}\n\tfindShellsAndHoles(edgeRingList) {\n\t\tthis._holeList = new ArrayList();\n\t\tthis._shellList = new ArrayList();\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\ter.computeHole();\n\t\t\tif (er.isHole()) this._holeList.add(er); else this._shellList.add(er);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn Polygonizer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass LineStringAdder {\n\tconstructor() {\n\t\tLineStringAdder.constructor_.apply(this, arguments);\n\t}\n\tfilter(g) {\n\t\tif (g instanceof LineString) this.p.add(g);\n\t}\n\tgetClass() {\n\t\treturn LineStringAdder;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t}\n}\nLineStringAdder.constructor_ = function () {\n\tthis.p = null;\n\tlet p = arguments[0];\n\tthis.p = p;\n};\nPolygonizer.LineStringAdder = LineStringAdder;\nPolygonizer.constructor_ = function () {\n\tthis._lineStringAdder = new LineStringAdder(this);\n\tthis._graph = null;\n\tthis._dangles = new ArrayList();\n\tthis._cutEdges = new ArrayList();\n\tthis._invalidRingLines = new ArrayList();\n\tthis._holeList = null;\n\tthis._shellList = null;\n\tthis._polyList = null;\n\tthis._isCheckingRingsValid = true;\n\tthis._extractOnlyPolygonal = null;\n\tthis._geomFactory = null;\n\tif (arguments.length === 0) {\n\t\tPolygonizer.constructor_.call(this, false);\n\t} else if (arguments.length === 1) {\n\t\tlet extractOnlyPolygonal = arguments[0];\n\t\tthis._extractOnlyPolygonal = extractOnlyPolygonal;\n\t}\n};\n","import EdgeEnd from '../../geomgraph/EdgeEnd';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default class EdgeEndBuilder {\n\tconstructor() {\n\t\tEdgeEndBuilder.constructor_.apply(this, arguments);\n\t}\n\tcreateEdgeEndForNext(edge, l, eiCurr, eiNext) {\n\t\tvar iNext = eiCurr.segmentIndex + 1;\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\n\t\tvar pNext = edge.getCoordinate(iNext);\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n\t\tl.add(e);\n\t}\n\tcreateEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n\t\tvar iPrev = eiCurr.segmentIndex;\n\t\tif (eiCurr.dist === 0.0) {\n\t\t\tif (iPrev === 0) return null;\n\t\t\tiPrev--;\n\t\t}\n\t\tvar pPrev = edge.getCoordinate(iPrev);\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n\t\tvar label = new Label(edge.getLabel());\n\t\tlabel.flip();\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n\t\tl.add(e);\n\t}\n\tcomputeEdgeEnds() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tvar l = new ArrayList();\n\t\t\tfor (var i = edges; i.hasNext(); ) {\n\t\t\t\tvar e = i.next();\n\t\t\t\tthis.computeEdgeEnds(e, l);\n\t\t\t}\n\t\t\treturn l;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edge = arguments[0], l = arguments[1];\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\n\t\t\teiList.addEndpoints();\n\t\t\tvar it = eiList.iterator();\n\t\t\tvar eiPrev = null;\n\t\t\tvar eiCurr = null;\n\t\t\tif (!it.hasNext()) return null;\n\t\t\tvar eiNext = it.next();\n\t\t\tdo {\n\t\t\t\teiPrev = eiCurr;\n\t\t\t\teiCurr = eiNext;\n\t\t\t\teiNext = null;\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\n\t\t\t\tif (eiCurr !== null) {\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\n\t\t\t\t\tthis.createEdgeEndForNext(edge, l, eiCurr, eiNext);\n\t\t\t\t}\n\t\t\t} while (eiCurr !== null);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn EdgeEndBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeEndBuilder.constructor_ = function () {};\n","import Location from '../../geom/Location';\nimport EdgeEnd from '../../geomgraph/EdgeEnd';\nimport Position from '../../geomgraph/Position';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Edge from '../../geomgraph/Edge';\nexport default class EdgeEndBundle extends EdgeEnd {\n\tconstructor() {\n\t\tsuper();\n\t\tEdgeEndBundle.constructor_.apply(this, arguments);\n\t}\n\tinsert(e) {\n\t\tthis._edgeEnds.add(e);\n\t}\n\tprint(out) {\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this._label);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.print(out);\n\t\t\tout.println();\n\t\t}\n\t}\n\titerator() {\n\t\treturn this._edgeEnds.iterator();\n\t}\n\tgetEdgeEnds() {\n\t\treturn this._edgeEnds;\n\t}\n\tcomputeLabelOn(geomIndex, boundaryNodeRule) {\n\t\tvar boundaryCount = 0;\n\t\tvar foundInterior = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\n\t\t}\n\t\tvar loc = Location.NONE;\n\t\tif (foundInterior) loc = Location.INTERIOR;\n\t\tif (boundaryCount > 0) {\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n\t\t}\n\t\tthis._label.setLocation(geomIndex, loc);\n\t}\n\tcomputeLabelSide(geomIndex, side) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) {\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\n\t\t\t\tif (loc === Location.INTERIOR) {\n\t\t\t\t\tthis._label.setLocation(geomIndex, side, Location.INTERIOR);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (loc === Location.EXTERIOR) this._label.setLocation(geomIndex, side, Location.EXTERIOR);\n\t\t\t}\n\t\t}\n\t}\n\tgetLabel() {\n\t\treturn this._label;\n\t}\n\tcomputeLabelSides(geomIndex) {\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\n\t}\n\tupdateIM(im) {\n\t\tEdge.updateIM(this._label, im);\n\t}\n\tcomputeLabel(boundaryNodeRule) {\n\t\tvar isArea = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) isArea = true;\n\t\t}\n\t\tif (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\n\t\t\tif (isArea) this.computeLabelSides(i);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn EdgeEndBundle;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeEndBundle.constructor_ = function () {\n\tthis._edgeEnds = new ArrayList();\n\tif (arguments.length === 1) {\n\t\tlet e = arguments[0];\n\t\tEdgeEndBundle.constructor_.call(this, null, e);\n\t} else if (arguments.length === 2) {\n\t\tlet boundaryNodeRule = arguments[0], e = arguments[1];\n\t\tEdgeEnd.constructor_.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\n\t\tthis.insert(e);\n\t}\n};\n","import EdgeEndStar from '../../geomgraph/EdgeEndStar';\nimport EdgeEndBundle from './EdgeEndBundle';\nexport default class EdgeEndBundleStar extends EdgeEndStar {\n\tconstructor() {\n\t\tsuper();\n\t\tEdgeEndBundleStar.constructor_.apply(this, arguments);\n\t}\n\tupdateIM(im) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar esb = it.next();\n\t\t\tesb.updateIM(im);\n\t\t}\n\t}\n\tinsert(e) {\n\t\tvar eb = this._edgeMap.get(e);\n\t\tif (eb === null) {\n\t\t\teb = new EdgeEndBundle(e);\n\t\t\tthis.insertEdgeEnd(e, eb);\n\t\t} else {\n\t\t\teb.insert(e);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn EdgeEndBundleStar;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEdgeEndBundleStar.constructor_ = function () {};\n","import Node from '../../geomgraph/Node';\nexport default class RelateNode extends Node {\n\tconstructor() {\n\t\tsuper();\n\t\tRelateNode.constructor_.apply(this, arguments);\n\t}\n\tupdateIMFromEdges(im) {\n\t\tthis._edges.updateIM(im);\n\t}\n\tcomputeIM(im) {\n\t\tim.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0);\n\t}\n\tgetClass() {\n\t\treturn RelateNode;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRelateNode.constructor_ = function () {\n\tlet coord = arguments[0], edges = arguments[1];\n\tNode.constructor_.call(this, coord, edges);\n};\n","import EdgeEndBundleStar from './EdgeEndBundleStar';\nimport RelateNode from './RelateNode';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default class RelateNodeFactory extends NodeFactory {\n\tconstructor() {\n\t\tsuper();\n\t\tRelateNodeFactory.constructor_.apply(this, arguments);\n\t}\n\tcreateNode(coord) {\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\n\t}\n\tgetClass() {\n\t\treturn RelateNodeFactory;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRelateNodeFactory.constructor_ = function () {};\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport IntersectionMatrix from '../../geom/IntersectionMatrix';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport Assert from '../../util/Assert';\nexport default class RelateComputer {\n\tconstructor() {\n\t\tRelateComputer.constructor_.apply(this, arguments);\n\t}\n\tinsertEdgeEnds(ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t}\n\tcomputeProperIntersectionIM(intersector, im) {\n\t\tvar dimA = this._arg[0].getGeometry().getDimension();\n\t\tvar dimB = this._arg[1].getGeometry().getDimension();\n\t\tvar hasProper = intersector.hasProperIntersection();\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\n\t\tif (dimA === 2 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\n\t\t} else if (dimA === 2 && dimB === 1) {\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n\t\t} else if (dimA === 1 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n\t\t} else if (dimA === 1 && dimB === 1) {\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n\t\t}\n\t}\n\tlabelIsolatedEdges(thisIndex, targetIndex) {\n\t\tfor (var ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry());\n\t\t\t\tthis._isolatedEdges.add(e);\n\t\t\t}\n\t\t}\n\t}\n\tlabelIsolatedEdge(e, targetIndex, target) {\n\t\tif (target.getDimension() > 0) {\n\t\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), target);\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\n\t\t} else {\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n\t\t}\n\t}\n\tcomputeIM() {\n\t\tvar im = new IntersectionMatrix();\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\t\tif (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n\t\t\tthis.computeDisjointIM(im);\n\t\t\treturn im;\n\t\t}\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tvar intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false);\n\t\tthis.computeIntersectionNodes(0);\n\t\tthis.computeIntersectionNodes(1);\n\t\tthis.copyNodesAndLabels(0);\n\t\tthis.copyNodesAndLabels(1);\n\t\tthis.labelIsolatedNodes();\n\t\tthis.computeProperIntersectionIM(intersector, im);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee0);\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee1);\n\t\tthis.labelNodeEdges();\n\t\tthis.labelIsolatedEdges(0, 1);\n\t\tthis.labelIsolatedEdges(1, 0);\n\t\tthis.updateIM(im);\n\t\treturn im;\n\t}\n\tlabelNodeEdges() {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t}\n\tcopyNodesAndLabels(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t}\n\tlabelIntersectionNodes(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.find(ei.coord);\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlabelIsolatedNode(n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\n\t}\n\tcomputeIntersectionNodes(argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlabelIsolatedNodes() {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1);\n\t\t\t}\n\t\t}\n\t}\n\tupdateIM(im) {\n\t\tfor (var ei = this._isolatedEdges.iterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\te.updateIM(im);\n\t\t}\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.updateIM(im);\n\t\t\tnode.updateIMFromEdges(im);\n\t\t}\n\t}\n\tcomputeDisjointIM(im) {\n\t\tvar ga = this._arg[0].getGeometry();\n\t\tif (!ga.isEmpty()) {\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n\t\t}\n\t\tvar gb = this._arg[1].getGeometry();\n\t\tif (!gb.isEmpty()) {\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn RelateComputer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRelateComputer.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._ptLocator = new PointLocator();\n\tthis._arg = null;\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n\tthis._im = null;\n\tthis._isolatedEdges = new ArrayList();\n\tthis._invalidPoint = null;\n\tlet arg = arguments[0];\n\tthis._arg = arg;\n};\n","import LineString from '../../geom/LineString';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nexport default class RectangleContains {\n\tconstructor() {\n\t\tRectangleContains.constructor_.apply(this, arguments);\n\t}\n\tstatic contains(rectangle, b) {\n\t\tvar rc = new RectangleContains(rectangle);\n\t\treturn rc.contains(b);\n\t}\n\tisContainedInBoundary(geom) {\n\t\tif (geom instanceof Polygon) return false;\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tisLineSegmentContainedInBoundary(p0, p1) {\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\t\tif (p0.x === p1.x) {\n\t\t\tif (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true;\n\t\t} else if (p0.y === p1.y) {\n\t\t\tif (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tisLineStringContainedInBoundary(line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\n\t\t\tseq.getCoordinate(i, p0);\n\t\t\tseq.getCoordinate(i + 1, p1);\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tisPointContainedInBoundary() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet point = arguments[0];\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\treturn pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY();\n\t\t}\n\t}\n\tcontains(geom) {\n\t\tif (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false;\n\t\tif (this.isContainedInBoundary(geom)) return false;\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn RectangleContains;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRectangleContains.constructor_ = function () {\n\tthis._rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n};\n","import Coordinate from '../geom/Coordinate';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nexport default class RectangleLineIntersector {\n\tconstructor() {\n\t\tRectangleLineIntersector.constructor_.apply(this, arguments);\n\t}\n\tintersects(p0, p1) {\n\t\tvar segEnv = new Envelope(p0, p1);\n\t\tif (!this._rectEnv.intersects(segEnv)) return false;\n\t\tif (this._rectEnv.intersects(p0)) return true;\n\t\tif (this._rectEnv.intersects(p1)) return true;\n\t\tif (p0.compareTo(p1) > 0) {\n\t\t\tvar tmp = p0;\n\t\t\tp0 = p1;\n\t\t\tp1 = tmp;\n\t\t}\n\t\tvar isSegUpwards = false;\n\t\tif (p1.y > p0.y) isSegUpwards = true;\n\t\tif (isSegUpwards) {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1);\n\t\t} else {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1);\n\t\t}\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn RectangleLineIntersector;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRectangleLineIntersector.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._rectEnv = null;\n\tthis._diagUp0 = null;\n\tthis._diagUp1 = null;\n\tthis._diagDown0 = null;\n\tthis._diagDown1 = null;\n\tlet rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n\tthis._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n\tthis._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n\tthis._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n\tthis._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n};\n","import GeometryCollection from '../GeometryCollection';\nexport default class ShortCircuitedGeometryVisitor {\n\tconstructor() {\n\t\tShortCircuitedGeometryVisitor.constructor_.apply(this, arguments);\n\t}\n\tapplyTo(geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n\t\t\tvar element = geom.getGeometryN(i);\n\t\t\tif (!(element instanceof GeometryCollection)) {\n\t\t\t\tthis.visit(element);\n\t\t\t\tif (this.isDone()) {\n\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else this.applyTo(element);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn ShortCircuitedGeometryVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nShortCircuitedGeometryVisitor.constructor_ = function () {\n\tthis._isDone = false;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport Polygon from '../../geom/Polygon';\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector';\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor';\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nexport default class RectangleIntersects {\n\tconstructor() {\n\t\tRectangleIntersects.constructor_.apply(this, arguments);\n\t}\n\tstatic intersects(rectangle, b) {\n\t\tvar rp = new RectangleIntersects(rectangle);\n\t\treturn rp.intersects(b);\n\t}\n\tintersects(geom) {\n\t\tif (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this._rectEnv);\n\t\tvisitor.applyTo(geom);\n\t\tif (visitor.intersects()) return true;\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this._rectangle);\n\t\tecpVisitor.applyTo(geom);\n\t\tif (ecpVisitor.containsPoint()) return true;\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle);\n\t\triVisitor.applyTo(geom);\n\t\tif (riVisitor.intersects()) return true;\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn RectangleIntersects;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRectangleIntersects.constructor_ = function () {\n\tthis._rectangle = null;\n\tthis._rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis._rectangle = rectangle;\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n};\nclass EnvelopeIntersectsVisitor extends ShortCircuitedGeometryVisitor {\n\tconstructor() {\n\t\tsuper();\n\t\tEnvelopeIntersectsVisitor.constructor_.apply(this, arguments);\n\t}\n\tisDone() {\n\t\treturn this._intersects === true;\n\t}\n\tvisit(element) {\n\t\tvar elementEnv = element.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._rectEnv.contains(elementEnv)) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t}\n\tintersects() {\n\t\treturn this._intersects;\n\t}\n\tgetClass() {\n\t\treturn EnvelopeIntersectsVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nEnvelopeIntersectsVisitor.constructor_ = function () {\n\tthis._rectEnv = null;\n\tthis._intersects = false;\n\tlet rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n};\nclass GeometryContainsPointVisitor extends ShortCircuitedGeometryVisitor {\n\tconstructor() {\n\t\tsuper();\n\t\tGeometryContainsPointVisitor.constructor_.apply(this, arguments);\n\t}\n\tisDone() {\n\t\treturn this._containsPoint === true;\n\t}\n\tvisit(geom) {\n\t\tif (!(geom instanceof Polygon)) return null;\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar rectPt = new Coordinate();\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis._rectSeq.getCoordinate(i, rectPt);\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n\t\t\t\tthis._containsPoint = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tcontainsPoint() {\n\t\treturn this._containsPoint;\n\t}\n\tgetClass() {\n\t\treturn GeometryContainsPointVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryContainsPointVisitor.constructor_ = function () {\n\tthis._rectSeq = null;\n\tthis._rectEnv = null;\n\tthis._containsPoint = false;\n\tlet rectangle = arguments[0];\n\tthis._rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n};\nclass RectangleIntersectsSegmentVisitor extends ShortCircuitedGeometryVisitor {\n\tconstructor() {\n\t\tsuper();\n\t\tRectangleIntersectsSegmentVisitor.constructor_.apply(this, arguments);\n\t}\n\tintersects() {\n\t\treturn this._hasIntersection;\n\t}\n\tisDone() {\n\t\treturn this._hasIntersection === true;\n\t}\n\tvisit(geom) {\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tthis.checkIntersectionWithLineStrings(lines);\n\t}\n\tcheckIntersectionWithLineStrings(lines) {\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar testLine = i.next();\n\t\t\tthis.checkIntersectionWithSegments(testLine);\n\t\t\tif (this._hasIntersection) return null;\n\t\t}\n\t}\n\tcheckIntersectionWithSegments(testLine) {\n\t\tvar seq1 = testLine.getCoordinateSequence();\n\t\tfor (var j = 1; j < seq1.size(); j++) {\n\t\t\tseq1.getCoordinate(j - 1, this._p0);\n\t\t\tseq1.getCoordinate(j, this._p1);\n\t\t\tif (this._rectIntersector.intersects(this._p0, this._p1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn RectangleIntersectsSegmentVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRectangleIntersectsSegmentVisitor.constructor_ = function () {\n\tthis._rectEnv = null;\n\tthis._rectIntersector = null;\n\tthis._hasIntersection = false;\n\tthis._p0 = new Coordinate();\n\tthis._p1 = new Coordinate();\n\tlet rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n\tthis._rectIntersector = new RectangleLineIntersector(this._rectEnv);\n};\n","import RelateComputer from './RelateComputer';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport RectangleContains from '../predicate/RectangleContains';\nimport RectangleIntersects from '../predicate/RectangleIntersects';\nexport default class RelateOp extends GeometryGraphOperation {\n\tconstructor() {\n\t\tsuper();\n\t\tRelateOp.constructor_.apply(this, arguments);\n\t}\n\tstatic covers(g1, g2) {\n\t\tif (g2.getDimension() === 2 && g1.getDimension() < 2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\t\tif (g1.isRectangle()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn new RelateOp(g1, g2).getIntersectionMatrix().isCovers();\n\t}\n\tstatic intersects(g1, g2) {\n\t\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\t\tif (g1.isRectangle()) {\n\t\t\treturn RectangleIntersects.intersects(g1, g2);\n\t\t}\n\t\tif (g2.isRectangle()) {\n\t\t\treturn RectangleIntersects.intersects(g2, g1);\n\t\t}\n\t\tif (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n\t\t\tvar r = false;\n\t\t\tfor (var i = 0; i < g1.getNumGeometries(); i++) {\n\t\t\t\tfor (var j = 0; j < g2.getNumGeometries(); j++) {\n\t\t\t\t\tif (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn new RelateOp(g1, g2).getIntersectionMatrix().isIntersects();\n\t}\n\tstatic touches(g1, g2) {\n\t\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\t\treturn new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension());\n\t}\n\tstatic relate() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet a = arguments[0], b = arguments[1];\n\t\t\tvar relOp = new RelateOp(a, b);\n\t\t\tvar im = relOp.getIntersectionMatrix();\n\t\t\treturn im;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2];\n\t\t\tvar relOp = new RelateOp(a, b, boundaryNodeRule);\n\t\t\tvar im = relOp.getIntersectionMatrix();\n\t\t\treturn im;\n\t\t}\n\t}\n\tstatic overlaps(g1, g2) {\n\t\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\t\treturn new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension());\n\t}\n\tstatic crosses(g1, g2) {\n\t\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\t\treturn new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension());\n\t}\n\tstatic contains(g1, g2) {\n\t\tif (g2.getDimension() === 2 && g1.getDimension() < 2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\t\tif (g1.isRectangle()) {\n\t\t\treturn RectangleContains.contains(g1, g2);\n\t\t}\n\t\treturn new RelateOp(g1, g2).getIntersectionMatrix().isContains();\n\t}\n\tgetIntersectionMatrix() {\n\t\treturn this._relate.computeIM();\n\t}\n\tgetClass() {\n\t\treturn RelateOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRelateOp.constructor_ = function () {\n\tthis._relate = null;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.constructor_.call(this, g0, g1);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tGeometryGraphOperation.constructor_.call(this, g0, g1, boundaryNodeRule);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t}\n};\n","import ArrayList from '../../../../../java/util/ArrayList';\nexport default class GeometryCombiner {\n\tconstructor() {\n\t\tGeometryCombiner.constructor_.apply(this, arguments);\n\t}\n\tstatic combine() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar combiner = new GeometryCombiner(geoms);\n\t\t\treturn combiner.combine();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n\t\t\treturn combiner.combine();\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1], g2 = arguments[2];\n\t\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\n\t\t\treturn combiner.combine();\n\t\t}\n\t}\n\tstatic extractFactory(geoms) {\n\t\tif (geoms.isEmpty()) return null;\n\t\treturn geoms.iterator().next().getFactory();\n\t}\n\tstatic createList() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet obj0 = arguments[0], obj1 = arguments[1];\n\t\t\tvar list = new ArrayList();\n\t\t\tlist.add(obj0);\n\t\t\tlist.add(obj1);\n\t\t\treturn list;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2];\n\t\t\tvar list = new ArrayList();\n\t\t\tlist.add(obj0);\n\t\t\tlist.add(obj1);\n\t\t\tlist.add(obj2);\n\t\t\treturn list;\n\t\t}\n\t}\n\textractElements(geom, elems) {\n\t\tif (geom === null) return null;\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elemGeom = geom.getGeometryN(i);\n\t\t\tif (this._skipEmpty && elemGeom.isEmpty()) continue;\n\t\t\telems.add(elemGeom);\n\t\t}\n\t}\n\tcombine() {\n\t\tvar elems = new ArrayList();\n\t\tfor (var i = this._inputGeoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tthis.extractElements(g, elems);\n\t\t}\n\t\tif (elems.size() === 0) {\n\t\t\tif (this._geomFactory !== null) {\n\t\t\t\treturn this._geomFactory.createGeometryCollection();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(elems);\n\t}\n\tgetClass() {\n\t\treturn GeometryCombiner;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryCombiner.constructor_ = function () {\n\tthis._geomFactory = null;\n\tthis._skipEmpty = false;\n\tthis._inputGeoms = null;\n\tlet geoms = arguments[0];\n\tthis._geomFactory = GeometryCombiner.extractFactory(geoms);\n\tthis._inputGeoms = geoms;\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nexport default class PointGeometryUnion {\n\tconstructor() {\n\t\tPointGeometryUnion.constructor_.apply(this, arguments);\n\t}\n\tstatic union(pointGeom, otherGeom) {\n\t\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\n\t\treturn unioner.union();\n\t}\n\tunion() {\n\t\tvar locater = new PointLocator();\n\t\tvar exteriorCoords = new TreeSet();\n\t\tfor (var i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n\t\t\tvar point = this._pointGeom.getGeometryN(i);\n\t\t\tvar coord = point.getCoordinate();\n\t\t\tvar loc = locater.locate(coord, this._otherGeom);\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n\t\t}\n\t\tif (exteriorCoords.size() === 0) return this._otherGeom;\n\t\tvar ptComp = null;\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\t\tif (coords.length === 1) {\n\t\t\tptComp = this._geomFact.createPoint(coords[0]);\n\t\t} else {\n\t\t\tptComp = this._geomFact.createMultiPointFromCoords(coords);\n\t\t}\n\t\treturn GeometryCombiner.combine(ptComp, this._otherGeom);\n\t}\n\tgetClass() {\n\t\treturn PointGeometryUnion;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPointGeometryUnion.constructor_ = function () {\n\tthis._pointGeom = null;\n\tthis._otherGeom = null;\n\tthis._geomFact = null;\n\tlet pointGeom = arguments[0], otherGeom = arguments[1];\n\tthis._pointGeom = pointGeom;\n\tthis._otherGeom = otherGeom;\n\tthis._geomFact = otherGeom.getFactory();\n};\n","import Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nimport List from '../../../../../java/util/List';\nexport default class GeometryExtracter {\n\tconstructor() {\n\t\tGeometryExtracter.constructor_.apply(this, arguments);\n\t}\n\tstatic isOfType(geom, geometryType) {\n\t\tif (geom.getGeometryType() === geometryType) return true;\n\t\tif (geometryType === Geometry.TYPENAME_LINESTRING && geom.getGeometryType() === Geometry.TYPENAME_LINEARRING) return true;\n\t\treturn false;\n\t}\n\tstatic extract() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet geom = arguments[0], geometryType = arguments[1];\n\t\t\treturn GeometryExtracter.extract(geom, geometryType, new ArrayList());\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"string\")) {\n\t\t\t\tlet geom = arguments[0], geometryType = arguments[1], list = arguments[2];\n\t\t\t\tif (geom.getGeometryType() === geometryType) {\n\t\t\t\t\tlist.add(geom);\n\t\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\t\tgeom.apply(new GeometryExtracter(geometryType, list));\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && arguments[1] instanceof Class)) {\n\t\t\t\tlet geom = arguments[0], clz = arguments[1], list = arguments[2];\n\t\t\t\treturn GeometryExtracter.extract(geom, GeometryExtracter.toGeometryType(clz), list);\n\t\t\t}\n\t\t}\n\t}\n\tfilter(geom) {\n\t\tif (this._geometryType === null || GeometryExtracter.isOfType(geom, this._geometryType)) this._comps.add(geom);\n\t}\n\tgetClass() {\n\t\treturn GeometryExtracter;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryFilter];\n\t}\n}\nGeometryExtracter.constructor_ = function () {\n\tthis._geometryType = null;\n\tthis._comps = null;\n\tlet geometryType = arguments[0], comps = arguments[1];\n\tthis._geometryType = geometryType;\n\tthis._comps = comps;\n};\n","import PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport STRtree from '../../index/strtree/STRtree';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport Polygonal from '../../geom/Polygonal';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default class CascadedPolygonUnion {\n\tconstructor() {\n\t\tCascadedPolygonUnion.constructor_.apply(this, arguments);\n\t}\n\tstatic restrictToPolygons(g) {\n\t\tif (hasInterface(g, Polygonal)) {\n\t\t\treturn g;\n\t\t}\n\t\tvar polygons = PolygonExtracter.getPolygons(g);\n\t\tif (polygons.size() === 1) return polygons.get(0);\n\t\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n\t}\n\tstatic getGeometry(list, index) {\n\t\tif (index >= list.size()) return null;\n\t\treturn list.get(index);\n\t}\n\tstatic union(polys) {\n\t\tvar op = new CascadedPolygonUnion(polys);\n\t\treturn op.union();\n\t}\n\treduceToGeometries(geomTree) {\n\t\tvar geoms = new ArrayList();\n\t\tfor (var i = geomTree.iterator(); i.hasNext(); ) {\n\t\t\tvar o = i.next();\n\t\t\tvar geom = null;\n\t\t\tif (hasInterface(o, List)) {\n\t\t\t\tgeom = this.unionTree(o);\n\t\t\t} else if (o instanceof Geometry) {\n\t\t\t\tgeom = o;\n\t\t\t}\n\t\t\tgeoms.add(geom);\n\t\t}\n\t\treturn geoms;\n\t}\n\textractByEnvelope(env, geom, disjointGeoms) {\n\t\tvar intersectingGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem); else disjointGeoms.add(elem);\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(intersectingGeoms);\n\t}\n\tunionOptimized(g0, g1) {\n\t\tvar g0Env = g0.getEnvelopeInternal();\n\t\tvar g1Env = g1.getEnvelopeInternal();\n\t\tif (!g0Env.intersects(g1Env)) {\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\n\t\t\treturn combo;\n\t\t}\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n\t\tvar commonEnv = g0Env.intersection(g1Env);\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n\t}\n\tunion() {\n\t\tif (this._inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n\t\tif (this._inputPolys.isEmpty()) return null;\n\t\tthis._geomFactory = this._inputPolys.iterator().next().getFactory();\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\t\tfor (var i = this._inputPolys.iterator(); i.hasNext(); ) {\n\t\t\tvar item = i.next();\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\n\t\t}\n\t\tthis._inputPolys = null;\n\t\tvar itemTree = index.itemsTree();\n\t\tvar unionAll = this.unionTree(itemTree);\n\t\treturn unionAll;\n\t}\n\tbinaryUnion() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geoms = arguments[0], start = arguments[1], end = arguments[2];\n\t\t\tif (end - start <= 1) {\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(geoms, start);\n\t\t\t\treturn this.unionSafe(g0, null);\n\t\t\t} else if (end - start === 2) {\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\n\t\t\t} else {\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\n\t\t\t\tvar g0 = this.binaryUnion(geoms, start, mid);\n\t\t\t\tvar g1 = this.binaryUnion(geoms, mid, end);\n\t\t\t\treturn this.unionSafe(g0, g1);\n\t\t\t}\n\t\t}\n\t}\n\trepeatedUnion(geoms) {\n\t\tvar union = null;\n\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tif (union === null) union = g.copy(); else union = union.union(g);\n\t\t}\n\t\treturn union;\n\t}\n\tunionSafe(g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g0 === null) return g1.copy();\n\t\tif (g1 === null) return g0.copy();\n\t\treturn this.unionOptimized(g0, g1);\n\t}\n\tunionActual(g0, g1) {\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n\t}\n\tunionTree(geomTree) {\n\t\tvar geoms = this.reduceToGeometries(geomTree);\n\t\tvar union = this.binaryUnion(geoms);\n\t\treturn union;\n\t}\n\tunionUsingEnvelopeIntersection(g0, g1, common) {\n\t\tvar disjointPolys = new ArrayList();\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n\t\tvar union = this.unionActual(g0Int, g1Int);\n\t\tdisjointPolys.add(union);\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\n\t\treturn overallUnion;\n\t}\n\tbufferUnion() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar factory = geoms.get(0).getFactory();\n\t\t\tvar gColl = factory.buildGeometry(geoms);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\tvar factory = g0.getFactory();\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn CascadedPolygonUnion;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nCascadedPolygonUnion.constructor_ = function () {\n\tthis._inputPolys = null;\n\tthis._geomFactory = null;\n\tlet polys = arguments[0];\n\tthis._inputPolys = polys;\n\tif (this._inputPolys === null) this._inputPolys = new ArrayList();\n};\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n","import Geometry from '../../geom/Geometry';\nimport PointGeometryUnion from './PointGeometryUnion';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryExtracter from '../../geom/util/GeometryExtracter';\nimport OverlayOp from '../overlay/OverlayOp';\nimport CascadedPolygonUnion from './CascadedPolygonUnion';\nexport default class UnaryUnionOp {\n\tconstructor() {\n\t\tUnaryUnionOp.constructor_.apply(this, arguments);\n\t}\n\tstatic union() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\t\tlet geoms = arguments[0];\n\t\t\t\tvar op = new UnaryUnionOp(geoms);\n\t\t\t\treturn op.union();\n\t\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\t\tlet geom = arguments[0];\n\t\t\t\tvar op = new UnaryUnionOp(geom);\n\t\t\t\treturn op.union();\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\t\tvar op = new UnaryUnionOp(geoms, geomFact);\n\t\t\treturn op.union();\n\t\t}\n\t}\n\tunionNoOpt(g0) {\n\t\tvar empty = this._geomFact.createPoint();\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n\t}\n\tunionWithNull(g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g1 === null) return g0;\n\t\tif (g0 === null) return g1;\n\t\treturn g0.union(g1);\n\t}\n\textract() {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geom = i.next();\n\t\t\t\tthis.extract(geom);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (this._geomFact === null) this._geomFact = geom.getFactory();\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_POLYGON, this._polygons);\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_LINESTRING, this._lines);\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_POINT, this._points);\n\t\t}\n\t}\n\tunion() {\n\t\tif (this._geomFact === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar unionPoints = null;\n\t\tif (this._points.size() > 0) {\n\t\t\tvar ptGeom = this._geomFact.buildGeometry(this._points);\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\n\t\t}\n\t\tvar unionLines = null;\n\t\tif (this._lines.size() > 0) {\n\t\t\tvar lineGeom = this._geomFact.buildGeometry(this._lines);\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\n\t\t}\n\t\tvar unionPolygons = null;\n\t\tif (this._polygons.size() > 0) {\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this._polygons);\n\t\t}\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\n\t\tvar union = null;\n\t\tif (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA);\n\t\tif (union === null) return this._geomFact.createGeometryCollection();\n\t\treturn union;\n\t}\n\tgetClass() {\n\t\treturn UnaryUnionOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nUnaryUnionOp.constructor_ = function () {\n\tthis._polygons = new ArrayList();\n\tthis._lines = new ArrayList();\n\tthis._points = new ArrayList();\n\tthis._geomFact = null;\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tthis.extract(geoms);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis.extract(geom);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tthis._geomFact = geomFact;\n\t\tthis.extract(geoms);\n\t}\n};\n","import Location from '../../geom/Location';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport Polygon from '../../geom/Polygon';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default class ConnectedInteriorTester {\n\tconstructor() {\n\t\tConnectedInteriorTester.constructor_.apply(this, arguments);\n\t}\n\tstatic findDifferentPoint(coord, pt) {\n\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\tif (!coord[i].equals(pt)) return coord[i];\n\t\t}\n\t\treturn null;\n\t}\n\tvisitInteriorRing(ring, graph) {\n\t\tvar pts = ring.getCoordinates();\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\n\t\tvar de = graph.findEdgeEnd(e);\n\t\tvar intDe = null;\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de;\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de.getSym();\n\t\t}\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n\t\tthis.visitLinkedDirectedEdges(intDe);\n\t}\n\tvisitShellInteriors(g, graph) {\n\t\tif (g instanceof Polygon) {\n\t\t\tvar p = g;\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t}\n\t\tif (g instanceof MultiPolygon) {\n\t\t\tvar mp = g;\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\t\tvar p = mp.getGeometryN(i);\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinate() {\n\t\treturn this._disconnectedRingcoord;\n\t}\n\tsetInteriorEdgesInResult(graph) {\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t}\n\tvisitLinkedDirectedEdges(start) {\n\t\tvar startDe = start;\n\t\tvar de = start;\n\t\tdo {\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\n\t\t\tde.setVisited(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== startDe);\n\t}\n\tbuildEdgeRings(dirEdges) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\n\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tedgeRings.addAll(minEdgeRings);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t}\n\thasUnvisitedShellEdge(edgeRings) {\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\n\t\t\tvar er = edgeRings.get(i);\n\t\t\tif (er.isHole()) continue;\n\t\t\tvar edges = er.getEdges();\n\t\t\tvar de = edges.get(0);\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\n\t\t\t\tde = edges.get(j);\n\t\t\t\tif (!de.isVisited()) {\n\t\t\t\t\tthis._disconnectedRingcoord = de.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tisInteriorsConnected() {\n\t\tvar splitEdges = new ArrayList();\n\t\tthis._geomGraph.computeSplitEdges(splitEdges);\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tgraph.addEdges(splitEdges);\n\t\tthis.setInteriorEdgesInResult(graph);\n\t\tgraph.linkResultDirectedEdges();\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n\t\tthis.visitShellInteriors(this._geomGraph.getGeometry(), graph);\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\n\t}\n\tgetClass() {\n\t\treturn ConnectedInteriorTester;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nConnectedInteriorTester.constructor_ = function () {\n\tthis._geometryFactory = new GeometryFactory();\n\tthis._geomGraph = null;\n\tthis._disconnectedRingcoord = null;\n\tlet geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n};\n","import Location from '../../geom/Location';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nexport default class RelateNodeGraph {\n\tconstructor() {\n\t\tRelateNodeGraph.constructor_.apply(this, arguments);\n\t}\n\tinsertEdgeEnds(ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t}\n\tgetNodeIterator() {\n\t\treturn this._nodes.iterator();\n\t}\n\tcopyNodesAndLabels(geomGraph, argIndex) {\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar graphNode = nodeIt.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t}\n\tbuild(geomGraph) {\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n\t\tthis.insertEdgeEnds(eeList);\n\t}\n\tcomputeIntersectionNodes(geomGraph, argIndex) {\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext(); ) {\n\t\t\tvar e = edgeIt.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn RelateNodeGraph;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nRelateNodeGraph.constructor_ = function () {\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n};\n","import RelateNodeGraph from '../relate/RelateNodeGraph';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nexport default class ConsistentAreaTester {\n\tconstructor() {\n\t\tConsistentAreaTester.constructor_.apply(this, arguments);\n\t}\n\tisNodeEdgeAreaLabelsConsistent() {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n\t\t\t\tthis._invalidPoint = node.getCoordinate().copy();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tgetInvalidPoint() {\n\t\treturn this._invalidPoint;\n\t}\n\thasDuplicateRings() {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar eeb = i.next();\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\n\t\t\t\t\tthis._invalidPoint = eeb.getEdge().getCoordinate(0);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tisNodeConsistentArea() {\n\t\tvar intersector = this._geomGraph.computeSelfNodes(this._li, true, true);\n\t\tif (intersector.hasProperIntersection()) {\n\t\t\tthis._invalidPoint = intersector.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tthis._nodeGraph.build(this._geomGraph);\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\n\t}\n\tgetClass() {\n\t\treturn ConsistentAreaTester;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nConsistentAreaTester.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._geomGraph = null;\n\tthis._nodeGraph = new RelateNodeGraph();\n\tthis._invalidPoint = null;\n\tlet geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n};\n","import STRtree from '../../index/strtree/STRtree';\nimport IsValidOp from './IsValidOp';\nimport PointLocation from '../../algorithm/PointLocation';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default class IndexedNestedRingTester {\n\tconstructor() {\n\t\tIndexedNestedRingTester.constructor_.apply(this, arguments);\n\t}\n\tbuildIndex() {\n\t\tthis._index = new STRtree();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar ring = this._rings.get(i);\n\t\t\tvar env = ring.getEnvelopeInternal();\n\t\t\tthis._index.insert(env, ring);\n\t\t}\n\t}\n\tgetNestedPoint() {\n\t\treturn this._nestedPt;\n\t}\n\tisNonNested() {\n\t\tthis.buildIndex();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar innerRing = this._rings.get(i);\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\n\t\t\tvar results = this._index.query(innerRing.getEnvelopeInternal());\n\t\t\tfor (var j = 0; j < results.size(); j++) {\n\t\t\t\tvar searchRing = results.get(j);\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\n\t\t\t\tif (innerRing === searchRing) continue;\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph);\n\t\t\t\tif (innerRingPt === null) continue;\n\t\t\t\tvar isInside = PointLocation.isInRing(innerRingPt, searchRingPts);\n\t\t\t\tif (isInside) {\n\t\t\t\t\tthis._nestedPt = innerRingPt;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tadd(ring) {\n\t\tthis._rings.add(ring);\n\t\tthis._totalEnv.expandToInclude(ring.getEnvelopeInternal());\n\t}\n\tgetClass() {\n\t\treturn IndexedNestedRingTester;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIndexedNestedRingTester.constructor_ = function () {\n\tthis._graph = null;\n\tthis._rings = new ArrayList();\n\tthis._totalEnv = new Envelope();\n\tthis._index = null;\n\tthis._nestedPt = null;\n\tlet graph = arguments[0];\n\tthis._graph = graph;\n};\n","export default class TopologyValidationError {\n\tconstructor() {\n\t\tTopologyValidationError.constructor_.apply(this, arguments);\n\t}\n\tgetErrorType() {\n\t\treturn this._errorType;\n\t}\n\tgetMessage() {\n\t\treturn TopologyValidationError.errMsg[this._errorType];\n\t}\n\tgetCoordinate() {\n\t\treturn this._pt;\n\t}\n\ttoString() {\n\t\tvar locStr = \"\";\n\t\tif (this._pt !== null) locStr = \" at or near point \" + this._pt;\n\t\treturn this.getMessage() + locStr;\n\t}\n\tgetClass() {\n\t\treturn TopologyValidationError;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTopologyValidationError.constructor_ = function () {\n\tthis._errorType = null;\n\tthis._pt = null;\n\tif (arguments.length === 1) {\n\t\tlet errorType = arguments[0];\n\t\tTopologyValidationError.constructor_.call(this, errorType, null);\n\t} else if (arguments.length === 2) {\n\t\tlet errorType = arguments[0], pt = arguments[1];\n\t\tthis._errorType = errorType;\n\t\tif (pt !== null) this._pt = pt.copy();\n\t}\n};\nTopologyValidationError.ERROR = 0;\nTopologyValidationError.REPEATED_POINT = 1;\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\nTopologyValidationError.NESTED_HOLES = 3;\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\nTopologyValidationError.SELF_INTERSECTION = 5;\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\nTopologyValidationError.NESTED_SHELLS = 7;\nTopologyValidationError.DUPLICATE_RINGS = 8;\nTopologyValidationError.TOO_FEW_POINTS = 9;\nTopologyValidationError.INVALID_COORDINATE = 10;\nTopologyValidationError.RING_NOT_CLOSED = 11;\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n","import Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport ConnectedInteriorTester from './ConnectedInteriorTester';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport PointLocation from '../../algorithm/PointLocation';\nimport LinearRing from '../../geom/LinearRing';\nimport Double from '../../../../../java/lang/Double';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport ConsistentAreaTester from './ConsistentAreaTester';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport IndexedNestedRingTester from './IndexedNestedRingTester';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport TopologyValidationError from './TopologyValidationError';\nimport IndexedPointInAreaLocator from '../../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../../util/Assert';\nexport default class IsValidOp {\n\tconstructor() {\n\t\tIsValidOp.constructor_.apply(this, arguments);\n\t}\n\tstatic findPtNotNode(testCoords, searchRing, graph) {\n\t\tvar searchEdge = graph.findEdge(searchRing);\n\t\tvar eiList = searchEdge.getEdgeIntersectionList();\n\t\tfor (var i = 0; i < testCoords.length; i++) {\n\t\t\tvar pt = testCoords[i];\n\t\t\tif (!eiList.isIntersection(pt)) return pt;\n\t\t}\n\t\treturn null;\n\t}\n\tstatic isValid() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tvar isValidOp = new IsValidOp(geom);\n\t\t\treturn isValidOp.isValid();\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tif (Double.isNaN(coord.x)) return false;\n\t\t\tif (Double.isInfinite(coord.x)) return false;\n\t\t\tif (Double.isNaN(coord.y)) return false;\n\t\t\tif (Double.isInfinite(coord.y)) return false;\n\t\t\treturn true;\n\t\t}\n\t}\n\tcheckInvalidCoordinates() {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coords = arguments[0];\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\n\t\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t}\n\tcheckHolesNotNested(p, graph) {\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar innerHole = p.getInteriorRingN(i);\n\t\t\tnestedTester.add(innerHole);\n\t\t}\n\t\tvar isNonNested = nestedTester.isNonNested();\n\t\tif (!isNonNested) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n\t\t}\n\t}\n\tcheckConsistentArea(graph) {\n\t\tvar cat = new ConsistentAreaTester(graph);\n\t\tvar isValidArea = cat.isNodeConsistentArea();\n\t\tif (!isValidArea) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t\tif (cat.hasDuplicateRings()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n\t\t}\n\t}\n\tisValid() {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr === null;\n\t}\n\tcheckShellInsideHole(shell, hole, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar holePts = hole.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\t\tif (shellPt !== null) {\n\t\t\tvar insideHole = PointLocation.isInRing(shellPt, holePts);\n\t\t\tif (!insideHole) {\n\t\t\t\treturn shellPt;\n\t\t\t}\n\t\t}\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\t\tif (holePt !== null) {\n\t\t\tvar insideShell = PointLocation.isInRing(holePt, shellPts);\n\t\t\tif (insideShell) {\n\t\t\t\treturn holePt;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n\t\treturn null;\n\t}\n\tcheckNoSelfIntersectingRings(graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t}\n\tcheckConnectedInteriors(graph) {\n\t\tvar cit = new ConnectedInteriorTester(graph);\n\t\tif (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n\t}\n\tcheckNoSelfIntersectingRing(eiList) {\n\t\tvar nodeSet = new TreeSet();\n\t\tvar isFirst = true;\n\t\tfor (var i = eiList.iterator(); i.hasNext(); ) {\n\t\t\tvar ei = i.next();\n\t\t\tif (isFirst) {\n\t\t\t\tisFirst = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nodeSet.contains(ei.coord)) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tnodeSet.add(ei.coord);\n\t\t\t}\n\t\t}\n\t}\n\tcheckHolesInShell(p, graph) {\n\t\tvar shell = p.getExteriorRing();\n\t\tvar pir = new IndexedPointInAreaLocator(shell);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n\t\t\tif (holePt === null) return null;\n\t\t\tvar outside = Location.EXTERIOR === pir.locate(holePt);\n\t\t\tif (outside) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tcheckTooFewPoints(graph) {\n\t\tif (graph.hasTooFewPoints()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t}\n\tgetValidationError() {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr;\n\t}\n\tcheckValid() {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof MultiPoint) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRing(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar li = new RobustLineIntersector();\n\t\t\tgraph.computeSelfNodes(li, true, true);\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRings(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkHolesInShell(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkHolesNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkInvalidCoordinates(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t\tthis.checkClosedRings(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesInShell(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesNotNested(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkShellsNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tthis.checkValid(g);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis._validErr = null;\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t}\n\t}\n\tsetSelfTouchingRingFormingHoleValid(isValid) {\n\t\tthis._isSelfTouchingRingFormingHoleValid = isValid;\n\t}\n\tcheckShellNotNested(shell, p, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar polyShell = p.getExteriorRing();\n\t\tvar polyPts = polyShell.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n\t\tif (shellPt === null) return null;\n\t\tvar insidePolyShell = PointLocation.isInRing(shellPt, polyPts);\n\t\tif (!insidePolyShell) return null;\n\t\tif (p.getNumInteriorRing() <= 0) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n\t\t\treturn null;\n\t\t}\n\t\tvar badNestedPt = null;\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\n\t\t\tif (badNestedPt === null) return null;\n\t\t}\n\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n\t}\n\tcheckClosedRings(poly) {\n\t\tthis.checkClosedRing(poly.getExteriorRing());\n\t\tif (this._validErr !== null) return null;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t}\n\tcheckClosedRing(ring) {\n\t\tif (!ring.isClosed()) {\n\t\t\tvar pt = null;\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n\t\t}\n\t}\n\tcheckShellsNotNested(mp, graph) {\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar p = mp.getGeometryN(i);\n\t\t\tvar shell = p.getExteriorRing();\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\n\t\t\t\tif (i === j) continue;\n\t\t\t\tvar p2 = mp.getGeometryN(j);\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn IsValidOp;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIsValidOp.constructor_ = function () {\n\tthis._parentGeometry = null;\n\tthis._isSelfTouchingRingFormingHoleValid = false;\n\tthis._validErr = null;\n\tlet parentGeometry = arguments[0];\n\tthis._parentGeometry = parentGeometry;\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport LinearRing from '../geom/LinearRing';\nexport default class PrecisionReducerCoordinateOperation extends GeometryEditor.CoordinateOperation {\n\tconstructor() {\n\t\tsuper();\n\t\tPrecisionReducerCoordinateOperation.constructor_.apply(this, arguments);\n\t}\n\tedit() {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && arguments[0] instanceof Array)) {\n\t\t\tlet coordinates = arguments[0], geom = arguments[1];\n\t\t\tif (coordinates.length === 0) return null;\n\t\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\n\t\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\t\tvar coord = new Coordinate(coordinates[i]);\n\t\t\t\tthis._targetPM.makePrecise(coord);\n\t\t\t\treducedCoords[i] = coord;\n\t\t\t}\n\t\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n\t\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n\t\t\tvar minLength = 0;\n\t\t\tif (geom instanceof LineString) minLength = 2;\n\t\t\tif (geom instanceof LinearRing) minLength = 4;\n\t\t\tvar collapsedCoords = reducedCoords;\n\t\t\tif (this._removeCollapsed) collapsedCoords = null;\n\t\t\tif (noRepeatedCoords.length < minLength) {\n\t\t\t\treturn collapsedCoords;\n\t\t\t}\n\t\t\treturn noRepeatedCoords;\n\t\t} else return super.edit.apply(this, arguments);\n\t}\n\tgetClass() {\n\t\treturn PrecisionReducerCoordinateOperation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nPrecisionReducerCoordinateOperation.constructor_ = function () {\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tlet targetPM = arguments[0], removeCollapsed = arguments[1];\n\tthis._targetPM = targetPM;\n\tthis._removeCollapsed = removeCollapsed;\n};\n","import hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport IsValidOp from '../operation/valid/IsValidOp';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport BufferOp from '../operation/buffer/BufferOp';\nimport Polygonal from '../geom/Polygonal';\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation';\nexport default class GeometryPrecisionReducer {\n\tconstructor() {\n\t\tGeometryPrecisionReducer.constructor_.apply(this, arguments);\n\t}\n\tstatic reduce(g, precModel) {\n\t\tvar reducer = new GeometryPrecisionReducer(precModel);\n\t\treturn reducer.reduce(g);\n\t}\n\tstatic reducePointwise(g, precModel) {\n\t\tvar reducer = new GeometryPrecisionReducer(precModel);\n\t\treducer.setPointwise(true);\n\t\treturn reducer.reduce(g);\n\t}\n\tfixPolygonalTopology(geom) {\n\t\tvar geomToBuffer = geom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tgeomToBuffer = this.changePM(geom, this._targetPM);\n\t\t}\n\t\tvar bufGeom = BufferOp.bufferOp(geomToBuffer, 0);\n\t\tvar finalGeom = bufGeom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tfinalGeom = bufGeom.copy();\n\t\t\tthis.changePM(finalGeom, geom.getPrecisionModel());\n\t\t}\n\t\treturn finalGeom;\n\t}\n\treducePointwise(geom) {\n\t\tvar geomEdit = null;\n\t\tif (this._changePrecisionModel) {\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this._targetPM);\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\n\t\t} else geomEdit = new GeometryEditor();\n\t\tvar finalRemoveCollapsed = this._removeCollapsed;\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed));\n\t\treturn reduceGeom;\n\t}\n\tchangePM(geom, newPM) {\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n\t}\n\tsetRemoveCollapsedComponents(removeCollapsed) {\n\t\tthis._removeCollapsed = removeCollapsed;\n\t}\n\tcreateFactory(inputFactory, pm) {\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n\t\treturn newFactory;\n\t}\n\tsetChangePrecisionModel(changePrecisionModel) {\n\t\tthis._changePrecisionModel = changePrecisionModel;\n\t}\n\treduce(geom) {\n\t\tvar reducePW = this.reducePointwise(geom);\n\t\tif (this._isPointwise) return reducePW;\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\n\t\tif (IsValidOp.isValid(reducePW)) return reducePW;\n\t\treturn this.fixPolygonalTopology(reducePW);\n\t}\n\tsetPointwise(isPointwise) {\n\t\tthis._isPointwise = isPointwise;\n\t}\n\tcreateEditor(geomFactory, newPM) {\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\n\t\tvar geomEdit = new GeometryEditor(newFactory);\n\t\treturn geomEdit;\n\t}\n\tgetClass() {\n\t\treturn GeometryPrecisionReducer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nGeometryPrecisionReducer.constructor_ = function () {\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tthis._changePrecisionModel = false;\n\tthis._isPointwise = false;\n\tlet pm = arguments[0];\n\tthis._targetPM = pm;\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport Coordinate from '../geom/Coordinate';\nimport LineSegment from '../geom/LineSegment';\nexport default class DouglasPeuckerLineSimplifier {\n\tconstructor() {\n\t\tDouglasPeuckerLineSimplifier.constructor_.apply(this, arguments);\n\t}\n\tstatic simplify(pts, distanceTolerance) {\n\t\tvar simp = new DouglasPeuckerLineSimplifier(pts);\n\t\tsimp.setDistanceTolerance(distanceTolerance);\n\t\treturn simp.simplify();\n\t}\n\tsimplifySection(i, j) {\n\t\tif (i + 1 === j) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._seg.p0 = this._pts[i];\n\t\tthis._seg.p1 = this._pts[j];\n\t\tvar maxDistance = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar distance = this._seg.distance(this._pts[k]);\n\t\t\tif (distance > maxDistance) {\n\t\t\t\tmaxDistance = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tif (maxDistance <= this._distanceTolerance) {\n\t\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\t\tthis._usePt[k] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simplifySection(i, maxIndex);\n\t\t\tthis.simplifySection(maxIndex, j);\n\t\t}\n\t}\n\tsetDistanceTolerance(distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t}\n\tsimplify() {\n\t\tthis._usePt = new Array(this._pts.length).fill(null);\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tthis._usePt[i] = true;\n\t\t}\n\t\tthis.simplifySection(0, this._pts.length - 1);\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tif (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]));\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t}\n\tgetClass() {\n\t\treturn DouglasPeuckerLineSimplifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDouglasPeuckerLineSimplifier.constructor_ = function () {\n\tthis._pts = null;\n\tthis._usePt = null;\n\tthis._distanceTolerance = null;\n\tthis._seg = new LineSegment();\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n};\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Polygon from '../geom/Polygon';\nimport LinearRing from '../geom/LinearRing';\nimport MultiPolygon from '../geom/MultiPolygon';\nexport default class DouglasPeuckerSimplifier {\n\tconstructor() {\n\t\tDouglasPeuckerSimplifier.constructor_.apply(this, arguments);\n\t}\n\tstatic simplify(geom, distanceTolerance) {\n\t\tvar tss = new DouglasPeuckerSimplifier(geom);\n\t\ttss.setDistanceTolerance(distanceTolerance);\n\t\treturn tss.getResultGeometry();\n\t}\n\tsetEnsureValid(isEnsureValidTopology) {\n\t\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\t}\n\tgetResultGeometry() {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\treturn new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom);\n\t}\n\tsetDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t}\n\tgetClass() {\n\t\treturn DouglasPeuckerSimplifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass DPTransformer extends GeometryTransformer {\n\tconstructor() {\n\t\tsuper();\n\t\tDPTransformer.constructor_.apply(this, arguments);\n\t}\n\ttransformPolygon(geom, parent) {\n\t\tif (geom.isEmpty()) return null;\n\t\tvar rawGeom = super.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn rawGeom;\n\t\t}\n\t\treturn this.createValidArea(rawGeom);\n\t}\n\tcreateValidArea(rawAreaGeom) {\n\t\tif (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n\t\treturn rawAreaGeom;\n\t}\n\ttransformCoordinates(coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = null;\n\t\tif (inputPts.length === 0) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t} else {\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t}\n\ttransformMultiPolygon(geom, parent) {\n\t\tvar rawGeom = super.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(rawGeom);\n\t}\n\ttransformLinearRing(geom, parent) {\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\n\t\tvar simpResult = super.transformLinearRing.call(this, geom, parent);\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n\t\t;\n\t\treturn simpResult;\n\t}\n\tgetClass() {\n\t\treturn DPTransformer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDPTransformer.constructor_ = function () {\n\tthis._isEnsureValidTopology = true;\n\tthis._distanceTolerance = null;\n\tlet isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1];\n\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\tthis._distanceTolerance = distanceTolerance;\n};\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\nDouglasPeuckerSimplifier.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tthis._isEnsureValidTopology = true;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n};\n","import LineSegment from '../geom/LineSegment';\nexport default class TaggedLineSegment extends LineSegment {\n\tconstructor() {\n\t\tsuper();\n\t\tTaggedLineSegment.constructor_.apply(this, arguments);\n\t}\n\tgetIndex() {\n\t\treturn this._index;\n\t}\n\tgetParent() {\n\t\treturn this._parent;\n\t}\n\tgetClass() {\n\t\treturn TaggedLineSegment;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTaggedLineSegment.constructor_ = function () {\n\tthis._parent = null;\n\tthis._index = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tTaggedLineSegment.constructor_.call(this, p0, p1, null, -1);\n\t} else if (arguments.length === 4) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], parent = arguments[2], index = arguments[3];\n\t\tLineSegment.constructor_.call(this, p0, p1);\n\t\tthis._parent = parent;\n\t\tthis._index = index;\n\t}\n};\n","import TaggedLineSegment from './TaggedLineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class TaggedLineString {\n\tconstructor() {\n\t\tTaggedLineString.constructor_.apply(this, arguments);\n\t}\n\tstatic extractCoordinates(segs) {\n\t\tvar pts = new Array(segs.size() + 1).fill(null);\n\t\tvar seg = null;\n\t\tfor (var i = 0; i < segs.size(); i++) {\n\t\t\tseg = segs.get(i);\n\t\t\tpts[i] = seg.p0;\n\t\t}\n\t\tpts[pts.length - 1] = seg.p1;\n\t\treturn pts;\n\t}\n\taddToResult(seg) {\n\t\tthis._resultSegs.add(seg);\n\t}\n\tasLineString() {\n\t\treturn this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs));\n\t}\n\tgetResultSize() {\n\t\tvar resultSegsSize = this._resultSegs.size();\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n\t}\n\tgetParent() {\n\t\treturn this._parentLine;\n\t}\n\tgetSegment(i) {\n\t\treturn this._segs[i];\n\t}\n\tgetParentCoordinates() {\n\t\treturn this._parentLine.getCoordinates();\n\t}\n\tgetMinimumSize() {\n\t\treturn this._minimumSize;\n\t}\n\tasLinearRing() {\n\t\treturn this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs));\n\t}\n\tgetSegments() {\n\t\treturn this._segs;\n\t}\n\tinit() {\n\t\tvar pts = this._parentLine.getCoordinates();\n\t\tthis._segs = new Array(pts.length - 1).fill(null);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i);\n\t\t\tthis._segs[i] = seg;\n\t\t}\n\t}\n\tgetResultCoordinates() {\n\t\treturn TaggedLineString.extractCoordinates(this._resultSegs);\n\t}\n\tgetClass() {\n\t\treturn TaggedLineString;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTaggedLineString.constructor_ = function () {\n\tthis._parentLine = null;\n\tthis._segs = null;\n\tthis._resultSegs = new ArrayList();\n\tthis._minimumSize = null;\n\tif (arguments.length === 1) {\n\t\tlet parentLine = arguments[0];\n\t\tTaggedLineString.constructor_.call(this, parentLine, 2);\n\t} else if (arguments.length === 2) {\n\t\tlet parentLine = arguments[0], minimumSize = arguments[1];\n\t\tthis._parentLine = parentLine;\n\t\tthis._minimumSize = minimumSize;\n\t\tthis.init();\n\t}\n};\n","import Quadtree from '../index/quadtree/Quadtree';\nimport ItemVisitor from '../index/ItemVisitor';\nimport LineSegment from '../geom/LineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nimport TaggedLineString from './TaggedLineString';\nexport default class LineSegmentIndex {\n\tconstructor() {\n\t\tLineSegmentIndex.constructor_.apply(this, arguments);\n\t}\n\tremove(seg) {\n\t\tthis._index.remove(new Envelope(seg.p0, seg.p1), seg);\n\t}\n\tadd() {\n\t\tif (arguments[0] instanceof TaggedLineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tvar segs = line.getSegments();\n\t\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\t\tvar seg = segs[i];\n\t\t\t\tthis.add(seg);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tthis._index.insert(new Envelope(seg.p0, seg.p1), seg);\n\t\t}\n\t}\n\tquery(querySeg) {\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\n\t\tthis._index.query(env, visitor);\n\t\tvar itemsFound = visitor.getItems();\n\t\treturn itemsFound;\n\t}\n\tgetClass() {\n\t\treturn LineSegmentIndex;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineSegmentIndex.constructor_ = function () {\n\tthis._index = new Quadtree();\n};\nclass LineSegmentVisitor {\n\tconstructor() {\n\t\tLineSegmentVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisitItem(item) {\n\t\tvar seg = item;\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item);\n\t}\n\tgetItems() {\n\t\treturn this._items;\n\t}\n\tgetClass() {\n\t\treturn LineSegmentVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [ItemVisitor];\n\t}\n}\nLineSegmentVisitor.constructor_ = function () {\n\tthis._querySeg = null;\n\tthis._items = new ArrayList();\n\tlet querySeg = arguments[0];\n\tthis._querySeg = querySeg;\n};\n","import LineSegment from '../geom/LineSegment';\nimport LineSegmentIndex from './LineSegmentIndex';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default class TaggedLineStringSimplifier {\n\tconstructor() {\n\t\tTaggedLineStringSimplifier.constructor_.apply(this, arguments);\n\t}\n\tstatic isInLineSection(line, sectionIndex, seg) {\n\t\tif (seg.getParent() !== line.getParent()) return false;\n\t\tvar segIndex = seg.getIndex();\n\t\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n\t\treturn false;\n\t}\n\tflatten(start, end) {\n\t\tvar p0 = this._linePts[start];\n\t\tvar p1 = this._linePts[end];\n\t\tvar newSeg = new LineSegment(p0, p1);\n\t\tthis.remove(this._line, start, end);\n\t\tthis._outputIndex.add(newSeg);\n\t\treturn newSeg;\n\t}\n\thasBadIntersection(parentLine, sectionIndex, candidateSeg) {\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n\t\treturn false;\n\t}\n\tsetDistanceTolerance(distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t}\n\tsimplifySection(i, j, depth) {\n\t\tdepth += 1;\n\t\tvar sectionIndex = new Array(2).fill(null);\n\t\tif (i + 1 === j) {\n\t\t\tvar newSeg = this._line.getSegment(i);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tvar isValidToSimplify = true;\n\t\tif (this._line.getResultSize() < this._line.getMinimumSize()) {\n\t\t\tvar worstCaseSize = depth + 1;\n\t\t\tif (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false;\n\t\t}\n\t\tvar distance = new Array(1).fill(null);\n\t\tvar furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance);\n\t\tif (distance[0] > this._distanceTolerance) isValidToSimplify = false;\n\t\tvar candidateSeg = new LineSegment();\n\t\tcandidateSeg.p0 = this._linePts[i];\n\t\tcandidateSeg.p1 = this._linePts[j];\n\t\tsectionIndex[0] = i;\n\t\tsectionIndex[1] = j;\n\t\tif (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\t\tif (isValidToSimplify) {\n\t\t\tvar newSeg = this.flatten(i, j);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\n\t}\n\thasBadOutputIntersection(candidateSeg) {\n\t\tvar querySegs = this._outputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tfindFurthestPoint(pts, i, j, maxDistance) {\n\t\tvar seg = new LineSegment();\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[j];\n\t\tvar maxDist = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar midPt = pts[k];\n\t\t\tvar distance = seg.distance(midPt);\n\t\t\tif (distance > maxDist) {\n\t\t\t\tmaxDist = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tmaxDistance[0] = maxDist;\n\t\treturn maxIndex;\n\t}\n\tsimplify(line) {\n\t\tthis._line = line;\n\t\tthis._linePts = line.getParentCoordinates();\n\t\tthis.simplifySection(0, this._linePts.length - 1, 0);\n\t}\n\tremove(line, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar seg = line.getSegment(i);\n\t\t\tthis._inputIndex.remove(seg);\n\t\t}\n\t}\n\thasInteriorIntersection(seg0, seg1) {\n\t\tthis._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\t\treturn this._li.isInteriorIntersection();\n\t}\n\thasBadInputIntersection(parentLine, sectionIndex, candidateSeg) {\n\t\tvar querySegs = this._inputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetClass() {\n\t\treturn TaggedLineStringSimplifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTaggedLineStringSimplifier.constructor_ = function () {\n\tthis._li = new RobustLineIntersector();\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._line = null;\n\tthis._linePts = null;\n\tthis._distanceTolerance = 0.0;\n\tlet inputIndex = arguments[0], outputIndex = arguments[1];\n\tthis._inputIndex = inputIndex;\n\tthis._outputIndex = outputIndex;\n};\n","import TaggedLineStringSimplifier from './TaggedLineStringSimplifier';\nimport LineSegmentIndex from './LineSegmentIndex';\nexport default class TaggedLinesSimplifier {\n\tconstructor() {\n\t\tTaggedLinesSimplifier.constructor_.apply(this, arguments);\n\t}\n\tsetDistanceTolerance(distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t}\n\tsimplify(taggedLines) {\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tthis._inputIndex.add(i.next());\n\t\t}\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex);\n\t\t\ttlss.setDistanceTolerance(this._distanceTolerance);\n\t\t\ttlss.simplify(i.next());\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn TaggedLinesSimplifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTaggedLinesSimplifier.constructor_ = function () {\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._distanceTolerance = 0.0;\n};\n","import LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport TaggedLineString from './TaggedLineString';\nexport default class TopologyPreservingSimplifier {\n\tconstructor() {\n\t\tTopologyPreservingSimplifier.constructor_.apply(this, arguments);\n\t}\n\tstatic simplify(geom, distanceTolerance) {\n\t\tvar tss = new TopologyPreservingSimplifier(geom);\n\t\ttss.setDistanceTolerance(distanceTolerance);\n\t\treturn tss.getResultGeometry();\n\t}\n\tgetResultGeometry() {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\tthis._linestringMap = new HashMap();\n\t\tthis._inputGeom.apply(new LineStringMapBuilderFilter(this));\n\t\tthis._lineSimplifier.simplify(this._linestringMap.values());\n\t\tvar result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom);\n\t\treturn result;\n\t}\n\tsetDistanceTolerance(distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._lineSimplifier.setDistanceTolerance(distanceTolerance);\n\t}\n\tgetClass() {\n\t\treturn TopologyPreservingSimplifier;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass LineStringTransformer extends GeometryTransformer {\n\tconstructor() {\n\t\tsuper();\n\t\tLineStringTransformer.constructor_.apply(this, arguments);\n\t}\n\ttransformCoordinates(coords, parent) {\n\t\tif (coords.size() === 0) return null;\n\t\tif (parent instanceof LineString) {\n\t\t\tvar taggedLine = this._linestringMap.get(parent);\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\n\t\t}\n\t\treturn super.transformCoordinates.call(this, coords, parent);\n\t}\n\tgetClass() {\n\t\treturn LineStringTransformer;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLineStringTransformer.constructor_ = function () {\n\tthis._linestringMap = null;\n\tlet linestringMap = arguments[0];\n\tthis._linestringMap = linestringMap;\n};\nclass LineStringMapBuilderFilter {\n\tconstructor() {\n\t\tLineStringMapBuilderFilter.constructor_.apply(this, arguments);\n\t}\n\tfilter(geom) {\n\t\tif (geom instanceof LineString) {\n\t\t\tvar line = geom;\n\t\t\tif (line.isEmpty()) return null;\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\n\t\t\tthis.tps._linestringMap.put(line, taggedLine);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn LineStringMapBuilderFilter;\n\t}\n\tget interfaces_() {\n\t\treturn [GeometryComponentFilter];\n\t}\n}\nLineStringMapBuilderFilter.constructor_ = function () {\n\tthis.tps = null;\n\tlet tps = arguments[0];\n\tthis.tps = tps;\n};\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\nTopologyPreservingSimplifier.constructor_ = function () {\n\tthis._inputGeom = null;\n\tthis._lineSimplifier = new TaggedLinesSimplifier();\n\tthis._linestringMap = null;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n};\n","import Coordinate from '../geom/Coordinate';\nexport default class SplitSegment {\n\tconstructor() {\n\t\tSplitSegment.constructor_.apply(this, arguments);\n\t}\n\tstatic pointAlongReverse(seg, segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n\t\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n\t\treturn coord;\n\t}\n\tsplitAt() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tvar minFrac = this._minimumLen / this._segLen;\n\t\t\tif (pt.distance(this._seg.p0) < this._minimumLen) {\n\t\t\t\tthis._splitPt = this._seg.pointAlong(minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (pt.distance(this._seg.p1) < this._minimumLen) {\n\t\t\t\tthis._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._splitPt = pt;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], endPt = arguments[1];\n\t\t\tvar actualLen = this.getConstrainedLength(length);\n\t\t\tvar frac = actualLen / this._segLen;\n\t\t\tif (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac); else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac);\n\t\t}\n\t}\n\tsetMinimumLength(minLen) {\n\t\tthis._minimumLen = minLen;\n\t}\n\tgetConstrainedLength(len) {\n\t\tif (len < this._minimumLen) return this._minimumLen;\n\t\treturn len;\n\t}\n\tgetSplitPoint() {\n\t\treturn this._splitPt;\n\t}\n\tgetClass() {\n\t\treturn SplitSegment;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSplitSegment.constructor_ = function () {\n\tthis._seg = null;\n\tthis._segLen = null;\n\tthis._splitPt = null;\n\tthis._minimumLen = 0.0;\n\tlet seg = arguments[0];\n\tthis._seg = seg;\n\tthis._segLen = seg.getLength();\n};\n","export default class ConstraintSplitPointFinder {\n\tconstructor() {\n\t\tConstraintSplitPointFinder.constructor_.apply(this, arguments);\n\t}\n\tfindSplitPoint(seg, encroachPt) {}\n\tgetClass() {\n\t\treturn ConstraintSplitPointFinder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nConstraintSplitPointFinder.constructor_ = function () {};\n","import SplitSegment from './SplitSegment';\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder';\nexport default class NonEncroachingSplitPointFinder {\n\tconstructor() {\n\t\tNonEncroachingSplitPointFinder.constructor_.apply(this, arguments);\n\t}\n\tstatic projectedSplitPoint(seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar projPt = lineSeg.project(encroachPt);\n\t\treturn projPt;\n\t}\n\tfindSplitPoint(seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar segLen = lineSeg.getLength();\n\t\tvar midPtLen = segLen / 2;\n\t\tvar splitSeg = new SplitSegment(lineSeg);\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n\t\tvar maxSplitLen = nonEncroachDiam;\n\t\tif (maxSplitLen > midPtLen) {\n\t\t\tmaxSplitLen = midPtLen;\n\t\t}\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\n\t\tsplitSeg.splitAt(projPt);\n\t\treturn splitSeg.getSplitPoint();\n\t}\n\tgetClass() {\n\t\treturn NonEncroachingSplitPointFinder;\n\t}\n\tget interfaces_() {\n\t\treturn [ConstraintSplitPointFinder];\n\t}\n}\nNonEncroachingSplitPointFinder.constructor_ = function () {};\n","import WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport DD from '../../math/DD';\nimport System from '../../../../../java/lang/System';\nimport Triangle from '../../geom/Triangle';\nexport default class TrianglePredicate {\n\tconstructor() {\n\t\tTrianglePredicate.constructor_.apply(this, arguments);\n\t}\n\tstatic triArea(a, b, c) {\n\t\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n\t}\n\tstatic isInCircleDDNormalized(a, b, c, p) {\n\t\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\n\t\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\n\t\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\n\t\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\n\t\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\n\t\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\n\t\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n\t\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n\t\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n\t\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n\t\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n\t\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n\t\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n\t\tvar isInCircle = sum.doubleValue() > 0;\n\t\treturn isInCircle;\n\t}\n\tstatic checkRobustInCircle(a, b, c, p) {\n\t\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n\t\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n\t\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n\t\tvar circumCentre = Triangle.circumcentre(a, b, c);\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\t\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n\t\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n\t\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n\t\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n\t\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n\t\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n\t\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\tstatic isInCircleDDFast(a, b, c, p) {\n\t\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n\t\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n\t\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n\t\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n\t\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n\t\tvar isInCircle = sum.doubleValue() > 0;\n\t\treturn isInCircle;\n\t}\n\tstatic isInCircleCC(a, b, c, p) {\n\t\tvar cc = Triangle.circumcentre(a, b, c);\n\t\tvar ccRadius = a.distance(cc);\n\t\tvar pRadiusDiff = p.distance(cc) - ccRadius;\n\t\treturn pRadiusDiff <= 0;\n\t}\n\tstatic isInCircleNormalized(a, b, c, p) {\n\t\tvar adx = a.x - p.x;\n\t\tvar ady = a.y - p.y;\n\t\tvar bdx = b.x - p.x;\n\t\tvar bdy = b.y - p.y;\n\t\tvar cdx = c.x - p.x;\n\t\tvar cdy = c.y - p.y;\n\t\tvar abdet = adx * bdy - bdx * ady;\n\t\tvar bcdet = bdx * cdy - cdx * bdy;\n\t\tvar cadet = cdx * ady - adx * cdy;\n\t\tvar alift = adx * adx + ady * ady;\n\t\tvar blift = bdx * bdx + bdy * bdy;\n\t\tvar clift = cdx * cdx + cdy * cdy;\n\t\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\n\t\treturn disc > 0;\n\t}\n\tstatic isInCircleDDSlow(a, b, c, p) {\n\t\tvar px = DD.valueOf(p.x);\n\t\tvar py = DD.valueOf(p.y);\n\t\tvar ax = DD.valueOf(a.x);\n\t\tvar ay = DD.valueOf(a.y);\n\t\tvar bx = DD.valueOf(b.x);\n\t\tvar by = DD.valueOf(b.y);\n\t\tvar cx = DD.valueOf(c.x);\n\t\tvar cy = DD.valueOf(c.y);\n\t\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n\t\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n\t\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n\t\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n\t\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n\t\tvar isInCircle = sum.doubleValue() > 0;\n\t\treturn isInCircle;\n\t}\n\tstatic isInCircleNonRobust(a, b, c, p) {\n\t\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n\t\treturn isInCircle;\n\t}\n\tstatic isInCircleRobust(a, b, c, p) {\n\t\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\n\t}\n\tstatic triAreaDDSlow(ax, ay, bx, by, cx, cy) {\n\t\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n\t}\n\tstatic triAreaDDFast(a, b, c) {\n\t\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n\t\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n\t\treturn t1.selfSubtract(t2);\n\t}\n\tgetClass() {\n\t\treturn TrianglePredicate;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTrianglePredicate.constructor_ = function () {};\n","import NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Coordinate from '../../geom/Coordinate';\nimport TrianglePredicate from './TrianglePredicate';\nimport System from '../../../../../java/lang/System';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default class Vertex {\n\tconstructor() {\n\t\tVertex.constructor_.apply(this, arguments);\n\t}\n\tstatic interpolateZ() {\n\t\tif (arguments.length === 3) {\n\t\t\tlet p = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\t\tvar segLen = p0.distance(p1);\n\t\t\tvar ptLen = p.distance(p0);\n\t\t\tvar dz = p1.z - p0.z;\n\t\t\tvar pz = p0.z + dz * (ptLen / segLen);\n\t\t\treturn pz;\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet p = arguments[0], v0 = arguments[1], v1 = arguments[2], v2 = arguments[3];\n\t\t\tvar x0 = v0.x;\n\t\t\tvar y0 = v0.y;\n\t\t\tvar a = v1.x - x0;\n\t\t\tvar b = v2.x - x0;\n\t\t\tvar c = v1.y - y0;\n\t\t\tvar d = v2.y - y0;\n\t\t\tvar det = a * d - b * c;\n\t\t\tvar dx = p.x - x0;\n\t\t\tvar dy = p.y - y0;\n\t\t\tvar t = (d * dx - b * dy) / det;\n\t\t\tvar u = (-c * dx + a * dy) / det;\n\t\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\t\treturn z;\n\t\t}\n\t}\n\tcircleCenter(b, c) {\n\t\tvar a = new Vertex(this.getX(), this.getY());\n\t\tvar cab = this.bisector(a, b);\n\t\tvar cbc = this.bisector(b, c);\n\t\tvar hcc = new HCoordinate(cab, cbc);\n\t\tvar cc = null;\n\t\ttry {\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\n\t\t} catch (nre) {\n\t\t\tif (nre instanceof NotRepresentableException) {\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n\t\t\t\tSystem.err.println(nre);\n\t\t\t} else throw nre;\n\t\t} finally {}\n\t\treturn cc;\n\t}\n\tdot(v) {\n\t\treturn this._p.x * v.getX() + this._p.y * v.getY();\n\t}\n\tmagn() {\n\t\treturn Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y);\n\t}\n\tgetZ() {\n\t\treturn this._p.z;\n\t}\n\tbisector(a, b) {\n\t\tvar dx = b.getX() - a.getX();\n\t\tvar dy = b.getY() - a.getY();\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t}\n\tequals() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet _x = arguments[0];\n\t\t\tif (this._p.x === _x.getX() && this._p.y === _x.getY()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet _x = arguments[0], tolerance = arguments[1];\n\t\t\tif (this._p.distance(_x.getCoordinate()) < tolerance) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\tgetCoordinate() {\n\t\treturn this._p;\n\t}\n\tisInCircle(a, b, c) {\n\t\treturn TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p);\n\t}\n\tinterpolateZValue(v0, v1, v2) {\n\t\tvar x0 = v0.getX();\n\t\tvar y0 = v0.getY();\n\t\tvar a = v1.getX() - x0;\n\t\tvar b = v2.getX() - x0;\n\t\tvar c = v1.getY() - y0;\n\t\tvar d = v2.getY() - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = this.getX() - x0;\n\t\tvar dy = this.getY() - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n\t\treturn z;\n\t}\n\tmidPoint(a) {\n\t\tvar xm = (this._p.x + a.getX()) / 2.0;\n\t\tvar ym = (this._p.y + a.getY()) / 2.0;\n\t\tvar zm = (this._p.z + a.getZ()) / 2.0;\n\t\treturn new Vertex(xm, ym, zm);\n\t}\n\trightOf(e) {\n\t\treturn this.isCCW(e.dest(), e.orig());\n\t}\n\tisCCW(b, c) {\n\t\treturn (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0;\n\t}\n\tgetX() {\n\t\treturn this._p.x;\n\t}\n\tcrossProduct(v) {\n\t\treturn this._p.x * v.getY() - this._p.y * v.getX();\n\t}\n\tsetZ(_z) {\n\t\tthis._p.z = _z;\n\t}\n\ttimes(c) {\n\t\treturn new Vertex(c * this._p.x, c * this._p.y);\n\t}\n\tcross() {\n\t\treturn new Vertex(this._p.y, -this._p.x);\n\t}\n\tleftOf(e) {\n\t\treturn this.isCCW(e.orig(), e.dest());\n\t}\n\ttoString() {\n\t\treturn \"POINT (\" + this._p.x + \" \" + this._p.y + \")\";\n\t}\n\tsub(v) {\n\t\treturn new Vertex(this._p.x - v.getX(), this._p.y - v.getY());\n\t}\n\tgetY() {\n\t\treturn this._p.y;\n\t}\n\tclassify(p0, p1) {\n\t\tvar p2 = this;\n\t\tvar a = p1.sub(p0);\n\t\tvar b = p2.sub(p0);\n\t\tvar sa = a.crossProduct(b);\n\t\tif (sa > 0.0) return Vertex.LEFT;\n\t\tif (sa < 0.0) return Vertex.RIGHT;\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\n\t\treturn Vertex.BETWEEN;\n\t}\n\tsum(v) {\n\t\treturn new Vertex(this._p.x + v.getX(), this._p.y + v.getY());\n\t}\n\tdistance(v1, v2) {\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n\t}\n\tcircumRadiusRatio(b, c) {\n\t\tvar x = this.circleCenter(b, c);\n\t\tvar radius = this.distance(x, b);\n\t\tvar edgeLength = this.distance(this, b);\n\t\tvar el = this.distance(b, c);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\tel = this.distance(c, this);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\treturn radius / edgeLength;\n\t}\n\tgetClass() {\n\t\treturn Vertex;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nVertex.constructor_ = function () {\n\tthis._p = null;\n\tif (arguments.length === 1) {\n\t\tlet _p = arguments[0];\n\t\tthis._p = new Coordinate(_p);\n\t} else if (arguments.length === 2) {\n\t\tlet _x = arguments[0], _y = arguments[1];\n\t\tthis._p = new Coordinate(_x, _y);\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _z = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y, _z);\n\t}\n};\nVertex.LEFT = 0;\nVertex.RIGHT = 1;\nVertex.BEYOND = 2;\nVertex.BEHIND = 3;\nVertex.BETWEEN = 4;\nVertex.ORIGIN = 5;\nVertex.DESTINATION = 6;\n","import Vertex from './quadedge/Vertex';\nexport default class ConstraintVertex extends Vertex {\n\tconstructor() {\n\t\tsuper();\n\t\tConstraintVertex.constructor_.apply(this, arguments);\n\t}\n\tgetConstraint() {\n\t\treturn this._constraint;\n\t}\n\tsetOnConstraint(isOnConstraint) {\n\t\tthis._isOnConstraint = isOnConstraint;\n\t}\n\tmerge(other) {\n\t\tif (other._isOnConstraint) {\n\t\t\tthis._isOnConstraint = true;\n\t\t\tthis._constraint = other._constraint;\n\t\t}\n\t}\n\tisOnConstraint() {\n\t\treturn this._isOnConstraint;\n\t}\n\tsetConstraint(constraint) {\n\t\tthis._isOnConstraint = true;\n\t\tthis._constraint = constraint;\n\t}\n\tgetClass() {\n\t\treturn ConstraintVertex;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nConstraintVertex.constructor_ = function () {\n\tthis._isOnConstraint = null;\n\tthis._constraint = null;\n\tlet p = arguments[0];\n\tVertex.constructor_.call(this, p);\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport LineSegment from '../../geom/LineSegment';\nexport default class QuadEdge {\n\tconstructor() {\n\t\tQuadEdge.constructor_.apply(this, arguments);\n\t}\n\tstatic makeEdge(o, d) {\n\t\tvar q0 = new QuadEdge();\n\t\tvar q1 = new QuadEdge();\n\t\tvar q2 = new QuadEdge();\n\t\tvar q3 = new QuadEdge();\n\t\tq0._rot = q1;\n\t\tq1._rot = q2;\n\t\tq2._rot = q3;\n\t\tq3._rot = q0;\n\t\tq0.setNext(q0);\n\t\tq1.setNext(q3);\n\t\tq2.setNext(q2);\n\t\tq3.setNext(q1);\n\t\tvar base = q0;\n\t\tbase.setOrig(o);\n\t\tbase.setDest(d);\n\t\treturn base;\n\t}\n\tstatic swap(e) {\n\t\tvar a = e.oPrev();\n\t\tvar b = e.sym().oPrev();\n\t\tQuadEdge.splice(e, a);\n\t\tQuadEdge.splice(e.sym(), b);\n\t\tQuadEdge.splice(e, a.lNext());\n\t\tQuadEdge.splice(e.sym(), b.lNext());\n\t\te.setOrig(a.dest());\n\t\te.setDest(b.dest());\n\t}\n\tstatic splice(a, b) {\n\t\tvar alpha = a.oNext().rot();\n\t\tvar beta = b.oNext().rot();\n\t\tvar t1 = b.oNext();\n\t\tvar t2 = a.oNext();\n\t\tvar t3 = beta.oNext();\n\t\tvar t4 = alpha.oNext();\n\t\ta.setNext(t1);\n\t\tb.setNext(t2);\n\t\talpha.setNext(t3);\n\t\tbeta.setNext(t4);\n\t}\n\tstatic connect(a, b) {\n\t\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\n\t\tQuadEdge.splice(e, a.lNext());\n\t\tQuadEdge.splice(e.sym(), b);\n\t\treturn e;\n\t}\n\tequalsNonOriented(qe) {\n\t\tif (this.equalsOriented(qe)) return true;\n\t\tif (this.equalsOriented(qe.sym())) return true;\n\t\treturn false;\n\t}\n\ttoLineSegment() {\n\t\treturn new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate());\n\t}\n\tdest() {\n\t\treturn this.sym().orig();\n\t}\n\toNext() {\n\t\treturn this._next;\n\t}\n\tequalsOriented(qe) {\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n\t\treturn false;\n\t}\n\tdNext() {\n\t\treturn this.sym().oNext().sym();\n\t}\n\tlPrev() {\n\t\treturn this._next.sym();\n\t}\n\trPrev() {\n\t\treturn this.sym().oNext();\n\t}\n\trot() {\n\t\treturn this._rot;\n\t}\n\toPrev() {\n\t\treturn this._rot._next._rot;\n\t}\n\tsym() {\n\t\treturn this._rot._rot;\n\t}\n\tsetOrig(o) {\n\t\tthis._vertex = o;\n\t}\n\tlNext() {\n\t\treturn this.invRot().oNext().rot();\n\t}\n\tgetLength() {\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\n\t}\n\tinvRot() {\n\t\treturn this._rot.sym();\n\t}\n\tsetDest(d) {\n\t\tthis.sym().setOrig(d);\n\t}\n\tsetData(data) {\n\t\tthis._data = data;\n\t}\n\tgetData() {\n\t\treturn this._data;\n\t}\n\tdelete() {\n\t\tthis._rot = null;\n\t}\n\torig() {\n\t\treturn this._vertex;\n\t}\n\trNext() {\n\t\treturn this._rot._next.invRot();\n\t}\n\ttoString() {\n\t\tvar p0 = this._vertex.getCoordinate();\n\t\tvar p1 = this.dest().getCoordinate();\n\t\treturn WKTWriter.toLineString(p0, p1);\n\t}\n\tisLive() {\n\t\treturn this._rot !== null;\n\t}\n\tgetPrimary() {\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym();\n\t}\n\tdPrev() {\n\t\treturn this.invRot().oNext().invRot();\n\t}\n\tsetNext(next) {\n\t\tthis._next = next;\n\t}\n\tgetClass() {\n\t\treturn QuadEdge;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nQuadEdge.constructor_ = function () {\n\tthis._rot = null;\n\tthis._vertex = null;\n\tthis._next = null;\n\tthis._data = null;\n};\n","import QuadEdge from './quadedge/QuadEdge';\nexport default class IncrementalDelaunayTriangulator {\n\tconstructor() {\n\t\tIncrementalDelaunayTriangulator.constructor_.apply(this, arguments);\n\t}\n\tinsertSite(v) {\n\t\tvar e = this._subdiv.locate(v);\n\t\tif (this._subdiv.isVertexOfEdge(e, v)) {\n\t\t\treturn e;\n\t\t} else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n\t\t\te = e.oPrev();\n\t\t\tthis._subdiv.delete(e.oNext());\n\t\t}\n\t\tvar base = this._subdiv.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this._subdiv.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\tdo {\n\t\t\tvar t = e.oPrev();\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n\t\t\t\tQuadEdge.swap(e);\n\t\t\t\te = e.oPrev();\n\t\t\t} else if (e.oNext() === startEdge) {\n\t\t\t\treturn base;\n\t\t\t} else {\n\t\t\t\te = e.oNext().lPrev();\n\t\t\t}\n\t\t} while (true);\n\t}\n\tinsertSites(vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn IncrementalDelaunayTriangulator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nIncrementalDelaunayTriangulator.constructor_ = function () {\n\tthis._subdiv = null;\n\tthis._isUsingTolerance = false;\n\tlet subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis._isUsingTolerance = subdiv.getTolerance() > 0.0;\n};\n","export default class QuadEdgeLocator {\n\tconstructor() {\n\t\tQuadEdgeLocator.constructor_.apply(this, arguments);\n\t}\n\tlocate(v) {}\n\tgetClass() {\n\t\treturn QuadEdgeLocator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nQuadEdgeLocator.constructor_ = function () {};\n","import QuadEdgeLocator from './QuadEdgeLocator';\nexport default class LastFoundQuadEdgeLocator {\n\tconstructor() {\n\t\tLastFoundQuadEdgeLocator.constructor_.apply(this, arguments);\n\t}\n\tinit() {\n\t\tthis._lastEdge = this.findEdge();\n\t}\n\tlocate(v) {\n\t\tif (!this._lastEdge.isLive()) {\n\t\t\tthis.init();\n\t\t}\n\t\tvar e = this._subdiv.locateFromEdge(v, this._lastEdge);\n\t\tthis._lastEdge = e;\n\t\treturn e;\n\t}\n\tfindEdge() {\n\t\tvar edges = this._subdiv.getEdges();\n\t\treturn edges.iterator().next();\n\t}\n\tgetClass() {\n\t\treturn LastFoundQuadEdgeLocator;\n\t}\n\tget interfaces_() {\n\t\treturn [QuadEdgeLocator];\n\t}\n}\nLastFoundQuadEdgeLocator.constructor_ = function () {\n\tthis._subdiv = null;\n\tthis._lastEdge = null;\n\tlet subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis.init();\n};\n","import LineSegment from '../../geom/LineSegment';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nexport default class LocateFailureException extends RuntimeException {\n\tconstructor() {\n\t\tsuper();\n\t\tLocateFailureException.constructor_.apply(this, arguments);\n\t}\n\tstatic msgWithSpatial(msg, seg) {\n\t\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\n\t\treturn msg;\n\t}\n\tgetSegment() {\n\t\treturn this._seg;\n\t}\n\tgetClass() {\n\t\treturn LocateFailureException;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLocateFailureException.constructor_ = function () {\n\tthis._seg = null;\n\tif (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet msg = arguments[0];\n\t\t\tRuntimeException.constructor_.call(this, msg);\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tRuntimeException.constructor_.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n\t\t\tthis._seg = new LineSegment(seg);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], seg = arguments[1];\n\t\tRuntimeException.constructor_.call(this, LocateFailureException.msgWithSpatial(msg, seg));\n\t\tthis._seg = new LineSegment(seg);\n\t}\n};\n","export default class TriangleVisitor {\n\tconstructor() {\n\t\tTriangleVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisit(triEdges) {}\n\tgetClass() {\n\t\treturn TriangleVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nTriangleVisitor.constructor_ = function () {};\n","import QuadEdge from './QuadEdge';\nimport CoordinateList from '../../geom/CoordinateList';\nimport HashSet from '../../../../../java/util/HashSet';\nimport WKTWriter from '../../io/WKTWriter';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Stack from '../../../../../java/util/Stack';\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator';\nimport LocateFailureException from './LocateFailureException';\nimport Vertex from './Vertex';\nimport System from '../../../../../java/lang/System';\nimport LineSegment from '../../geom/LineSegment';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nimport Triangle from '../../geom/Triangle';\nimport TriangleVisitor from './TriangleVisitor';\nexport default class QuadEdgeSubdivision {\n\tconstructor() {\n\t\tQuadEdgeSubdivision.constructor_.apply(this, arguments);\n\t}\n\tstatic getTriangleEdges(startQE, triEdge) {\n\t\ttriEdge[0] = startQE;\n\t\ttriEdge[1] = triEdge[0].lNext();\n\t\ttriEdge[2] = triEdge[1].lNext();\n\t\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n\t}\n\tgetTriangleVertices(includeFrame) {\n\t\tvar visitor = new TriangleVertexListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleVertices();\n\t}\n\tisFrameVertex(v) {\n\t\tif (v.equals(this._frameVertex[0])) return true;\n\t\tif (v.equals(this._frameVertex[1])) return true;\n\t\tif (v.equals(this._frameVertex[2])) return true;\n\t\treturn false;\n\t}\n\tisVertexOfEdge(e, v) {\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tconnect(a, b) {\n\t\tvar q = QuadEdge.connect(a, b);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t}\n\tgetVoronoiCellPolygon(qe, geomFact) {\n\t\tvar cellPts = new ArrayList();\n\t\tvar startQE = qe;\n\t\tdo {\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\n\t\t\tcellPts.add(cc);\n\t\t\tqe = qe.oPrev();\n\t\t} while (qe !== startQE);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.addAll(cellPts, false);\n\t\tcoordList.closeRing();\n\t\tif (coordList.size() < 4) {\n\t\t\tSystem.out.println(coordList);\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\n\t\t}\n\t\tvar pts = coordList.toCoordinateArray();\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts));\n\t\tvar v = startQE.orig();\n\t\tcellPoly.setUserData(v.getCoordinate());\n\t\treturn cellPoly;\n\t}\n\tsetLocator(locator) {\n\t\tthis._locator = locator;\n\t}\n\tinitSubdiv() {\n\t\tvar ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1]);\n\t\tvar eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2]);\n\t\tQuadEdge.splice(ea.sym(), eb);\n\t\tvar ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0]);\n\t\tQuadEdge.splice(eb.sym(), ec);\n\t\tQuadEdge.splice(ec.sym(), ea);\n\t\treturn ea;\n\t}\n\tisFrameBorderEdge(e) {\n\t\tvar leftTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n\t\tvar rightTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n\t\tvar vLeftTriOther = e.lNext().dest();\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\n\t\tvar vRightTriOther = e.sym().lNext().dest();\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\n\t\treturn false;\n\t}\n\tmakeEdge(o, d) {\n\t\tvar q = QuadEdge.makeEdge(o, d);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t}\n\tvisitTriangles(triVisitor, includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\n\t\t\t}\n\t\t}\n\t}\n\tisFrameEdge(e) {\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n\t\treturn false;\n\t}\n\tisOnEdge(e, p) {\n\t\tthis._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\t\tvar dist = this._seg.distance(p);\n\t\treturn dist < this._edgeCoincidenceTolerance;\n\t}\n\tgetEnvelope() {\n\t\treturn new Envelope(this._frameEnv);\n\t}\n\tcreateFrame(env) {\n\t\tvar deltaX = env.getWidth();\n\t\tvar deltaY = env.getHeight();\n\t\tvar offset = 0.0;\n\t\tif (deltaX > deltaY) {\n\t\t\toffset = deltaX * 10.0;\n\t\t} else {\n\t\t\toffset = deltaY * 10.0;\n\t\t}\n\t\tthis._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n\t\tthis._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n\t\tthis._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n\t\tthis._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate());\n\t\tthis._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate());\n\t}\n\tgetTriangleCoordinates(includeFrame) {\n\t\tvar visitor = new TriangleCoordinatesVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangles();\n\t}\n\tgetVertices(includeFrame) {\n\t\tvar vertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n\t\t\tvar vd = qe.dest();\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n\t\t}\n\t\treturn vertices;\n\t}\n\tfetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges) {\n\t\tvar curr = edge;\n\t\tvar edgeCount = 0;\n\t\tvar isFrame = false;\n\t\tdo {\n\t\t\tthis._triEdges[edgeCount] = curr;\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\n\t\t\tvar sym = curr.sym();\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\n\t\t\tvisitedEdges.add(curr);\n\t\t\tedgeCount++;\n\t\t\tcurr = curr.lNext();\n\t\t} while (curr !== edge);\n\t\tif (isFrame && !includeFrame) return null;\n\t\treturn this._triEdges;\n\t}\n\tgetEdges() {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this._quadEdges;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomFact = arguments[0];\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\n\t\t\tvar i = 0;\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext(); ) {\n\t\t\t\tvar qe = it.next();\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n\t\t\t}\n\t\t\treturn geomFact.createMultiLineString(edges);\n\t\t}\n\t}\n\tgetVertexUniqueEdges(includeFrame) {\n\t\tvar edges = new ArrayList();\n\t\tvar visitedVertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (!visitedVertices.contains(v)) {\n\t\t\t\tvisitedVertices.add(v);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\n\t\t\t\t\tedges.add(qe);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar qd = qe.sym();\n\t\t\tvar vd = qd.orig();\n\t\t\tif (!visitedVertices.contains(vd)) {\n\t\t\t\tvisitedVertices.add(vd);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\n\t\t\t\t\tedges.add(qd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t}\n\tgetTriangleEdges(includeFrame) {\n\t\tvar visitor = new TriangleEdgesListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleEdges();\n\t}\n\tgetPrimaryEdges(includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edges = new ArrayList();\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar priQE = edge.getPrimary();\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n\t\t\t\tedgeStack.push(edge.oNext());\n\t\t\t\tedgeStack.push(edge.sym().oNext());\n\t\t\t\tvisitedEdges.add(edge);\n\t\t\t\tvisitedEdges.add(edge.sym());\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t}\n\tdelete(e) {\n\t\tQuadEdge.splice(e, e.oPrev());\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\n\t\tvar eSym = e.sym();\n\t\tvar eRot = e.rot();\n\t\tvar eRotSym = e.rot().sym();\n\t\tthis._quadEdges.remove(e);\n\t\tthis._quadEdges.remove(eSym);\n\t\tthis._quadEdges.remove(eRot);\n\t\tthis._quadEdges.remove(eRotSym);\n\t\te.delete();\n\t\teSym.delete();\n\t\teRot.delete();\n\t\teRotSym.delete();\n\t}\n\tlocateFromEdge(v, startEdge) {\n\t\tvar iter = 0;\n\t\tvar maxIter = this._quadEdges.size();\n\t\tvar e = startEdge;\n\t\twhile (true) {\n\t\t\titer++;\n\t\t\tif (iter > maxIter) {\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\n\t\t\t}\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\n\t\t\t\tbreak;\n\t\t\t} else if (v.rightOf(e)) {\n\t\t\t\te = e.sym();\n\t\t\t} else if (!v.rightOf(e.oNext())) {\n\t\t\t\te = e.oNext();\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\n\t\t\t\te = e.dPrev();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t}\n\tgetTolerance() {\n\t\treturn this._tolerance;\n\t}\n\tgetVoronoiCellPolygons(geomFact) {\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\n\t\tvar cells = new ArrayList();\n\t\tvar edges = this.getVertexUniqueEdges(false);\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\n\t\t}\n\t\treturn cells;\n\t}\n\tgetVoronoiDiagram(geomFact) {\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n\t}\n\tgetTriangles(geomFact) {\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = triPtsList.iterator(); it.hasNext(); ) {\n\t\t\tvar triPt = it.next();\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt));\n\t\t}\n\t\treturn geomFact.createGeometryCollection(tris);\n\t}\n\tinsertSite(v) {\n\t\tvar e = this.locate(v);\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn e;\n\t\t}\n\t\tvar base = this.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\treturn startEdge;\n\t}\n\tlocate() {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vertex) {\n\t\t\t\tlet v = arguments[0];\n\t\t\t\treturn this._locator.locate(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this._locator.locate(new Vertex(p));\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tvar e = this._locator.locate(new Vertex(p0));\n\t\t\tif (e === null) return null;\n\t\t\tvar base = e;\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n\t\t\tvar locEdge = base;\n\t\t\tdo {\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n\t\t\t\tlocEdge = locEdge.oNext();\n\t\t\t} while (locEdge !== base);\n\t\t\treturn null;\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn QuadEdgeSubdivision;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nclass TriangleCircumcentreVisitor {\n\tconstructor() {\n\t\tTriangleCircumcentreVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisit(triEdges) {\n\t\tvar a = triEdges[0].orig().getCoordinate();\n\t\tvar b = triEdges[1].orig().getCoordinate();\n\t\tvar c = triEdges[2].orig().getCoordinate();\n\t\tvar cc = Triangle.circumcentre(a, b, c);\n\t\tvar ccVertex = new Vertex(cc);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn TriangleCircumcentreVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [TriangleVisitor];\n\t}\n}\nTriangleCircumcentreVisitor.constructor_ = function () {};\nclass TriangleEdgesListVisitor {\n\tconstructor() {\n\t\tTriangleEdgesListVisitor.constructor_.apply(this, arguments);\n\t}\n\tgetTriangleEdges() {\n\t\treturn this._triList;\n\t}\n\tvisit(triEdges) {\n\t\tthis._triList.add(triEdges);\n\t}\n\tgetClass() {\n\t\treturn TriangleEdgesListVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [TriangleVisitor];\n\t}\n}\nTriangleEdgesListVisitor.constructor_ = function () {\n\tthis._triList = new ArrayList();\n};\nclass TriangleVertexListVisitor {\n\tconstructor() {\n\t\tTriangleVertexListVisitor.constructor_.apply(this, arguments);\n\t}\n\tvisit(triEdges) {\n\t\tthis._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n\t}\n\tgetTriangleVertices() {\n\t\treturn this._triList;\n\t}\n\tgetClass() {\n\t\treturn TriangleVertexListVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [TriangleVisitor];\n\t}\n}\nTriangleVertexListVisitor.constructor_ = function () {\n\tthis._triList = new ArrayList();\n};\nclass TriangleCoordinatesVisitor {\n\tconstructor() {\n\t\tTriangleCoordinatesVisitor.constructor_.apply(this, arguments);\n\t}\n\tcheckTriangleSize(pts) {\n\t\tvar loc = \"\";\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else {\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n\t\t}\n\t}\n\tvisit(triEdges) {\n\t\tthis._coordList.clear();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar v = triEdges[i].orig();\n\t\t\tthis._coordList.add(v.getCoordinate());\n\t\t}\n\t\tif (this._coordList.size() > 0) {\n\t\t\tthis._coordList.closeRing();\n\t\t\tvar pts = this._coordList.toCoordinateArray();\n\t\t\tif (pts.length !== 4) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._triCoords.add(pts);\n\t\t}\n\t}\n\tgetTriangles() {\n\t\treturn this._triCoords;\n\t}\n\tgetClass() {\n\t\treturn TriangleCoordinatesVisitor;\n\t}\n\tget interfaces_() {\n\t\treturn [TriangleVisitor];\n\t}\n}\nTriangleCoordinatesVisitor.constructor_ = function () {\n\tthis._coordList = new CoordinateList();\n\tthis._triCoords = new ArrayList();\n};\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\nQuadEdgeSubdivision.constructor_ = function () {\n\tthis._visitedKey = 0;\n\tthis._quadEdges = new ArrayList();\n\tthis._startingEdge = null;\n\tthis._tolerance = null;\n\tthis._edgeCoincidenceTolerance = null;\n\tthis._frameVertex = new Array(3).fill(null);\n\tthis._frameEnv = null;\n\tthis._locator = null;\n\tthis._seg = new LineSegment();\n\tthis._triEdges = new Array(3).fill(null);\n\tlet env = arguments[0], tolerance = arguments[1];\n\tthis._tolerance = tolerance;\n\tthis._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n\tthis.createFrame(env);\n\tthis._startingEdge = this.initSubdiv();\n\tthis._locator = new LastFoundQuadEdgeLocator(this);\n};\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n","import Coordinate from '../geom/Coordinate';\nimport LineSegment from '../geom/LineSegment';\nexport default class Segment {\n\tconstructor() {\n\t\tSegment.constructor_.apply(this, arguments);\n\t}\n\tgetLineSegment() {\n\t\treturn this._ls;\n\t}\n\tgetEndZ() {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.z;\n\t}\n\tgetStartZ() {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.z;\n\t}\n\tintersection(s) {\n\t\treturn this._ls.intersection(s.getLineSegment());\n\t}\n\tgetStart() {\n\t\treturn this._ls.getCoordinate(0);\n\t}\n\tgetEnd() {\n\t\treturn this._ls.getCoordinate(1);\n\t}\n\tgetEndY() {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.y;\n\t}\n\tgetStartX() {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.x;\n\t}\n\tequalsTopo(s) {\n\t\treturn this._ls.equalsTopo(s.getLineSegment());\n\t}\n\tgetStartY() {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.y;\n\t}\n\tsetData(data) {\n\t\tthis._data = data;\n\t}\n\tgetData() {\n\t\treturn this._data;\n\t}\n\tgetEndX() {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.x;\n\t}\n\ttoString() {\n\t\treturn this._ls.toString();\n\t}\n\tgetClass() {\n\t\treturn Segment;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nSegment.constructor_ = function () {\n\tthis._ls = null;\n\tthis._data = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t} else if (arguments.length === 3) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], data = arguments[2];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t\tthis._data = data;\n\t} else if (arguments.length === 6) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5];\n\t\tSegment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n\t} else if (arguments.length === 7) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5], data = arguments[6];\n\t\tSegment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\n\t}\n};\n","import GeometryFactory from '../geom/GeometryFactory';\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder';\nimport ConstraintVertex from './ConstraintVertex';\nimport Coordinate from '../geom/Coordinate';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport Double from '../../../../java/lang/Double';\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator';\nimport Segment from './Segment';\nimport ConvexHull from '../algorithm/ConvexHull';\nimport KdTree from '../index/kdtree/KdTree';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default class ConformingDelaunayTriangulator {\n\tconstructor() {\n\t\tConformingDelaunayTriangulator.constructor_.apply(this, arguments);\n\t}\n\tstatic computeVertexEnvelope(vertices) {\n\t\tvar env = new Envelope();\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tenv.expandToInclude(v.getCoordinate());\n\t\t}\n\t\treturn env;\n\t}\n\tgetInitialVertices() {\n\t\treturn this._initialVertices;\n\t}\n\tgetKDT() {\n\t\treturn this._kdt;\n\t}\n\tenforceConstraints() {\n\t\tthis.addConstraintVertices();\n\t\tvar count = 0;\n\t\tvar splits = 0;\n\t\tdo {\n\t\t\tsplits = this.enforceGabriel(this._segments);\n\t\t\tcount++;\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n\t}\n\tinsertSites(vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t}\n\tgetVertexFactory() {\n\t\treturn this._vertexFactory;\n\t}\n\tgetPointArray() {\n\t\tvar pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._initialVertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\tfor (var i2 = this._segVertices.iterator(); i2.hasNext(); ) {\n\t\t\tvar v = i2.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\treturn pts;\n\t}\n\tsetConstraints(segments, segVertices) {\n\t\tthis._segments = segments;\n\t\tthis._segVertices = segVertices;\n\t}\n\tcomputeConvexHull() {\n\t\tvar fact = new GeometryFactory();\n\t\tvar coords = this.getPointArray();\n\t\tvar hull = new ConvexHull(coords, fact);\n\t\tthis._convexHull = hull.getConvexHull();\n\t}\n\taddConstraintVertices() {\n\t\tthis.computeConvexHull();\n\t\tthis.insertSites(this._segVertices);\n\t}\n\tfindNonGabrielPoint(seg) {\n\t\tvar p = seg.getStart();\n\t\tvar q = seg.getEnd();\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n\t\tvar segRadius = p.distance(midPt);\n\t\tvar env = new Envelope(midPt);\n\t\tenv.expandBy(segRadius);\n\t\tvar result = this._kdt.query(env);\n\t\tvar closestNonGabriel = null;\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tfor (var i = result.iterator(); i.hasNext(); ) {\n\t\t\tvar nextNode = i.next();\n\t\t\tvar testPt = nextNode.getCoordinate();\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n\t\t\tvar testRadius = midPt.distance(testPt);\n\t\t\tif (testRadius < segRadius) {\n\t\t\t\tvar testDist = testRadius;\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\n\t\t\t\t\tclosestNonGabriel = testPt;\n\t\t\t\t\tminDist = testDist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestNonGabriel;\n\t}\n\tgetConstraintSegments() {\n\t\treturn this._segments;\n\t}\n\tsetSplitPointFinder(splitFinder) {\n\t\tthis._splitFinder = splitFinder;\n\t}\n\tgetConvexHull() {\n\t\treturn this._convexHull;\n\t}\n\tgetTolerance() {\n\t\treturn this._tolerance;\n\t}\n\tenforceGabriel(segsToInsert) {\n\t\tvar newSegments = new ArrayList();\n\t\tvar splits = 0;\n\t\tvar segsToRemove = new ArrayList();\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext(); ) {\n\t\t\tvar seg = i.next();\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\n\t\t\tif (encroachPt === null) continue;\n\t\t\tthis._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt);\n\t\t\tvar splitVertex = this.createVertex(this._splitPt, seg);\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\n\t\t\tif (!insertedVertex.getCoordinate().equals2D(this._splitPt)) {}\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n\t\t\tnewSegments.add(s1);\n\t\t\tnewSegments.add(s2);\n\t\t\tsegsToRemove.add(seg);\n\t\t\tsplits = splits + 1;\n\t\t}\n\t\tsegsToInsert.removeAll(segsToRemove);\n\t\tsegsToInsert.addAll(newSegments);\n\t\treturn splits;\n\t}\n\tcreateVertex() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p);\n\t\t\treturn v;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], seg = arguments[1];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p);\n\t\t\tv.setOnConstraint(true);\n\t\t\treturn v;\n\t\t}\n\t}\n\tgetSubdivision() {\n\t\treturn this._subdiv;\n\t}\n\tcomputeBoundingBox() {\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices);\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices);\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\n\t\tallPointsEnv.expandToInclude(segEnv);\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\n\t\tvar delta = Math.max(deltaX, deltaY);\n\t\tthis._computeAreaEnv = new Envelope(allPointsEnv);\n\t\tthis._computeAreaEnv.expandBy(delta);\n\t}\n\tsetVertexFactory(vertexFactory) {\n\t\tthis._vertexFactory = vertexFactory;\n\t}\n\tformInitialDelaunay() {\n\t\tthis.computeBoundingBox();\n\t\tthis._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance);\n\t\tthis._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv));\n\t\tthis._incDel = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\tthis.insertSites(this._initialVertices);\n\t}\n\tinsertSite() {\n\t\tif (arguments[0] instanceof ConstraintVertex) {\n\t\t\tlet v = arguments[0];\n\t\t\tvar kdnode = this._kdt.insert(v.getCoordinate(), v);\n\t\t\tif (!kdnode.isRepeated()) {\n\t\t\t\tthis._incDel.insertSite(v);\n\t\t\t} else {\n\t\t\t\tvar snappedV = kdnode.getData();\n\t\t\t\tsnappedV.merge(v);\n\t\t\t\treturn snappedV;\n\t\t\t}\n\t\t\treturn v;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.insertSite(this.createVertex(p));\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn ConformingDelaunayTriangulator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nConformingDelaunayTriangulator.constructor_ = function () {\n\tthis._initialVertices = null;\n\tthis._segVertices = null;\n\tthis._segments = new ArrayList();\n\tthis._subdiv = null;\n\tthis._incDel = null;\n\tthis._convexHull = null;\n\tthis._splitFinder = new NonEncroachingSplitPointFinder();\n\tthis._kdt = null;\n\tthis._vertexFactory = null;\n\tthis._computeAreaEnv = null;\n\tthis._splitPt = null;\n\tthis._tolerance = null;\n\tlet initialVertices = arguments[0], tolerance = arguments[1];\n\tthis._initialVertices = new ArrayList(initialVertices);\n\tthis._tolerance = tolerance;\n\tthis._kdt = new KdTree(tolerance);\n};\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n","import CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport Vertex from './quadedge/Vertex';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default class DelaunayTriangulationBuilder {\n\tconstructor() {\n\t\tDelaunayTriangulationBuilder.constructor_.apply(this, arguments);\n\t}\n\tstatic extractUniqueCoordinates(geom) {\n\t\tif (geom === null) return new CoordinateList();\n\t\tvar coords = geom.getCoordinates();\n\t\treturn DelaunayTriangulationBuilder.unique(coords);\n\t}\n\tstatic envelope(coords) {\n\t\tvar env = new Envelope();\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\t\tvar coord = i.next();\n\t\t\tenv.expandToInclude(coord);\n\t\t}\n\t\treturn env;\n\t}\n\tstatic unique(coords) {\n\t\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\n\t\tArrays.sort(coordsCopy);\n\t\tvar coordList = new CoordinateList(coordsCopy, false);\n\t\treturn coordList;\n\t}\n\tstatic toVertices(coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\t\tvar coord = i.next();\n\t\t\tverts.add(new Vertex(coord));\n\t\t}\n\t\treturn verts;\n\t}\n\tcreate() {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t}\n\tsetTolerance(tolerance) {\n\t\tthis._tolerance = tolerance;\n\t}\n\tsetSites() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t}\n\tgetEdges(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t}\n\tgetSubdivision() {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t}\n\tgetTriangles(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t}\n\tgetClass() {\n\t\treturn DelaunayTriangulationBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nDelaunayTriangulationBuilder.constructor_ = function () {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n};\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator';\nimport ConstraintVertex from './ConstraintVertex';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport Segment from './Segment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default class ConformingDelaunayTriangulationBuilder {\n\tconstructor() {\n\t\tConformingDelaunayTriangulationBuilder.constructor_.apply(this, arguments);\n\t}\n\tstatic createConstraintSegments() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geom = arguments[0];\n\t\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\t\tvar constraintSegs = new ArrayList();\n\t\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\t\tvar line = i.next();\n\t\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n\t\t\t}\n\t\t\treturn constraintSegs;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet line = arguments[0], constraintSegs = arguments[1];\n\t\t\tvar coords = line.getCoordinates();\n\t\t\tfor (var i = 1; i < coords.length; i++) {\n\t\t\t\tconstraintSegs.add(new Segment(coords[i - 1], coords[i]));\n\t\t\t}\n\t\t}\n\t}\n\tcreateSiteVertices(coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\t\tvar coord = i.next();\n\t\t\tif (this._constraintVertexMap.containsKey(coord)) continue;\n\t\t\tverts.add(new ConstraintVertex(coord));\n\t\t}\n\t\treturn verts;\n\t}\n\tcreate() {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar segments = new ArrayList();\n\t\tif (this._constraintLines !== null) {\n\t\t\tsiteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal());\n\t\t\tthis.createVertices(this._constraintLines);\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines);\n\t\t}\n\t\tvar sites = this.createSiteVertices(this._siteCoords);\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this._tolerance);\n\t\tcdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()));\n\t\tcdt.formInitialDelaunay();\n\t\tcdt.enforceConstraints();\n\t\tthis._subdiv = cdt.getSubdivision();\n\t}\n\tsetTolerance(tolerance) {\n\t\tthis._tolerance = tolerance;\n\t}\n\tsetConstraints(constraintLines) {\n\t\tthis._constraintLines = constraintLines;\n\t}\n\tsetSites(geom) {\n\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t}\n\tgetEdges(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t}\n\tgetSubdivision() {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t}\n\tgetTriangles(geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t}\n\tcreateVertices(geom) {\n\t\tvar coords = geom.getCoordinates();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tvar v = new ConstraintVertex(coords[i]);\n\t\t\tthis._constraintVertexMap.put(coords[i], v);\n\t\t}\n\t}\n\tgetClass() {\n\t\treturn ConformingDelaunayTriangulationBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nConformingDelaunayTriangulationBuilder.constructor_ = function () {\n\tthis._siteCoords = null;\n\tthis._constraintLines = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._constraintVertexMap = new TreeMap();\n};\n","import Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class VoronoiDiagramBuilder {\n\tconstructor() {\n\t\tVoronoiDiagramBuilder.constructor_.apply(this, arguments);\n\t}\n\tstatic clipGeometryCollection(geom, clipEnv) {\n\t\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\n\t\tvar clipped = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar g = geom.getGeometryN(i);\n\t\t\tvar result = null;\n\t\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g; else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n\t\t\t\tresult = clipPoly.intersection(g);\n\t\t\t\tresult.setUserData(g.getUserData());\n\t\t\t}\n\t\t\tif (result !== null && !result.isEmpty()) {\n\t\t\t\tclipped.add(result);\n\t\t\t}\n\t\t}\n\t\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n\t}\n\tcreate() {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tthis._diagramEnv = siteEnv;\n\t\tvar expandBy = Math.max(this._diagramEnv.getWidth(), this._diagramEnv.getHeight());\n\t\tthis._diagramEnv.expandBy(expandBy);\n\t\tif (this._clipEnv !== null) this._diagramEnv.expandToInclude(this._clipEnv);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t}\n\tgetDiagram(geomFact) {\n\t\tthis.create();\n\t\tvar polys = this._subdiv.getVoronoiDiagram(geomFact);\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv);\n\t}\n\tsetTolerance(tolerance) {\n\t\tthis._tolerance = tolerance;\n\t}\n\tsetSites() {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t}\n\tsetClipEnvelope(clipEnv) {\n\t\tthis._clipEnv = clipEnv;\n\t}\n\tgetSubdivision() {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t}\n\tgetClass() {\n\t\treturn VoronoiDiagramBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nVoronoiDiagramBuilder.constructor_ = function () {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._clipEnv = null;\n\tthis._diagramEnv = null;\n};\n","import Coordinate from '../geom/Coordinate';\nimport LineSegment from '../geom/LineSegment';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default class LinearLocation {\n\tconstructor() {\n\t\tLinearLocation.constructor_.apply(this, arguments);\n\t}\n\tstatic getEndLocation(linear) {\n\t\tvar loc = new LinearLocation();\n\t\tloc.setToEnd(linear);\n\t\treturn loc;\n\t}\n\tstatic pointAlongSegmentByFraction(p0, p1, frac) {\n\t\tif (frac <= 0.0) return p0;\n\t\tif (frac >= 1.0) return p1;\n\t\tvar x = (p1.x - p0.x) * frac + p0.x;\n\t\tvar y = (p1.y - p0.y) * frac + p0.y;\n\t\tvar z = (p1.z - p0.z) * frac + p0.z;\n\t\treturn new Coordinate(x, y, z);\n\t}\n\tstatic compareLocationValues(componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n\t\tif (componentIndex0 < componentIndex1) return -1;\n\t\tif (componentIndex0 > componentIndex1) return 1;\n\t\tif (segmentIndex0 < segmentIndex1) return -1;\n\t\tif (segmentIndex0 > segmentIndex1) return 1;\n\t\tif (segmentFraction0 < segmentFraction1) return -1;\n\t\tif (segmentFraction0 > segmentFraction1) return 1;\n\t\treturn 0;\n\t}\n\tgetSegmentIndex() {\n\t\treturn this._segmentIndex;\n\t}\n\tgetComponentIndex() {\n\t\treturn this._componentIndex;\n\t}\n\tisEndpoint(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\treturn this._segmentIndex >= nseg || this._segmentIndex === nseg && this._segmentFraction >= 1.0;\n\t}\n\tisValid(linearGeom) {\n\t\tif (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false;\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tif (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false;\n\t\tif (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false;\n\t\tif (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false;\n\t\treturn true;\n\t}\n\tnormalize() {\n\t\tif (this._segmentFraction < 0.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction > 1.0) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t\tif (this._componentIndex < 0) {\n\t\t\tthis._componentIndex = 0;\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentIndex < 0) {\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction === 1.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t\tthis._segmentIndex += 1;\n\t\t}\n\t}\n\ttoLowest(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\tif (this._segmentIndex < nseg) return this;\n\t\treturn new LinearLocation(this._componentIndex, nseg, 1.0, false);\n\t}\n\tgetCoordinate(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) return p0;\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction);\n\t}\n\tgetSegmentFraction() {\n\t\treturn this._segmentFraction;\n\t}\n\tgetSegment(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) {\n\t\t\tvar prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2);\n\t\t\treturn new LineSegment(prev, p0);\n\t\t}\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn new LineSegment(p0, p1);\n\t}\n\tclamp(linear) {\n\t\tif (this._componentIndex >= linear.getNumGeometries()) {\n\t\t\tthis.setToEnd(linear);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._segmentIndex >= linear.getNumPoints()) {\n\t\t\tvar line = linear.getGeometryN(this._componentIndex);\n\t\t\tthis._segmentIndex = line.getNumPoints() - 1;\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t}\n\tsetToEnd(linear) {\n\t\tthis._componentIndex = linear.getNumGeometries() - 1;\n\t\tvar lastLine = linear.getGeometryN(this._componentIndex);\n\t\tthis._segmentIndex = lastLine.getNumPoints() - 1;\n\t\tthis._segmentFraction = 1.0;\n\t}\n\tcompareTo(o) {\n\t\tvar other = o;\n\t\tif (this._componentIndex < other._componentIndex) return -1;\n\t\tif (this._componentIndex > other._componentIndex) return 1;\n\t\tif (this._segmentIndex < other._segmentIndex) return -1;\n\t\tif (this._segmentIndex > other._segmentIndex) return 1;\n\t\tif (this._segmentFraction < other._segmentFraction) return -1;\n\t\tif (this._segmentFraction > other._segmentFraction) return 1;\n\t\treturn 0;\n\t}\n\tcopy() {\n\t\treturn new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction);\n\t}\n\ttoString() {\n\t\treturn \"LinearLoc[\" + this._componentIndex + \", \" + this._segmentIndex + \", \" + this._segmentFraction + \"]\";\n\t}\n\tisOnSameSegment(loc) {\n\t\tif (this._componentIndex !== loc._componentIndex) return false;\n\t\tif (this._segmentIndex === loc._segmentIndex) return true;\n\t\tif (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true;\n\t\tif (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true;\n\t\treturn false;\n\t}\n\tsnapToVertex(linearGeom, minDistance) {\n\t\tif (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null;\n\t\tvar segLen = this.getSegmentLength(linearGeom);\n\t\tvar lenToStart = this._segmentFraction * segLen;\n\t\tvar lenToEnd = segLen - lenToStart;\n\t\tif (lenToStart <= lenToEnd && lenToStart < minDistance) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t} else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t}\n\tcompareLocationValues(componentIndex1, segmentIndex1, segmentFraction1) {\n\t\tif (this._componentIndex < componentIndex1) return -1;\n\t\tif (this._componentIndex > componentIndex1) return 1;\n\t\tif (this._segmentIndex < segmentIndex1) return -1;\n\t\tif (this._segmentIndex > segmentIndex1) return 1;\n\t\tif (this._segmentFraction < segmentFraction1) return -1;\n\t\tif (this._segmentFraction > segmentFraction1) return 1;\n\t\treturn 0;\n\t}\n\tgetSegmentLength(linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar segIndex = this._segmentIndex;\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2;\n\t\tvar p0 = lineComp.getCoordinateN(segIndex);\n\t\tvar p1 = lineComp.getCoordinateN(segIndex + 1);\n\t\treturn p0.distance(p1);\n\t}\n\tisVertex() {\n\t\treturn this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0;\n\t}\n\tgetClass() {\n\t\treturn LinearLocation;\n\t}\n\tget interfaces_() {\n\t\treturn [Comparable];\n\t}\n}\nLinearLocation.constructor_ = function () {\n\tthis._componentIndex = 0;\n\tthis._segmentIndex = 0;\n\tthis._segmentFraction = 0.0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet loc = arguments[0];\n\t\tthis._componentIndex = loc._componentIndex;\n\t\tthis._segmentIndex = loc._segmentIndex;\n\t\tthis._segmentFraction = loc._segmentFraction;\n\t} else if (arguments.length === 2) {\n\t\tlet segmentIndex = arguments[0], segmentFraction = arguments[1];\n\t\tLinearLocation.constructor_.call(this, 0, segmentIndex, segmentFraction);\n\t} else if (arguments.length === 3) {\n\t\tlet componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tthis.normalize();\n\t} else if (arguments.length === 4) {\n\t\tlet componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2], doNormalize = arguments[3];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tif (doNormalize) this.normalize();\n\t}\n};\n","import hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Lineal from '../geom/Lineal';\nexport default class LinearIterator {\n\tconstructor() {\n\t\tLinearIterator.constructor_.apply(this, arguments);\n\t}\n\tstatic segmentEndVertexIndex(loc) {\n\t\tif (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1;\n\t\treturn loc.getSegmentIndex();\n\t}\n\tgetComponentIndex() {\n\t\treturn this._componentIndex;\n\t}\n\tgetLine() {\n\t\treturn this._currentLine;\n\t}\n\tgetVertexIndex() {\n\t\treturn this._vertexIndex;\n\t}\n\tgetSegmentEnd() {\n\t\tif (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1);\n\t\treturn null;\n\t}\n\tnext() {\n\t\tif (!this.hasNext()) return null;\n\t\tthis._vertexIndex++;\n\t\tif (this._vertexIndex >= this._currentLine.getNumPoints()) {\n\t\t\tthis._componentIndex++;\n\t\t\tthis.loadCurrentLine();\n\t\t\tthis._vertexIndex = 0;\n\t\t}\n\t}\n\tloadCurrentLine() {\n\t\tif (this._componentIndex >= this._numLines) {\n\t\t\tthis._currentLine = null;\n\t\t\treturn null;\n\t\t}\n\t\tthis._currentLine = this._linearGeom.getGeometryN(this._componentIndex);\n\t}\n\tgetSegmentStart() {\n\t\treturn this._currentLine.getCoordinateN(this._vertexIndex);\n\t}\n\tisEndOfLine() {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false;\n\t\treturn true;\n\t}\n\thasNext() {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false;\n\t\treturn true;\n\t}\n\tgetClass() {\n\t\treturn LinearIterator;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLinearIterator.constructor_ = function () {\n\tthis._linearGeom = null;\n\tthis._numLines = null;\n\tthis._currentLine = null;\n\tthis._componentIndex = 0;\n\tthis._vertexIndex = 0;\n\tif (arguments.length === 1) {\n\t\tlet linear = arguments[0];\n\t\tLinearIterator.constructor_.call(this, linear, 0, 0);\n\t} else if (arguments.length === 2) {\n\t\tlet linear = arguments[0], start = arguments[1];\n\t\tLinearIterator.constructor_.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start));\n\t} else if (arguments.length === 3) {\n\t\tlet linearGeom = arguments[0], componentIndex = arguments[1], vertexIndex = arguments[2];\n\t\tif (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException(\"Lineal geometry is required\");\n\t\tthis._linearGeom = linearGeom;\n\t\tthis._numLines = linearGeom.getNumGeometries();\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._vertexIndex = vertexIndex;\n\t\tthis.loadCurrentLine();\n\t}\n};\n","import LinearIterator from './LinearIterator';\nimport LinearLocation from './LinearLocation';\nimport Double from '../../../../java/lang/Double';\nimport LineSegment from '../geom/LineSegment';\nimport Assert from '../util/Assert';\nexport default class LocationIndexOfPoint {\n\tconstructor() {\n\t\tLocationIndexOfPoint.constructor_.apply(this, arguments);\n\t}\n\tstatic indexOf(linearGeom, inputPt) {\n\t\tvar locater = new LocationIndexOfPoint(linearGeom);\n\t\treturn locater.indexOf(inputPt);\n\t}\n\tstatic indexOfAfter(linearGeom, inputPt, minIndex) {\n\t\tvar locater = new LocationIndexOfPoint(linearGeom);\n\t\treturn locater.indexOfAfter(inputPt, minIndex);\n\t}\n\tindexOf(inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, null);\n\t}\n\tindexOfFromStart(inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar minComponentIndex = 0;\n\t\tvar minSegmentIndex = 0;\n\t\tvar minFrac = -1.0;\n\t\tvar seg = new LineSegment();\n\t\tfor (var it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segFrac = seg.segmentFraction(inputPt);\n\t\t\t\tvar candidateComponentIndex = it.getComponentIndex();\n\t\t\t\tvar candidateSegmentIndex = it.getVertexIndex();\n\t\t\t\tif (segDistance < minDistance) {\n\t\t\t\t\tif (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n\t\t\t\t\t\tminComponentIndex = candidateComponentIndex;\n\t\t\t\t\t\tminSegmentIndex = candidateSegmentIndex;\n\t\t\t\t\t\tminFrac = segFrac;\n\t\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (minDistance === Double.MAX_VALUE) {\n\t\t\treturn new LinearLocation(minIndex);\n\t\t}\n\t\tvar loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac);\n\t\treturn loc;\n\t}\n\tindexOfAfter(inputPt, minIndex) {\n\t\tif (minIndex === null) return this.indexOf(inputPt);\n\t\tvar endLoc = LinearLocation.getEndLocation(this._linearGeom);\n\t\tif (endLoc.compareTo(minIndex) <= 0) return endLoc;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter.compareTo(minIndex) >= 0, \"computed location is before specified minimum location\");\n\t\treturn closestAfter;\n\t}\n\tgetClass() {\n\t\treturn LocationIndexOfPoint;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLocationIndexOfPoint.constructor_ = function () {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n};\n","import LocationIndexOfPoint from './LocationIndexOfPoint';\nexport default class LocationIndexOfLine {\n\tconstructor() {\n\t\tLocationIndexOfLine.constructor_.apply(this, arguments);\n\t}\n\tstatic indicesOf(linearGeom, subLine) {\n\t\tvar locater = new LocationIndexOfLine(linearGeom);\n\t\treturn locater.indicesOf(subLine);\n\t}\n\tindicesOf(subLine) {\n\t\tvar startPt = subLine.getGeometryN(0).getCoordinateN(0);\n\t\tvar lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1);\n\t\tvar endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1);\n\t\tvar locPt = new LocationIndexOfPoint(this._linearGeom);\n\t\tvar subLineLoc = new Array(2).fill(null);\n\t\tsubLineLoc[0] = locPt.indexOf(startPt);\n\t\tif (subLine.getLength() === 0.0) {\n\t\t\tsubLineLoc[1] = subLineLoc[0].copy();\n\t\t} else {\n\t\t\tsubLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0]);\n\t\t}\n\t\treturn subLineLoc;\n\t}\n\tgetClass() {\n\t\treturn LocationIndexOfLine;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLocationIndexOfLine.constructor_ = function () {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default class LinearGeometryBuilder {\n\tconstructor() {\n\t\tLinearGeometryBuilder.constructor_.apply(this, arguments);\n\t}\n\tgetGeometry() {\n\t\tthis.endLine();\n\t\treturn this._geomFact.buildGeometry(this._lines);\n\t}\n\tgetLastCoordinate() {\n\t\treturn this._lastPt;\n\t}\n\tendLine() {\n\t\tif (this._coordList === null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._ignoreInvalidLines && this._coordList.size() < 2) {\n\t\t\tthis._coordList = null;\n\t\t\treturn null;\n\t\t}\n\t\tvar rawPts = this._coordList.toCoordinateArray();\n\t\tvar pts = rawPts;\n\t\tif (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts);\n\t\tthis._coordList = null;\n\t\tvar line = null;\n\t\ttry {\n\t\t\tline = this._geomFact.createLineString(pts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof IllegalArgumentException) {\n\t\t\t\tif (!this._ignoreInvalidLines) throw ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (line !== null) this._lines.add(line);\n\t}\n\tsetFixInvalidLines(fixInvalidLines) {\n\t\tthis._fixInvalidLines = fixInvalidLines;\n\t}\n\tadd() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.add(pt, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet pt = arguments[0], allowRepeatedPoints = arguments[1];\n\t\t\tif (this._coordList === null) this._coordList = new CoordinateList();\n\t\t\tthis._coordList.add(pt, allowRepeatedPoints);\n\t\t\tthis._lastPt = pt;\n\t\t}\n\t}\n\tsetIgnoreInvalidLines(ignoreInvalidLines) {\n\t\tthis._ignoreInvalidLines = ignoreInvalidLines;\n\t}\n\tvalidCoordinateSequence(pts) {\n\t\tif (pts.length >= 2) return pts;\n\t\tvar validPts = [pts[0], pts[0]];\n\t\treturn validPts;\n\t}\n\tgetClass() {\n\t\treturn LinearGeometryBuilder;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLinearGeometryBuilder.constructor_ = function () {\n\tthis._geomFact = null;\n\tthis._lines = new ArrayList();\n\tthis._coordList = null;\n\tthis._ignoreInvalidLines = false;\n\tthis._fixInvalidLines = false;\n\tthis._lastPt = null;\n\tlet geomFact = arguments[0];\n\tthis._geomFact = geomFact;\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport LinearIterator from './LinearIterator';\nimport Assert from '../util/Assert';\nimport LinearGeometryBuilder from './LinearGeometryBuilder';\nimport MultiLineString from '../geom/MultiLineString';\nexport default class ExtractLineByLocation {\n\tconstructor() {\n\t\tExtractLineByLocation.constructor_.apply(this, arguments);\n\t}\n\tstatic extract(line, start, end) {\n\t\tvar ls = new ExtractLineByLocation(line);\n\t\treturn ls.extract(start, end);\n\t}\n\tcomputeLinear(start, end) {\n\t\tvar builder = new LinearGeometryBuilder(this._line.getFactory());\n\t\tbuilder.setFixInvalidLines(true);\n\t\tif (!start.isVertex()) builder.add(start.getCoordinate(this._line));\n\t\tfor (var it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n\t\t\tif (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break;\n\t\t\tvar pt = it.getSegmentStart();\n\t\t\tbuilder.add(pt);\n\t\t\tif (it.isEndOfLine()) builder.endLine();\n\t\t}\n\t\tif (!end.isVertex()) builder.add(end.getCoordinate(this._line));\n\t\treturn builder.getGeometry();\n\t}\n\tcomputeLine(start, end) {\n\t\tvar coordinates = this._line.getCoordinates();\n\t\tvar newCoordinates = new CoordinateList();\n\t\tvar startSegmentIndex = start.getSegmentIndex();\n\t\tif (start.getSegmentFraction() > 0.0) startSegmentIndex += 1;\n\t\tvar lastSegmentIndex = end.getSegmentIndex();\n\t\tif (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1;\n\t\tif (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1;\n\t\tif (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line));\n\t\tfor (var i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n\t\t\tnewCoordinates.add(coordinates[i]);\n\t\t}\n\t\tif (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line));\n\t\tif (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line));\n\t\tvar newCoordinateArray = newCoordinates.toCoordinateArray();\n\t\tif (newCoordinateArray.length <= 1) {\n\t\t\tnewCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]];\n\t\t}\n\t\treturn this._line.getFactory().createLineString(newCoordinateArray);\n\t}\n\textract(start, end) {\n\t\tif (end.compareTo(start) < 0) {\n\t\t\treturn this.reverse(this.computeLinear(end, start));\n\t\t}\n\t\treturn this.computeLinear(start, end);\n\t}\n\treverse(linear) {\n\t\tif (linear instanceof LineString) return linear.reverse();\n\t\tif (linear instanceof MultiLineString) return linear.reverse();\n\t\tAssert.shouldNeverReachHere(\"non-linear geometry encountered\");\n\t\treturn null;\n\t}\n\tgetClass() {\n\t\treturn ExtractLineByLocation;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nExtractLineByLocation.constructor_ = function () {\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n};\n","import LineString from '../geom/LineString';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport LinearLocation from './LinearLocation';\nimport LocationIndexOfPoint from './LocationIndexOfPoint';\nimport LocationIndexOfLine from './LocationIndexOfLine';\nimport ExtractLineByLocation from './ExtractLineByLocation';\nimport MultiLineString from '../geom/MultiLineString';\nexport default class LocationIndexedLine {\n\tconstructor() {\n\t\tLocationIndexedLine.constructor_.apply(this, arguments);\n\t}\n\tclampIndex(index) {\n\t\tvar loc = index.copy();\n\t\tloc.clamp(this._linearGeom);\n\t\treturn loc;\n\t}\n\tproject(pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t}\n\tcheckGeometryType() {\n\t\tif (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException(\"Input geometry must be linear\");\n\t}\n\textractPoint() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\treturn index.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], offsetDistance = arguments[1];\n\t\t\tvar indexLow = index.toLowest(this._linearGeom);\n\t\t\treturn indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t}\n\tisValidIndex(index) {\n\t\treturn index.isValid(this._linearGeom);\n\t}\n\tgetEndIndex() {\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t}\n\tgetStartIndex() {\n\t\treturn new LinearLocation();\n\t}\n\tindexOfAfter(pt, minIndex) {\n\t\treturn LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t}\n\textractLine(startIndex, endIndex) {\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex);\n\t}\n\tindexOf(pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t}\n\tindicesOf(subLine) {\n\t\treturn LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t}\n\tgetClass() {\n\t\treturn LocationIndexedLine;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLocationIndexedLine.constructor_ = function () {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n\tthis.checkGeometryType();\n};\n","import LinearIterator from './LinearIterator';\nimport Double from '../../../../java/lang/Double';\nimport LineSegment from '../geom/LineSegment';\nimport Assert from '../util/Assert';\nexport default class LengthIndexOfPoint {\n\tconstructor() {\n\t\tLengthIndexOfPoint.constructor_.apply(this, arguments);\n\t}\n\tstatic indexOf(linearGeom, inputPt) {\n\t\tvar locater = new LengthIndexOfPoint(linearGeom);\n\t\treturn locater.indexOf(inputPt);\n\t}\n\tstatic indexOfAfter(linearGeom, inputPt, minIndex) {\n\t\tvar locater = new LengthIndexOfPoint(linearGeom);\n\t\treturn locater.indexOfAfter(inputPt, minIndex);\n\t}\n\tindexOf(inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, -1.0);\n\t}\n\tindexOfFromStart(inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar ptMeasure = minIndex;\n\t\tvar segmentStartMeasure = 0.0;\n\t\tvar seg = new LineSegment();\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure);\n\t\t\t\tif (segDistance < minDistance && segMeasureToPt > minIndex) {\n\t\t\t\t\tptMeasure = segMeasureToPt;\n\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t}\n\t\t\t\tsegmentStartMeasure += seg.getLength();\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn ptMeasure;\n\t}\n\tindexOfAfter(inputPt, minIndex) {\n\t\tif (minIndex < 0.0) return this.indexOf(inputPt);\n\t\tvar endIndex = this._linearGeom.getLength();\n\t\tif (endIndex < minIndex) return endIndex;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter >= minIndex, \"computed index is before specified minimum index\");\n\t\treturn closestAfter;\n\t}\n\tsegmentNearestMeasure(seg, inputPt, segmentStartMeasure) {\n\t\tvar projFactor = seg.projectionFactor(inputPt);\n\t\tif (projFactor <= 0.0) return segmentStartMeasure;\n\t\tif (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength();\n\t\treturn segmentStartMeasure + seg.getLength();\n\t}\n\tgetClass() {\n\t\treturn LengthIndexOfPoint;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLengthIndexOfPoint.constructor_ = function () {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n};\n","import LinearIterator from './LinearIterator';\nimport LinearLocation from './LinearLocation';\nexport default class LengthLocationMap {\n\tconstructor() {\n\t\tLengthLocationMap.constructor_.apply(this, arguments);\n\t}\n\tstatic getLength(linearGeom, loc) {\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLength(loc);\n\t}\n\tstatic getLocation() {\n\t\tif (arguments.length === 2) {\n\t\t\tlet linearGeom = arguments[0], length = arguments[1];\n\t\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\t\treturn locater.getLocation(length);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet linearGeom = arguments[0], length = arguments[1], resolveLower = arguments[2];\n\t\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\t\treturn locater.getLocation(length, resolveLower);\n\t\t}\n\t}\n\tgetLength(loc) {\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n\t\t\t\t\treturn totalLength + segLen * loc.getSegmentFraction();\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn totalLength;\n\t}\n\tresolveHigher(loc) {\n\t\tif (!loc.isEndpoint(this._linearGeom)) return loc;\n\t\tvar compIndex = loc.getComponentIndex();\n\t\tif (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc;\n\t\tdo {\n\t\t\tcompIndex++;\n\t\t} while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0);\n\t\treturn new LinearLocation(compIndex, 0, 0.0);\n\t}\n\tgetLocation() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet length = arguments[0];\n\t\t\treturn this.getLocation(length, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], resolveLower = arguments[1];\n\t\t\tvar forwardLength = length;\n\t\t\tif (length < 0.0) {\n\t\t\t\tvar lineLen = this._linearGeom.getLength();\n\t\t\t\tforwardLength = lineLen + length;\n\t\t\t}\n\t\t\tvar loc = this.getLocationForward(forwardLength);\n\t\t\tif (resolveLower) {\n\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn this.resolveHigher(loc);\n\t\t}\n\t}\n\tgetLocationForward(length) {\n\t\tif (length <= 0.0) return new LinearLocation();\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (it.isEndOfLine()) {\n\t\t\t\tif (totalLength === length) {\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, 0.0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (totalLength + segLen > length) {\n\t\t\t\t\tvar frac = (length - totalLength) / segLen;\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, frac);\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t}\n\tgetClass() {\n\t\treturn LengthLocationMap;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLengthLocationMap.constructor_ = function () {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n};\n","import LocationIndexedLine from './LocationIndexedLine';\nimport LengthIndexOfPoint from './LengthIndexOfPoint';\nimport LocationIndexOfLine from './LocationIndexOfLine';\nimport LengthLocationMap from './LengthLocationMap';\nimport ExtractLineByLocation from './ExtractLineByLocation';\nexport default class LengthIndexedLine {\n\tconstructor() {\n\t\tLengthIndexedLine.constructor_.apply(this, arguments);\n\t}\n\tclampIndex(index) {\n\t\tvar posIndex = this.positiveIndex(index);\n\t\tvar startIndex = this.getStartIndex();\n\t\tif (posIndex < startIndex) return startIndex;\n\t\tvar endIndex = this.getEndIndex();\n\t\tif (posIndex > endIndex) return endIndex;\n\t\treturn posIndex;\n\t}\n\tlocationOf() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], resolveLower = arguments[1];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index, resolveLower);\n\t\t}\n\t}\n\tproject(pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t}\n\tpositiveIndex(index) {\n\t\tif (index >= 0.0) return index;\n\t\treturn this._linearGeom.getLength() + index;\n\t}\n\textractPoint() {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\treturn loc.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], offsetDistance = arguments[1];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\tvar locLow = loc.toLowest(this._linearGeom);\n\t\t\treturn locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t}\n\tisValidIndex(index) {\n\t\treturn index >= this.getStartIndex() && index <= this.getEndIndex();\n\t}\n\tgetEndIndex() {\n\t\treturn this._linearGeom.getLength();\n\t}\n\tgetStartIndex() {\n\t\treturn 0.0;\n\t}\n\tindexOfAfter(pt, minIndex) {\n\t\treturn LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t}\n\textractLine(startIndex, endIndex) {\n\t\tvar lil = new LocationIndexedLine(this._linearGeom);\n\t\tvar startIndex2 = this.clampIndex(startIndex);\n\t\tvar endIndex2 = this.clampIndex(endIndex);\n\t\tvar resolveStartLower = startIndex2 === endIndex2;\n\t\tvar startLoc = this.locationOf(startIndex2, resolveStartLower);\n\t\tvar endLoc = this.locationOf(endIndex2);\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc);\n\t}\n\tindexOf(pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t}\n\tindicesOf(subLine) {\n\t\tvar locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t\tvar index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])];\n\t\treturn index;\n\t}\n\tgetClass() {\n\t\treturn LengthIndexedLine;\n\t}\n\tget interfaces_() {\n\t\treturn [];\n\t}\n}\nLengthIndexedLine.constructor_ = function () {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n};\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport OverlayOp from '../overlay/OverlayOp';\nexport default class UnionOp {\n\tget interfaces_() {\n\t\treturn [];\n\t}\n\tgetClass() {\n\t\treturn UnionOp;\n\t}\n\tstatic union(g, other) {\n\t\tif (g.isEmpty() || other.isEmpty()) {\n\t\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n\t\t\tif (g.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return g.copy();\n\t\t}\n\t\tg.checkNotGeometryCollection(g);\n\t\tg.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n\t}\n}","import WKTWriter from './io/WKTWriter';\nimport IsValidOp from './operation/valid/IsValidOp';\nimport InteriorPointArea from './algorithm/InteriorPointArea';\nimport UnaryUnionOp from './operation/union/UnaryUnionOp';\nimport UnionOp from './operation/union/UnionOp';\nimport InteriorPointLine from './algorithm/InteriorPointLine';\nimport IsSimpleOp from './operation/IsSimpleOp';\nimport BufferOp from './operation/buffer/BufferOp';\nimport ConvexHull from './algorithm/ConvexHull';\nimport Centroid from './algorithm/Centroid';\nimport RelateOp from './operation/relate/RelateOp';\nimport InteriorPointPoint from './algorithm/InteriorPointPoint';\nimport DistanceOp from './operation/distance/DistanceOp';\nimport OverlayOp from './operation/overlay/OverlayOp';\nimport Geometry from './geom/Geometry';\n\nGeometry.prototype.equalsTopo = function (g) {\n\tif (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\n\treturn RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\n}\nGeometry.prototype.union = function() {\n\tif (arguments.length === 0) {\n\t\treturn UnaryUnionOp.union(this);\n\t} else if (arguments.length === 1) {\n\t\tlet other = arguments[0];\n\t\treturn UnionOp.union(this, other);\n\t}\n}\nGeometry.prototype.isValid = function() {\n\treturn IsValidOp.isValid(this);\n}\nGeometry.prototype.intersection = function(other) {\n\treturn OverlayOp.intersection(this, other);\n}\nGeometry.prototype.covers = function(g) {\n\treturn RelateOp.covers(this, g);\n}\nGeometry.prototype.coveredBy = function(g) {\n\treturn RelateOp.covers(g, this);\n}\nGeometry.prototype.touches = function(g) {\n\treturn RelateOp.touches(this, g);\n}\nGeometry.prototype.intersects = function(g) {\n\treturn RelateOp.intersects(this, g);\n}\nGeometry.prototype.within = function(g) {\n\treturn RelateOp.contains(g, this);\n}\nGeometry.prototype.overlaps = function(g) {\n\treturn RelateOp.overlaps(this, g);\n}\nGeometry.prototype.disjoint = function(g) {\n\treturn RelateOp.disjoint(this, g);\n}\nGeometry.prototype.crosses = function(g) {\n\treturn RelateOp.crosses(this, g);\n}\nGeometry.prototype.buffer = function() {\n\tif (arguments.length === 1) {\n\t\tlet distance = arguments[0];\n\t\treturn BufferOp.bufferOp(this, distance);\n\t} else if (arguments.length === 2) {\n\t\tlet distance = arguments[0], quadrantSegments = arguments[1];\n\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments);\n\t} else if (arguments.length === 3) {\n\t\tlet distance = arguments[0], quadrantSegments = arguments[1], endCapStyle = arguments[2];\n\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle);\n\t}\n}\nGeometry.prototype.convexHull = function() {\n\treturn new ConvexHull(this).getConvexHull();\n}\nGeometry.prototype.relate = function(...args) {\n\tif (arguments.length === 1) {\n\t\tlet geometry = arguments[0];\n\t\treturn RelateOp.relate(this, geometry);\n\t} else if (arguments.length === 2) {\n\t\tlet geometry = arguments[0], intersectionPattern = arguments[1];\n\t\treturn RelateOp.relate(this, geometry).matches(intersectionPattern);\n\t}\n}\nGeometry.prototype.getCentroid = function() {\n\tif (this.isEmpty()) return this._factory.createPoint();\n\tvar centPt = Centroid.getCentroid(this);\n\treturn this.createPointFromInternalCoord(centPt, this);\n}\nGeometry.prototype.getInteriorPoint = function() {\n\tif (this.isEmpty()) return this._factory.createPoint();\n\tvar interiorPt = null;\n\tvar dim = this.getDimension();\n\tif (dim === 0) {\n\t\tvar intPt = new InteriorPointPoint(this);\n\t\tinteriorPt = intPt.getInteriorPoint();\n\t} else if (dim === 1) {\n\t\tvar intPt = new InteriorPointLine(this);\n\t\tinteriorPt = intPt.getInteriorPoint();\n\t} else {\n\t\tvar intPt = new InteriorPointArea(this);\n\t\tinteriorPt = intPt.getInteriorPoint();\n\t}\n\treturn this.createPointFromInternalCoord(interiorPt, this);\n}\nGeometry.prototype.symDifference = function(other) {\n\treturn OverlayOp.symDifference(this, other);\n}\nGeometry.prototype.createPointFromInternalCoord = function(coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n}\nGeometry.prototype.toText = function() {\n\tvar writer = new WKTWriter();\n\treturn writer.write(this);\n}\nGeometry.prototype.toString = function() {\n\tthis.toText();\n}\nGeometry.prototype.contains = function(g) {\n\treturn RelateOp.contains(this, g);\n}\nGeometry.prototype.difference = function(other) {\n\treturn OverlayOp.difference(this, other);\n}\nGeometry.prototype.isSimple = function() {\n\tvar op = new IsSimpleOp(this);\n\treturn op.isSimple();\n}\nGeometry.prototype.isWithinDistance = function(geom, distance) {\n\tvar envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\n\tif (envDist > distance) return false;\n\treturn DistanceOp.isWithinDistance(this, geom, distance);\n}\nGeometry.prototype.distance = function(g) {\n\treturn DistanceOp.distance(this, g);\n}\nGeometry.prototype.isEquivalentClass = function(other) {\n\treturn this.getClass() === other.getClass();\n}\n\n","import './Array'\nimport './Number'\nimport './Math'\n\nimport * as geom from './org/locationtech/jts/geom'\nimport * as algorithm from './org/locationtech/jts/algorithm'\nimport * as densify from './org/locationtech/jts/densify'\nimport * as dissolve from './org/locationtech/jts/dissolve'\nimport * as geomgraph from './org/locationtech/jts/geomgraph'\nimport * as index from './org/locationtech/jts/index'\nimport * as io from './org/locationtech/jts/io'\nimport * as noding from './org/locationtech/jts/noding'\nimport * as operation from './org/locationtech/jts/operation'\nimport * as precision from './org/locationtech/jts/precision'\nimport * as simplify from './org/locationtech/jts/simplify'\nimport * as triangulate from './org/locationtech/jts/triangulate'\nimport * as linearref from './org/locationtech/jts/linearref'\n\nimport './org/locationtech/jts/monkey'\n\nconst version = 'npm_package_version (git_hash)'\nexport {\n  version,\n  algorithm,\n  densify,\n  dissolve,\n  geom,\n  geomgraph,\n  index,\n  io,\n  noding,\n  operation,\n  precision,\n  simplify,\n  triangulate,\n  linearref\n}\n"],"names":["Cloneable","IndexOutOfBoundsException","Map","Iterator_","MapInterface","Node","IntersectsOp","parse","extract","MonotoneChain","SegmentIntersector","GraphComponent","DirectedEdge","Edge","DirectedEdgeStar","NodeMap","PlanarGraph","EdgeRing"],"mappings":"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"}